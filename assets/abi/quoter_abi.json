{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "factory_",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "prod1",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "denominator",
                    "type": "uint256"
                }
            ],
            "name": "PRBMath__MulDivOverflow",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenIn",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "tokenOut",
                    "type": "address"
                },
                {
                    "internalType": "uint24",
                    "name": "fee",
                    "type": "uint24"
                },
                {
                    "internalType": "int24",
                    "name": "lowerTick",
                    "type": "int24"
                },
                {
                    "internalType": "int24",
                    "name": "upperTick",
                    "type": "int24"
                },
                {
                    "internalType": "uint256",
                    "name": "amountInDesired",
                    "type": "uint256"
                }
            ],
            "name": "quoteLiqInputToken0",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "amount1",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenIn",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "tokenOut",
                    "type": "address"
                },
                {
                    "internalType": "uint24",
                    "name": "fee",
                    "type": "uint24"
                },
                {
                    "internalType": "int24",
                    "name": "lowerTick",
                    "type": "int24"
                },
                {
                    "internalType": "int24",
                    "name": "upperTick",
                    "type": "int24"
                },
                {
                    "internalType": "uint256",
                    "name": "amountInDesired",
                    "type": "uint256"
                }
            ],
            "name": "quoteLiqInputToken1",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "amount0",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "path",
                    "type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                }
            ],
            "name": "quoteMulti",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256"
                },
                {
                    "internalType": "uint160[]",
                    "name": "sqrtPriceX96AfterList",
                    "type": "uint160[]"
                },
                {
                    "internalType": "int24[]",
                    "name": "tickAfterList",
                    "type": "int24[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenIn",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "tokenOut",
                    "type": "address"
                },
                {
                    "internalType": "uint24",
                    "name": "fee",
                    "type": "uint24"
                },
                {
                    "internalType": "uint256",
                    "name": "amountIn",
                    "type": "uint256"
                },
                {
                    "internalType": "uint160",
                    "name": "sqrtPriceLimitX96",
                    "type": "uint160"
                }
            ],
            "name": "quoteSingle",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "amountOut",
                    "type": "uint256"
                },
                {
                    "internalType": "uint160",
                    "name": "sqrtPriceX96After",
                    "type": "uint160"
                },
                {
                    "internalType": "int24",
                    "name": "tickAfter",
                    "type": "int24"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "int256",
                    "name": "amount0Delta",
                    "type": "int256"
                },
                {
                    "internalType": "int256",
                    "name": "amount1Delta",
                    "type": "int256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "uniswapV3SwapCallback",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "allSourcePaths": {
        "0": "contracts/HelpFunctions.sol",
        "1": "contracts/Pool.sol",
        "10": "contracts/lib/Path.sol",
        "11": "contracts/lib/PoolAddress.sol",
        "12": "contracts/lib/Position.sol",
        "13": "contracts/lib/SwapMath.sol",
        "14": "contracts/lib/Tick.sol",
        "15": "contracts/lib/TickBitmap.sol",
        "16": "contracts/lib/TickMath.sol",
        "17": "contracts/new/ABDKMath64x64.sol",
        "18": "contracts/new/Utils.sol",
        "19": "interface_contracts/IERC20.sol",
        "2": "contracts/PoolFactory.sol",
        "20": "interface_contracts/IUniswapV3FlashCallback.sol",
        "22": "interface_contracts/IUniswapV3MintCallback.sol",
        "23": "interface_contracts/IUniswapV3Pool.sol",
        "24": "interface_contracts/IUniswapV3PoolDeployer.sol",
        "25": "interface_contracts/IUniswapV3SwapCallback.sol",
        "26": "lib/prb-math/PRBMath.sol",
        "27": "lib/solidity-bytes-utils/BytesLib.sol",
        "3": "contracts/Quoter.sol",
        "4": "contracts/lib/BitMath.sol",
        "5": "contracts/lib/FixedPoint128.sol",
        "6": "contracts/lib/FixedPoint96.sol",
        "7": "contracts/lib/LiquidityMath.sol",
        "8": "contracts/lib/Math.sol",
        "9": "contracts/lib/Oracle.sol"
    },
    "ast": {
        "absolutePath": "contracts/Quoter.sol",
        "exportedSymbols": {
            "ABDKMath64x64": [
                11423
            ],
            "BitMath": [
                8528
            ],
            "BytesLib": [
                6339
            ],
            "BytesLibExt": [
                1581
            ],
            "FixedPoint128": [
                6350
            ],
            "FixedPoint96": [
                4111
            ],
            "HelpFunctions": [
                620
            ],
            "IERC20": [
                8213
            ],
            "IUniswapV3FlashCallback": [
                8225
            ],
            "IUniswapV3Manager": [
                11483
            ],
            "IUniswapV3MintCallback": [
                8237
            ],
            "IUniswapV3Pool": [
                2442
            ],
            "IUniswapV3PoolDeployer": [
                4100
            ],
            "IUniswapV3SwapCallback": [
                8249
            ],
            "LiquidityMath": [
                1144
            ],
            "Math": [
                1551
            ],
            "Oracle": [
                7008
            ],
            "PRBMath": [
                6006
            ],
            "PRBMathSD59x18__AbsInputTooSmall": [
                4136
            ],
            "PRBMathSD59x18__CeilOverflow": [
                4141
            ],
            "PRBMathSD59x18__DivInputTooSmall": [
                4144
            ],
            "PRBMathSD59x18__DivOverflow": [
                4149
            ],
            "PRBMathSD59x18__Exp2InputTooBig": [
                4159
            ],
            "PRBMathSD59x18__ExpInputTooBig": [
                4154
            ],
            "PRBMathSD59x18__FloorUnderflow": [
                4164
            ],
            "PRBMathSD59x18__FromIntOverflow": [
                4169
            ],
            "PRBMathSD59x18__FromIntUnderflow": [
                4174
            ],
            "PRBMathSD59x18__GmNegativeProduct": [
                4181
            ],
            "PRBMathSD59x18__GmOverflow": [
                4188
            ],
            "PRBMathSD59x18__LogInputTooSmall": [
                4193
            ],
            "PRBMathSD59x18__MulInputTooSmall": [
                4196
            ],
            "PRBMathSD59x18__MulOverflow": [
                4201
            ],
            "PRBMathSD59x18__PowuOverflow": [
                4206
            ],
            "PRBMathSD59x18__SqrtNegativeInput": [
                4211
            ],
            "PRBMathSD59x18__SqrtOverflow": [
                4216
            ],
            "PRBMathUD60x18__AddOverflow": [
                4223
            ],
            "PRBMathUD60x18__CeilOverflow": [
                4228
            ],
            "PRBMathUD60x18__Exp2InputTooBig": [
                4238
            ],
            "PRBMathUD60x18__ExpInputTooBig": [
                4233
            ],
            "PRBMathUD60x18__FromUintOverflow": [
                4243
            ],
            "PRBMathUD60x18__GmOverflow": [
                4250
            ],
            "PRBMathUD60x18__LogInputTooSmall": [
                4255
            ],
            "PRBMathUD60x18__SqrtOverflow": [
                4260
            ],
            "PRBMathUD60x18__SubUnderflow": [
                4267
            ],
            "PRBMath__MulDivFixedPointOverflow": [
                4118
            ],
            "PRBMath__MulDivOverflow": [
                4125
            ],
            "PRBMath__MulDivSignedInputTooSmall": [
                4128
            ],
            "PRBMath__MulDivSignedOverflow": [
                4133
            ],
            "Path": [
                1707
            ],
            "Pool": [
                4073
            ],
            "PoolAddress": [
                1764
            ],
            "PoolFactory": [
                935
            ],
            "Position": [
                7228
            ],
            "Quoter": [
                524
            ],
            "SwapMath": [
                7386
            ],
            "Tick": [
                7698
            ],
            "TickBitmap": [
                7972
            ],
            "TickMath": [
                2302
            ],
            "Utils": [
                8175
            ]
        },
        "id": 525,
        "license": "BUSL-1.1",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".14"
                ],
                "nodeType": "PragmaDirective",
                "src": "37:24:3"
            },
            {
                "absolutePath": "contracts/HelpFunctions.sol",
                "file": "./HelpFunctions.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 621,
                "src": "63:29:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/PoolFactory.sol",
                "file": "./PoolFactory.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 936,
                "src": "93:27:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "interface_contracts/IUniswapV3Pool.sol",
                "file": "../interface_contracts/IUniswapV3Pool.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 2443,
                "src": "122:51:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/lib/Math.sol",
                "file": "./lib/Math.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 1552,
                "src": "175:24:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/lib/Path.sol",
                "file": "./lib/Path.sol",
                "id": 6,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 1708,
                "src": "200:24:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/lib/PoolAddress.sol",
                "file": "./lib/PoolAddress.sol",
                "id": 7,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 1765,
                "src": "225:31:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/lib/TickMath.sol",
                "file": "./lib/TickMath.sol",
                "id": 8,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 2303,
                "src": "257:28:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "contracts/lib/LiquidityMath.sol",
                "file": "./lib/LiquidityMath.sol",
                "id": 9,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 525,
                "sourceUnit": 1145,
                "src": "286:33:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "Quoter",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 524,
                "linearizedBaseContracts": [
                    524
                ],
                "name": "Quoter",
                "nameLocation": "330:6:3",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "global": false,
                        "id": 12,
                        "libraryName": {
                            "id": 10,
                            "name": "Path",
                            "nameLocations": [
                                "349:4:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1707,
                            "src": "349:4:3"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "343:21:3",
                        "typeName": {
                            "id": 11,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "358:5:3",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                            }
                        }
                    },
                    {
                        "constant": false,
                        "functionSelector": "c45a0155",
                        "id": 14,
                        "mutability": "immutable",
                        "name": "factory",
                        "nameLocation": "395:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "370:32:3",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 13,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "370:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "poolfactory",
                        "nameLocation": "420:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "408:23:3",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolFactory_$935",
                            "typeString": "contract PoolFactory"
                        },
                        "typeName": {
                            "id": 16,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 15,
                                "name": "PoolFactory",
                                "nameLocations": [
                                    "408:11:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 935,
                                "src": "408:11:3"
                            },
                            "referencedDeclaration": 935,
                            "src": "408:11:3",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PoolFactory_$935",
                                "typeString": "contract PoolFactory"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 32,
                            "nodeType": "Block",
                            "src": "468:79:3",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 24,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 22,
                                            "name": "factory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 14,
                                            "src": "478:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 23,
                                            "name": "factory_",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 19,
                                            "src": "488:8:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "478:18:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 25,
                                    "nodeType": "ExpressionStatement",
                                    "src": "478:18:3"
                                },
                                {
                                    "expression": {
                                        "id": 30,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 26,
                                            "name": "poolfactory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 17,
                                            "src": "506:11:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_PoolFactory_$935",
                                                "typeString": "contract PoolFactory"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 28,
                                                    "name": "factory",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 14,
                                                    "src": "532:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 27,
                                                "name": "PoolFactory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 935,
                                                "src": "520:11:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_PoolFactory_$935_$",
                                                    "typeString": "type(contract PoolFactory)"
                                                }
                                            },
                                            "id": 29,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "520:20:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_PoolFactory_$935",
                                                "typeString": "contract PoolFactory"
                                            }
                                        },
                                        "src": "506:34:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_PoolFactory_$935",
                                            "typeString": "contract PoolFactory"
                                        }
                                    },
                                    "id": 31,
                                    "nodeType": "ExpressionStatement",
                                    "src": "506:34:3"
                                }
                            ]
                        },
                        "id": 33,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 20,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 19,
                                    "mutability": "mutable",
                                    "name": "factory_",
                                    "nameLocation": "458:8:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 33,
                                    "src": "450:16:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 18,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "450:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "449:18:3"
                        },
                        "returnParameters": {
                            "id": 21,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "468:0:3"
                        },
                        "scope": 524,
                        "src": "438:109:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 80,
                            "nodeType": "Block",
                            "src": "717:519:3",
                            "statements": [
                                {
                                    "assignments": [
                                        43
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 43,
                                            "mutability": "mutable",
                                            "name": "pool",
                                            "nameLocation": "735:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 80,
                                            "src": "727:12:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 42,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "727:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 51,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 46,
                                                "name": "data",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 39,
                                                "src": "753:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            },
                                            {
                                                "components": [
                                                    {
                                                        "id": 48,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "760:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 47,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "760:7:3",
                                                            "typeDescriptions": {}
                                                        }
                                                    }
                                                ],
                                                "id": 49,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "759:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                }
                                            ],
                                            "expression": {
                                                "id": 44,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "742:3:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_abi",
                                                    "typeString": "abi"
                                                }
                                            },
                                            "id": 45,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "746:6:3",
                                            "memberName": "decode",
                                            "nodeType": "MemberAccess",
                                            "src": "742:10:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                                "typeString": "function () pure"
                                            }
                                        },
                                        "id": 50,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "742:27:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "727:42:3"
                                },
                                {
                                    "assignments": [
                                        53
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 53,
                                            "mutability": "mutable",
                                            "name": "amountOut",
                                            "nameLocation": "787:9:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 80,
                                            "src": "779:17:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 52,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "779:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 68,
                                    "initialValue": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            },
                                            "id": 56,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 54,
                                                "name": "amount0Delta",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 35,
                                                "src": "799:12:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                                "hexValue": "30",
                                                "id": 55,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "814:1:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            },
                                            "src": "799:16:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseExpression": {
                                            "arguments": [
                                                {
                                                    "id": 65,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "-",
                                                    "prefix": true,
                                                    "src": "875:13:3",
                                                    "subExpression": {
                                                        "id": 64,
                                                        "name": "amount0Delta",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 35,
                                                        "src": "876:12:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_int256",
                                                            "typeString": "int256"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                ],
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "867:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                    "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                    "id": 62,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "867:7:3",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 66,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "867:22:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 67,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "799:90:3",
                                        "trueExpression": {
                                            "arguments": [
                                                {
                                                    "id": 60,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "-",
                                                    "prefix": true,
                                                    "src": "838:13:3",
                                                    "subExpression": {
                                                        "id": 59,
                                                        "name": "amount1Delta",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 37,
                                                        "src": "839:12:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_int256",
                                                            "typeString": "int256"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                ],
                                                "id": 58,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "830:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                    "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                    "id": 57,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "830:7:3",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 61,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "830:22:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "779:110:3"
                                },
                                {
                                    "assignments": [
                                        70,
                                        72,
                                        null,
                                        null,
                                        null
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 70,
                                            "mutability": "mutable",
                                            "name": "sqrtPriceX96After",
                                            "nameLocation": "908:17:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 80,
                                            "src": "900:25:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                            },
                                            "typeName": {
                                                "id": 69,
                                                "name": "uint160",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "900:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 72,
                                            "mutability": "mutable",
                                            "name": "tickAfter",
                                            "nameLocation": "933:9:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 80,
                                            "src": "927:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            },
                                            "typeName": {
                                                "id": 71,
                                                "name": "int24",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "927:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null,
                                        null,
                                        null
                                    ],
                                    "id": 78,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 74,
                                                        "name": "pool",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 43,
                                                        "src": "980:4:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 73,
                                                    "name": "IUniswapV3Pool",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2442,
                                                    "src": "952:14:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$2442_$",
                                                        "typeString": "type(contract IUniswapV3Pool)"
                                                    }
                                                },
                                                "id": 75,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "952:42:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                    "typeString": "contract IUniswapV3Pool"
                                                }
                                            },
                                            "id": 76,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "995:5:3",
                                            "memberName": "slot0",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2324,
                                            "src": "952:48:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$",
                                                "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16)"
                                            }
                                        },
                                        "id": 77,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "952:50:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$",
                                            "typeString": "tuple(uint160,int24,uint16,uint16,uint16)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "899:103:3"
                                },
                                {
                                    "AST": {
                                        "nodeType": "YulBlock",
                                        "src": "1021:209:3",
                                        "statements": [
                                            {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "1035:22:3",
                                                "value": {
                                                    "arguments": [
                                                        {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "1052:4:3",
                                                            "type": "",
                                                            "value": "0x40"
                                                        }
                                                    ],
                                                    "functionName": {
                                                        "name": "mload",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "1046:5:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1046:11:3"
                                                },
                                                "variables": [
                                                    {
                                                        "name": "ptr",
                                                        "nodeType": "YulTypedName",
                                                        "src": "1039:3:3",
                                                        "type": ""
                                                    }
                                                ]
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "name": "ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "1077:3:3"
                                                        },
                                                        {
                                                            "name": "amountOut",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "1082:9:3"
                                                        }
                                                    ],
                                                    "functionName": {
                                                        "name": "mstore",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "1070:6:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1070:22:3"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "1070:22:3"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "name": "ptr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1116:3:3"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1121:4:3",
                                                                    "type": "",
                                                                    "value": "0x20"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1112:3:3"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1112:14:3"
                                                        },
                                                        {
                                                            "name": "sqrtPriceX96After",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "1128:17:3"
                                                        }
                                                    ],
                                                    "functionName": {
                                                        "name": "mstore",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "1105:6:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1105:41:3"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "1105:41:3"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "name": "ptr",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1170:3:3"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "1175:4:3",
                                                                    "type": "",
                                                                    "value": "0x40"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1166:3:3"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1166:14:3"
                                                        },
                                                        {
                                                            "name": "tickAfter",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "1182:9:3"
                                                        }
                                                    ],
                                                    "functionName": {
                                                        "name": "mstore",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "1159:6:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1159:33:3"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "1159:33:3"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "name": "ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "1212:3:3"
                                                        },
                                                        {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "1217:2:3",
                                                            "type": "",
                                                            "value": "96"
                                                        }
                                                    ],
                                                    "functionName": {
                                                        "name": "revert",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "1205:6:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1205:15:3"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "1205:15:3"
                                            }
                                        ]
                                    },
                                    "evmVersion": "istanbul",
                                    "externalReferences": [
                                        {
                                            "declaration": 53,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "1082:9:3",
                                            "valueSize": 1
                                        },
                                        {
                                            "declaration": 70,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "1128:17:3",
                                            "valueSize": 1
                                        },
                                        {
                                            "declaration": 72,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "1182:9:3",
                                            "valueSize": 1
                                        }
                                    ],
                                    "id": 79,
                                    "nodeType": "InlineAssembly",
                                    "src": "1012:218:3"
                                }
                            ]
                        },
                        "functionSelector": "fa461e33",
                        "id": 81,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "uniswapV3SwapCallback",
                        "nameLocation": "590:21:3",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 40,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 35,
                                    "mutability": "mutable",
                                    "name": "amount0Delta",
                                    "nameLocation": "628:12:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 81,
                                    "src": "621:19:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                    },
                                    "typeName": {
                                        "id": 34,
                                        "name": "int256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "621:6:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 37,
                                    "mutability": "mutable",
                                    "name": "amount1Delta",
                                    "nameLocation": "657:12:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 81,
                                    "src": "650:19:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                    },
                                    "typeName": {
                                        "id": 36,
                                        "name": "int256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "650:6:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39,
                                    "mutability": "mutable",
                                    "name": "data",
                                    "nameLocation": "692:4:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 81,
                                    "src": "679:17:3",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 38,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "679:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "611:91:3"
                        },
                        "returnParameters": {
                            "id": 41,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "717:0:3"
                        },
                        "scope": 524,
                        "src": "581:655:3",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 183,
                            "nodeType": "Block",
                            "src": "1518:829:3",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 104,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 96,
                                            "name": "sqrtPriceX96AfterList",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "1528:21:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                                                "typeString": "uint160[] memory"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 100,
                                                            "name": "path",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 83,
                                                            "src": "1566:4:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        },
                                                        "id": 101,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1571:8:3",
                                                        "memberName": "numPools",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1642,
                                                        "src": "1566:13:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$attached_to$_t_bytes_memory_ptr_$",
                                                            "typeString": "function (bytes memory) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 102,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1566:15:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "id": 99,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "1552:13:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$",
                                                    "typeString": "function (uint256) pure returns (uint160[] memory)"
                                                },
                                                "typeName": {
                                                    "baseType": {
                                                        "id": 97,
                                                        "name": "uint160",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1556:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint160",
                                                            "typeString": "uint160"
                                                        }
                                                    },
                                                    "id": 98,
                                                    "nodeType": "ArrayTypeName",
                                                    "src": "1556:9:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
                                                        "typeString": "uint160[]"
                                                    }
                                                }
                                            },
                                            "id": 103,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1552:30:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                                                "typeString": "uint160[] memory"
                                            }
                                        },
                                        "src": "1528:54:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                                            "typeString": "uint160[] memory"
                                        }
                                    },
                                    "id": 105,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1528:54:3"
                                },
                                {
                                    "expression": {
                                        "id": 114,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 106,
                                            "name": "tickAfterList",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 94,
                                            "src": "1592:13:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
                                                "typeString": "int24[] memory"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 110,
                                                            "name": "path",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 83,
                                                            "src": "1620:4:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        },
                                                        "id": 111,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1625:8:3",
                                                        "memberName": "numPools",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1642,
                                                        "src": "1620:13:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$attached_to$_t_bytes_memory_ptr_$",
                                                            "typeString": "function (bytes memory) pure returns (uint256)"
                                                        }
                                                    },
                                                    "id": 112,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1620:15:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "id": 109,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "1608:11:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int24_$dyn_memory_ptr_$",
                                                    "typeString": "function (uint256) pure returns (int24[] memory)"
                                                },
                                                "typeName": {
                                                    "baseType": {
                                                        "id": 107,
                                                        "name": "int24",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1612:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_int24",
                                                            "typeString": "int24"
                                                        }
                                                    },
                                                    "id": 108,
                                                    "nodeType": "ArrayTypeName",
                                                    "src": "1612:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_int24_$dyn_storage_ptr",
                                                        "typeString": "int24[]"
                                                    }
                                                }
                                            },
                                            "id": 113,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1608:28:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
                                                "typeString": "int24[] memory"
                                            }
                                        },
                                        "src": "1592:44:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
                                            "typeString": "int24[] memory"
                                        }
                                    },
                                    "id": 115,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1592:44:3"
                                },
                                {
                                    "assignments": [
                                        117
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 117,
                                            "mutability": "mutable",
                                            "name": "i",
                                            "nameLocation": "1655:1:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 183,
                                            "src": "1647:9:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 116,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1647:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 119,
                                    "initialValue": {
                                        "hexValue": "30",
                                        "id": 118,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1659:1:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1647:13:3"
                                },
                                {
                                    "body": {
                                        "id": 181,
                                        "nodeType": "Block",
                                        "src": "1683:658:3",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    122,
                                                    124,
                                                    126
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 122,
                                                        "mutability": "mutable",
                                                        "name": "tokenIn",
                                                        "nameLocation": "1706:7:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 181,
                                                        "src": "1698:15:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "typeName": {
                                                            "id": 121,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1698:7:3",
                                                            "stateMutability": "nonpayable",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 124,
                                                        "mutability": "mutable",
                                                        "name": "tokenOut",
                                                        "nameLocation": "1723:8:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 181,
                                                        "src": "1715:16:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "typeName": {
                                                            "id": 123,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1715:7:3",
                                                            "stateMutability": "nonpayable",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 126,
                                                        "mutability": "mutable",
                                                        "name": "fee",
                                                        "nameLocation": "1740:3:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 181,
                                                        "src": "1733:10:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint24",
                                                            "typeString": "uint24"
                                                        },
                                                        "typeName": {
                                                            "id": 125,
                                                            "name": "uint24",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1733:6:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint24",
                                                                "typeString": "uint24"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 130,
                                                "initialValue": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 127,
                                                            "name": "path",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 83,
                                                            "src": "1747:4:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        },
                                                        "id": 128,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1769:15:3",
                                                        "memberName": "decodeFirstPool",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1706,
                                                        "src": "1747:37:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$attached_to$_t_bytes_memory_ptr_$",
                                                            "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                                                        }
                                                    },
                                                    "id": 129,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1747:39:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                                                        "typeString": "tuple(address,address,uint24)"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1697:89:3"
                                            },
                                            {
                                                "assignments": [
                                                    132,
                                                    134,
                                                    136
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 132,
                                                        "mutability": "mutable",
                                                        "name": "amountOut_",
                                                        "nameLocation": "1827:10:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 181,
                                                        "src": "1819:18:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 131,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1819:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 134,
                                                        "mutability": "mutable",
                                                        "name": "sqrtPriceX96After",
                                                        "nameLocation": "1863:17:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 181,
                                                        "src": "1855:25:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint160",
                                                            "typeString": "uint160"
                                                        },
                                                        "typeName": {
                                                            "id": 133,
                                                            "name": "uint160",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1855:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint160",
                                                                "typeString": "uint160"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 136,
                                                        "mutability": "mutable",
                                                        "name": "tickAfter",
                                                        "nameLocation": "1904:9:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 181,
                                                        "src": "1898:15:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_int24",
                                                            "typeString": "int24"
                                                        },
                                                        "typeName": {
                                                            "id": 135,
                                                            "name": "int24",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1898:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 144,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "id": 138,
                                                            "name": "tokenIn",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 122,
                                                            "src": "1942:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 139,
                                                            "name": "tokenOut",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 124,
                                                            "src": "1951:8:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 140,
                                                            "name": "fee",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 126,
                                                            "src": "1961:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint24",
                                                                "typeString": "uint24"
                                                            }
                                                        },
                                                        {
                                                            "id": 141,
                                                            "name": "amountIn",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 85,
                                                            "src": "1967:8:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        {
                                                            "hexValue": "30",
                                                            "id": 142,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1977:1:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint24",
                                                                "typeString": "uint24"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 137,
                                                        "name": "quoteSingle",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 308,
                                                        "src": "1930:11:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint160_$returns$_t_uint256_$_t_uint160_$_t_int24_$",
                                                            "typeString": "function (address,address,uint24,uint256,uint160) returns (uint256,uint160,int24)"
                                                        }
                                                    },
                                                    "id": 143,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1930:66:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
                                                        "typeString": "tuple(uint256,uint160,int24)"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1801:195:3"
                                            },
                                            {
                                                "expression": {
                                                    "id": 149,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 145,
                                                            "name": "sqrtPriceX96AfterList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 91,
                                                            "src": "2011:21:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                                                                "typeString": "uint160[] memory"
                                                            }
                                                        },
                                                        "id": 147,
                                                        "indexExpression": {
                                                            "id": 146,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 117,
                                                            "src": "2033:1:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2011:24:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint160",
                                                            "typeString": "uint160"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "id": 148,
                                                        "name": "sqrtPriceX96After",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 134,
                                                        "src": "2038:17:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint160",
                                                            "typeString": "uint160"
                                                        }
                                                    },
                                                    "src": "2011:44:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    }
                                                },
                                                "id": 150,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2011:44:3"
                                            },
                                            {
                                                "expression": {
                                                    "id": 155,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 151,
                                                            "name": "tickAfterList",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 94,
                                                            "src": "2069:13:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
                                                                "typeString": "int24[] memory"
                                                            }
                                                        },
                                                        "id": 153,
                                                        "indexExpression": {
                                                            "id": 152,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 117,
                                                            "src": "2083:1:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2069:16:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_int24",
                                                            "typeString": "int24"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "id": 154,
                                                        "name": "tickAfter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 136,
                                                        "src": "2088:9:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_int24",
                                                            "typeString": "int24"
                                                        }
                                                    },
                                                    "src": "2069:28:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_int24",
                                                        "typeString": "int24"
                                                    }
                                                },
                                                "id": 156,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2069:28:3"
                                            },
                                            {
                                                "expression": {
                                                    "id": 159,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 157,
                                                        "name": "amountIn",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 85,
                                                        "src": "2111:8:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "id": 158,
                                                        "name": "amountOut_",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 132,
                                                        "src": "2122:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "2111:21:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 160,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2111:21:3"
                                            },
                                            {
                                                "expression": {
                                                    "id": 162,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "++",
                                                    "prefix": false,
                                                    "src": "2146:3:3",
                                                    "subExpression": {
                                                        "id": 161,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 117,
                                                        "src": "2146:1:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 163,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2146:3:3"
                                            },
                                            {
                                                "condition": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 164,
                                                            "name": "path",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 83,
                                                            "src": "2168:4:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        },
                                                        "id": 165,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "2173:16:3",
                                                        "memberName": "hasMultiplePools",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1626,
                                                        "src": "2168:21:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$attached_to$_t_bytes_memory_ptr_$",
                                                            "typeString": "function (bytes memory) pure returns (bool)"
                                                        }
                                                    },
                                                    "id": 166,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2168:23:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseBody": {
                                                    "id": 179,
                                                    "nodeType": "Block",
                                                    "src": "2255:76:3",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 176,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "id": 174,
                                                                    "name": "amountOut",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 88,
                                                                    "src": "2273:9:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "id": 175,
                                                                    "name": "amountIn",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 85,
                                                                    "src": "2285:8:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "2273:20:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 177,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2273:20:3"
                                                        },
                                                        {
                                                            "id": 178,
                                                            "nodeType": "Break",
                                                            "src": "2311:5:3"
                                                        }
                                                    ]
                                                },
                                                "id": 180,
                                                "nodeType": "IfStatement",
                                                "src": "2164:167:3",
                                                "trueBody": {
                                                    "id": 173,
                                                    "nodeType": "Block",
                                                    "src": "2193:56:3",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 171,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "id": 167,
                                                                    "name": "path",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 83,
                                                                    "src": "2211:4:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "arguments": [],
                                                                    "expression": {
                                                                        "argumentTypes": [],
                                                                        "expression": {
                                                                            "id": 168,
                                                                            "name": "path",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 83,
                                                                            "src": "2218:4:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                                "typeString": "bytes memory"
                                                                            }
                                                                        },
                                                                        "id": 169,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberLocation": "2223:9:3",
                                                                        "memberName": "skipToken",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 1673,
                                                                        "src": "2218:14:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_bytes_memory_ptr_$",
                                                                            "typeString": "function (bytes memory) pure returns (bytes memory)"
                                                                        }
                                                                    },
                                                                    "id": 170,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "nameLocations": [],
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "2218:16:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                },
                                                                "src": "2211:23:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                                    "typeString": "bytes memory"
                                                                }
                                                            },
                                                            "id": 172,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2211:23:3"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "hexValue": "74727565",
                                        "id": 120,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1677:4:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "id": 182,
                                    "nodeType": "WhileStatement",
                                    "src": "1670:671:3"
                                }
                            ]
                        },
                        "functionSelector": "260a5b03",
                        "id": 184,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "quoteMulti",
                        "nameLocation": "1277:10:3",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 86,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 83,
                                    "mutability": "mutable",
                                    "name": "path",
                                    "nameLocation": "1310:4:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "1297:17:3",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 82,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1297:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 85,
                                    "mutability": "mutable",
                                    "name": "amountIn",
                                    "nameLocation": "1332:8:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "1324:16:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 84,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1324:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1287:59:3"
                        },
                        "returnParameters": {
                            "id": 95,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 88,
                                    "mutability": "mutable",
                                    "name": "amountOut",
                                    "nameLocation": "1400:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "1392:17:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 87,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1392:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 91,
                                    "mutability": "mutable",
                                    "name": "sqrtPriceX96AfterList",
                                    "nameLocation": "1440:21:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "1423:38:3",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                                        "typeString": "uint160[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 89,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1423:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                            }
                                        },
                                        "id": 90,
                                        "nodeType": "ArrayTypeName",
                                        "src": "1423:9:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
                                            "typeString": "uint160[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 94,
                                    "mutability": "mutable",
                                    "name": "tickAfterList",
                                    "nameLocation": "1490:13:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 184,
                                    "src": "1475:28:3",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
                                        "typeString": "int24[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 92,
                                            "name": "int24",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1475:5:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            }
                                        },
                                        "id": 93,
                                        "nodeType": "ArrayTypeName",
                                        "src": "1475:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_int24_$dyn_storage_ptr",
                                            "typeString": "int24[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1378:135:3"
                        },
                        "scope": 524,
                        "src": "1268:1079:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 307,
                            "nodeType": "Block",
                            "src": "2611:1105:3",
                            "statements": [
                                {
                                    "assignments": [
                                        205
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 205,
                                            "mutability": "mutable",
                                            "name": "pool",
                                            "nameLocation": "2636:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 307,
                                            "src": "2621:19:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                "typeString": "contract IUniswapV3Pool"
                                            },
                                            "typeName": {
                                                "id": 204,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 203,
                                                    "name": "IUniswapV3Pool",
                                                    "nameLocations": [
                                                        "2621:14:3"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 2442,
                                                    "src": "2621:14:3"
                                                },
                                                "referencedDeclaration": 2442,
                                                "src": "2621:14:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                    "typeString": "contract IUniswapV3Pool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 214,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 209,
                                                        "name": "tokenIn",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 186,
                                                        "src": "2689:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 210,
                                                        "name": "tokenOut",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 188,
                                                        "src": "2710:8:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 211,
                                                        "name": "fee",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 190,
                                                        "src": "2732:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint24",
                                                            "typeString": "uint24"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint24",
                                                            "typeString": "uint24"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 207,
                                                        "name": "poolfactory",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 17,
                                                        "src": "2658:11:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_PoolFactory_$935",
                                                            "typeString": "contract PoolFactory"
                                                        }
                                                    },
                                                    "id": 208,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "2670:5:3",
                                                    "memberName": "pools",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 670,
                                                    "src": "2658:17:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                                                        "typeString": "function (address,address,uint24) view external returns (address)"
                                                    }
                                                },
                                                "id": 212,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2658:87:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 206,
                                            "name": "IUniswapV3Pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2442,
                                            "src": "2643:14:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$2442_$",
                                                "typeString": "type(contract IUniswapV3Pool)"
                                            }
                                        },
                                        "id": 213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2643:103:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                            "typeString": "contract IUniswapV3Pool"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2621:125:3"
                                },
                                {
                                    "assignments": [
                                        216
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 216,
                                            "mutability": "mutable",
                                            "name": "zeroForOne",
                                            "nameLocation": "2764:10:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 307,
                                            "src": "2759:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 215,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2759:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 220,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 219,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 217,
                                            "name": "tokenIn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 186,
                                            "src": "2777:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "id": 218,
                                            "name": "tokenOut",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 188,
                                            "src": "2787:8:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2777:18:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2759:36:3"
                                },
                                {
                                    "clauses": [
                                        {
                                            "block": {
                                                "id": 253,
                                                "nodeType": "Block",
                                                "src": "3259:2:3",
                                                "statements": []
                                            },
                                            "errorName": "",
                                            "id": 254,
                                            "nodeType": "TryCatchClause",
                                            "src": "3259:2:3"
                                        },
                                        {
                                            "block": {
                                                "id": 304,
                                                "nodeType": "Block",
                                                "src": "3290:419:3",
                                                "statements": [
                                                    {
                                                        "assignments": [
                                                            259
                                                        ],
                                                        "declarations": [
                                                            {
                                                                "constant": false,
                                                                "id": 259,
                                                                "mutability": "mutable",
                                                                "name": "hashedRes",
                                                                "nameLocation": "3312:9:3",
                                                                "nodeType": "VariableDeclaration",
                                                                "scope": 304,
                                                                "src": "3304:17:3",
                                                                "stateVariable": false,
                                                                "storageLocation": "default",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                },
                                                                "typeName": {
                                                                    "id": 258,
                                                                    "name": "bytes32",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3304:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes32",
                                                                        "typeString": "bytes32"
                                                                    }
                                                                },
                                                                "visibility": "internal"
                                                            }
                                                        ],
                                                        "id": 263,
                                                        "initialValue": {
                                                            "arguments": [
                                                                {
                                                                    "id": 261,
                                                                    "name": "reason",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 256,
                                                                    "src": "3334:6:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                ],
                                                                "id": 260,
                                                                "name": "keccak256",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -8,
                                                                "src": "3324:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                }
                                                            },
                                                            "id": 262,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3324:17:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            }
                                                        },
                                                        "nodeType": "VariableDeclarationStatement",
                                                        "src": "3304:37:3"
                                                    },
                                                    {
                                                        "condition": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            },
                                                            "id": 271,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "496e76616c696450726963654c696d69742829",
                                                                                "id": 267,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "string",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "3393:21:3",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_stringliteral_b53bbacc121f8e9e24c5308b6c344218f253a5393974c0b550adf15a065e3900",
                                                                                    "typeString": "literal_string \"InvalidPriceLimit()\""
                                                                                },
                                                                                "value": "InvalidPriceLimit()"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_stringliteral_b53bbacc121f8e9e24c5308b6c344218f253a5393974c0b550adf15a065e3900",
                                                                                    "typeString": "literal_string \"InvalidPriceLimit()\""
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "id": 265,
                                                                                "name": "abi",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": -1,
                                                                                "src": "3369:3:3",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_magic_abi",
                                                                                    "typeString": "abi"
                                                                                }
                                                                            },
                                                                            "id": 266,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "memberLocation": "3373:19:3",
                                                                            "memberName": "encodeWithSignature",
                                                                            "nodeType": "MemberAccess",
                                                                            "src": "3369:23:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                                                                "typeString": "function (string memory) pure returns (bytes memory)"
                                                                            }
                                                                        },
                                                                        "id": 268,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "nameLocations": [],
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3369:46:3",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                                            "typeString": "bytes memory"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                                            "typeString": "bytes memory"
                                                                        }
                                                                    ],
                                                                    "id": 264,
                                                                    "name": "keccak256",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -8,
                                                                    "src": "3359:9:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                    }
                                                                },
                                                                "id": 269,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "3359:57:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "id": 270,
                                                                "name": "hashedRes",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 259,
                                                                "src": "3420:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            },
                                                            "src": "3359:70:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "falseBody": {
                                                            "condition": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                },
                                                                "id": 284,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "arguments": [
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "hexValue": "4e6f74456e6f7567684c69717569646974792829",
                                                                                    "id": 280,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "string",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "3534:22:3",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_stringliteral_4323a555923e68811719ea3c7fcf0102b9317bc464515a16006f0b22a5b3f680",
                                                                                        "typeString": "literal_string \"NotEnoughLiquidity()\""
                                                                                    },
                                                                                    "value": "NotEnoughLiquidity()"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_stringliteral_4323a555923e68811719ea3c7fcf0102b9317bc464515a16006f0b22a5b3f680",
                                                                                        "typeString": "literal_string \"NotEnoughLiquidity()\""
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "id": 278,
                                                                                    "name": "abi",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": -1,
                                                                                    "src": "3510:3:3",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_magic_abi",
                                                                                        "typeString": "abi"
                                                                                    }
                                                                                },
                                                                                "id": 279,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "memberLocation": "3514:19:3",
                                                                                "memberName": "encodeWithSignature",
                                                                                "nodeType": "MemberAccess",
                                                                                "src": "3510:23:3",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                                                                    "typeString": "function (string memory) pure returns (bytes memory)"
                                                                                }
                                                                            },
                                                                            "id": 281,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "nameLocations": [],
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "3510:47:3",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                                "typeString": "bytes memory"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                                "typeString": "bytes memory"
                                                                            }
                                                                        ],
                                                                        "id": 277,
                                                                        "name": "keccak256",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -8,
                                                                        "src": "3500:9:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                        }
                                                                    },
                                                                    "id": 282,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "nameLocations": [],
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "3500:58:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes32",
                                                                        "typeString": "bytes32"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "==",
                                                                "rightExpression": {
                                                                    "id": 283,
                                                                    "name": "hashedRes",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 259,
                                                                    "src": "3562:9:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes32",
                                                                        "typeString": "bytes32"
                                                                    }
                                                                },
                                                                "src": "3500:71:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "id": 290,
                                                            "nodeType": "IfStatement",
                                                            "src": "3496:137:3",
                                                            "trueBody": {
                                                                "id": 289,
                                                                "nodeType": "Block",
                                                                "src": "3572:61:3",
                                                                "statements": [
                                                                    {
                                                                        "expression": {
                                                                            "arguments": [
                                                                                {
                                                                                    "hexValue": "4e6f74456e6f7567684c6971756964697479",
                                                                                    "id": 286,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "string",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "3597:20:3",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_stringliteral_e145198badb9cecd8b3c9f25496ca0ecb66f4e7a99c9c9fa7c12809ebcb67ed7",
                                                                                        "typeString": "literal_string \"NotEnoughLiquidity\""
                                                                                    },
                                                                                    "value": "NotEnoughLiquidity"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_stringliteral_e145198badb9cecd8b3c9f25496ca0ecb66f4e7a99c9c9fa7c12809ebcb67ed7",
                                                                                        "typeString": "literal_string \"NotEnoughLiquidity\""
                                                                                    }
                                                                                ],
                                                                                "id": 285,
                                                                                "name": "revert",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [
                                                                                    -19,
                                                                                    -19
                                                                                ],
                                                                                "referencedDeclaration": -19,
                                                                                "src": "3590:6:3",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                                    "typeString": "function (string memory) pure"
                                                                                }
                                                                            },
                                                                            "id": 287,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "nameLocations": [],
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "3590:28:3",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_tuple$__$",
                                                                                "typeString": "tuple()"
                                                                            }
                                                                        },
                                                                        "id": 288,
                                                                        "nodeType": "ExpressionStatement",
                                                                        "src": "3590:28:3"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "id": 291,
                                                        "nodeType": "IfStatement",
                                                        "src": "3355:278:3",
                                                        "trueBody": {
                                                            "id": 276,
                                                            "nodeType": "Block",
                                                            "src": "3431:60:3",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "496e76616c696450726963654c696d6974",
                                                                                "id": 273,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "string",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "3456:19:3",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_stringliteral_d667c84bc764b90f3b945ef1e5643f81676f6f51beeb22559f0ecd423f0a4e11",
                                                                                    "typeString": "literal_string \"InvalidPriceLimit\""
                                                                                },
                                                                                "value": "InvalidPriceLimit"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_stringliteral_d667c84bc764b90f3b945ef1e5643f81676f6f51beeb22559f0ecd423f0a4e11",
                                                                                    "typeString": "literal_string \"InvalidPriceLimit\""
                                                                                }
                                                                            ],
                                                                            "id": 272,
                                                                            "name": "revert",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [
                                                                                -19,
                                                                                -19
                                                                            ],
                                                                            "referencedDeclaration": -19,
                                                                            "src": "3449:6:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                                "typeString": "function (string memory) pure"
                                                                            }
                                                                        },
                                                                        "id": 274,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "nameLocations": [],
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3449:27:3",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_tuple$__$",
                                                                            "typeString": "tuple()"
                                                                        }
                                                                    },
                                                                    "id": 275,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "3449:27:3"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "id": 294,
                                                                    "name": "reason",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 256,
                                                                    "src": "3664:6:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                },
                                                                {
                                                                    "components": [
                                                                        {
                                                                            "id": 296,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "3673:7:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                                                "typeString": "type(uint256)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 295,
                                                                                "name": "uint256",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "3673:7:3",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        {
                                                                            "id": 298,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "3682:7:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_uint160_$",
                                                                                "typeString": "type(uint160)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 297,
                                                                                "name": "uint160",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "3682:7:3",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        {
                                                                            "id": 300,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "3691:5:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_int24_$",
                                                                                "typeString": "type(int24)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 299,
                                                                                "name": "int24",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "3691:5:3",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        }
                                                                    ],
                                                                    "id": 301,
                                                                    "isConstant": false,
                                                                    "isInlineArray": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "TupleExpression",
                                                                    "src": "3672:25:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$",
                                                                        "typeString": "tuple(type(uint256),type(uint160),type(int24))"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$",
                                                                        "typeString": "tuple(type(uint256),type(uint160),type(int24))"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 292,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -1,
                                                                    "src": "3653:3:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 293,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberLocation": "3657:6:3",
                                                                "memberName": "decode",
                                                                "nodeType": "MemberAccess",
                                                                "src": "3653:10:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                                                    "typeString": "function () pure"
                                                                }
                                                            },
                                                            "id": 302,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3653:45:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
                                                                "typeString": "tuple(uint256,uint160,int24)"
                                                            }
                                                        },
                                                        "functionReturnParameters": 202,
                                                        "id": 303,
                                                        "nodeType": "Return",
                                                        "src": "3646:52:3"
                                                    }
                                                ]
                                            },
                                            "errorName": "",
                                            "id": 305,
                                            "nodeType": "TryCatchClause",
                                            "parameters": {
                                                "id": 257,
                                                "nodeType": "ParameterList",
                                                "parameters": [
                                                    {
                                                        "constant": false,
                                                        "id": 256,
                                                        "mutability": "mutable",
                                                        "name": "reason",
                                                        "nameLocation": "3282:6:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 305,
                                                        "src": "3269:19:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes"
                                                        },
                                                        "typeName": {
                                                            "id": 255,
                                                            "name": "bytes",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3269:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                                "typeString": "bytes"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "src": "3268:21:3"
                                            },
                                            "src": "3262:447:3"
                                        }
                                    ],
                                    "externalCall": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 225,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -28,
                                                        "src": "2857:4:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Quoter_$524",
                                                            "typeString": "contract Quoter"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Quoter_$524",
                                                            "typeString": "contract Quoter"
                                                        }
                                                    ],
                                                    "id": 224,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2849:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 223,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2849:7:3",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 226,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2849:13:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 227,
                                                "name": "zeroForOne",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 216,
                                                "src": "2880:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "id": 228,
                                                "name": "amountIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 192,
                                                "src": "2908:8:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    },
                                                    "id": 231,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 229,
                                                        "name": "sqrtPriceLimitX96",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 194,
                                                        "src": "2934:17:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint160",
                                                            "typeString": "uint160"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "hexValue": "30",
                                                        "id": 230,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2955:1:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    "src": "2934:22:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "falseExpression": {
                                                    "id": 243,
                                                    "name": "sqrtPriceLimitX96",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 194,
                                                    "src": "3176:17:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    }
                                                },
                                                "id": 244,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "Conditional",
                                                "src": "2934:259:3",
                                                "trueExpression": {
                                                    "components": [
                                                        {
                                                            "condition": {
                                                                "id": 232,
                                                                "name": "zeroForOne",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 216,
                                                                "src": "3005:10:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "falseExpression": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                },
                                                                "id": 240,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "expression": {
                                                                        "id": 237,
                                                                        "name": "TickMath",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2302,
                                                                        "src": "3104:8:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_TickMath_$2302_$",
                                                                            "typeString": "type(library TickMath)"
                                                                        }
                                                                    },
                                                                    "id": 238,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "3113:14:3",
                                                                    "memberName": "MAX_SQRT_RATIO",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1785,
                                                                    "src": "3104:23:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint160",
                                                                        "typeString": "uint160"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "-",
                                                                "rightExpression": {
                                                                    "hexValue": "31",
                                                                    "id": 239,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3130:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_1_by_1",
                                                                        "typeString": "int_const 1"
                                                                    },
                                                                    "value": "1"
                                                                },
                                                                "src": "3104:27:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                }
                                                            },
                                                            "id": 241,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "Conditional",
                                                            "src": "3005:126:3",
                                                            "trueExpression": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                },
                                                                "id": 236,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "expression": {
                                                                        "id": 233,
                                                                        "name": "TickMath",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2302,
                                                                        "src": "3046:8:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_TickMath_$2302_$",
                                                                            "typeString": "type(library TickMath)"
                                                                        }
                                                                    },
                                                                    "id": 234,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "3055:14:3",
                                                                    "memberName": "MIN_SQRT_RATIO",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1781,
                                                                    "src": "3046:23:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint160",
                                                                        "typeString": "uint160"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "+",
                                                                "rightExpression": {
                                                                    "hexValue": "31",
                                                                    "id": 235,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3072:1:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_1_by_1",
                                                                        "typeString": "int_const 1"
                                                                    },
                                                                    "value": "1"
                                                                },
                                                                "src": "3046:27:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                }
                                                            },
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint160",
                                                                "typeString": "uint160"
                                                            }
                                                        }
                                                    ],
                                                    "id": 242,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "2979:174:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 249,
                                                                "name": "pool",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 205,
                                                                "src": "3230:4:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                                    "typeString": "contract IUniswapV3Pool"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                                    "typeString": "contract IUniswapV3Pool"
                                                                }
                                                            ],
                                                            "id": 248,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3222:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 247,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3222:7:3",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 250,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3222:13:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 245,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "3211:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 246,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3215:6:3",
                                                    "memberName": "encode",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3211:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 251,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3211:25:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 221,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 205,
                                                "src": "2822:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                    "typeString": "contract IUniswapV3Pool"
                                                }
                                            },
                                            "id": 222,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2827:4:3",
                                            "memberName": "swap",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2428,
                                            "src": "2822:9:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                                                "typeString": "function (address,bool,uint256,uint160,bytes memory) external returns (int256,int256)"
                                            }
                                        },
                                        "id": 252,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2822:428:3",
                                        "tryCall": true,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                                            "typeString": "tuple(int256,int256)"
                                        }
                                    },
                                    "id": 306,
                                    "nodeType": "TryStatement",
                                    "src": "2806:903:3"
                                }
                            ]
                        },
                        "functionSelector": "e95dbb69",
                        "id": 308,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "quoteSingle",
                        "nameLocation": "2362:11:3",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 195,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 186,
                                    "mutability": "mutable",
                                    "name": "tokenIn",
                                    "nameLocation": "2391:7:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2383:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 185,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2383:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 188,
                                    "mutability": "mutable",
                                    "name": "tokenOut",
                                    "nameLocation": "2416:8:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2408:16:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 187,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2408:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 190,
                                    "mutability": "mutable",
                                    "name": "fee",
                                    "nameLocation": "2441:3:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2434:10:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint24",
                                        "typeString": "uint24"
                                    },
                                    "typeName": {
                                        "id": 189,
                                        "name": "uint24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2434:6:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 192,
                                    "mutability": "mutable",
                                    "name": "amountIn",
                                    "nameLocation": "2462:8:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2454:16:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 191,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2454:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 194,
                                    "mutability": "mutable",
                                    "name": "sqrtPriceLimitX96",
                                    "nameLocation": "2488:17:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2480:25:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                    },
                                    "typeName": {
                                        "id": 193,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2480:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2373:138:3"
                        },
                        "returnParameters": {
                            "id": 202,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 197,
                                    "mutability": "mutable",
                                    "name": "amountOut",
                                    "nameLocation": "2552:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2544:17:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 196,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2544:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 199,
                                    "mutability": "mutable",
                                    "name": "sqrtPriceX96After",
                                    "nameLocation": "2571:17:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2563:25:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                    },
                                    "typeName": {
                                        "id": 198,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2563:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 201,
                                    "mutability": "mutable",
                                    "name": "tickAfter",
                                    "nameLocation": "2596:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 308,
                                    "src": "2590:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                    },
                                    "typeName": {
                                        "id": 200,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2590:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2543:63:3"
                        },
                        "scope": 524,
                        "src": "2353:1363:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 398,
                            "nodeType": "Block",
                            "src": "3990:860:3",
                            "statements": [
                                {
                                    "assignments": [
                                        327
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 327,
                                            "mutability": "mutable",
                                            "name": "pool",
                                            "nameLocation": "4015:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 398,
                                            "src": "4000:19:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                "typeString": "contract IUniswapV3Pool"
                                            },
                                            "typeName": {
                                                "id": 326,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 325,
                                                    "name": "IUniswapV3Pool",
                                                    "nameLocations": [
                                                        "4000:14:3"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 2442,
                                                    "src": "4000:14:3"
                                                },
                                                "referencedDeclaration": 2442,
                                                "src": "4000:14:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                    "typeString": "contract IUniswapV3Pool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 335,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 330,
                                                "name": "factory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 14,
                                                "src": "4058:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 331,
                                                "name": "tokenIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 310,
                                                "src": "4079:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 332,
                                                "name": "tokenOut",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 312,
                                                "src": "4100:8:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 333,
                                                "name": "fee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 314,
                                                "src": "4122:3:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint24",
                                                    "typeString": "uint24"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint24",
                                                    "typeString": "uint24"
                                                }
                                            ],
                                            "expression": {
                                                "id": 328,
                                                "name": "HelpFunctions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 620,
                                                "src": "4022:13:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_HelpFunctions_$620_$",
                                                    "typeString": "type(library HelpFunctions)"
                                                }
                                            },
                                            "id": 329,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4036:8:3",
                                            "memberName": "_getPool",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 593,
                                            "src": "4022:22:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$2442_$",
                                                "typeString": "function (address,address,address,uint24) pure returns (contract IUniswapV3Pool)"
                                            }
                                        },
                                        "id": 334,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4022:113:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                            "typeString": "contract IUniswapV3Pool"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4000:135:3"
                                },
                                {
                                    "assignments": [
                                        337,
                                        339,
                                        null,
                                        null,
                                        null
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 337,
                                            "mutability": "mutable",
                                            "name": "sqrtPriceX96",
                                            "nameLocation": "4155:12:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 398,
                                            "src": "4147:20:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                            },
                                            "typeName": {
                                                "id": 336,
                                                "name": "uint160",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4147:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 339,
                                            "mutability": "mutable",
                                            "name": "tick",
                                            "nameLocation": "4175:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 398,
                                            "src": "4169:10:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            },
                                            "typeName": {
                                                "id": 338,
                                                "name": "int24",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4169:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null,
                                        null,
                                        null
                                    ],
                                    "id": 343,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 340,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 327,
                                                "src": "4189:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                    "typeString": "contract IUniswapV3Pool"
                                                }
                                            },
                                            "id": 341,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4194:5:3",
                                            "memberName": "slot0",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2324,
                                            "src": "4189:10:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$",
                                                "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16)"
                                            }
                                        },
                                        "id": 342,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4189:12:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$",
                                            "typeString": "tuple(uint160,int24,uint16,uint16,uint16)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4146:55:3"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 350,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            },
                                            "id": 346,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 344,
                                                "name": "tick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 339,
                                                "src": "4216:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                                "id": 345,
                                                "name": "upperTick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 318,
                                                "src": "4223:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "src": "4216:16:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            },
                                            "id": 349,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 347,
                                                "name": "tick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 339,
                                                "src": "4236:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                                "id": 348,
                                                "name": "lowerTick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 316,
                                                "src": "4243:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "src": "4236:16:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "4216:36:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 397,
                                    "nodeType": "IfStatement",
                                    "src": "4212:632:3",
                                    "trueBody": {
                                        "id": 396,
                                        "nodeType": "Block",
                                        "src": "4254:590:3",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 369,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 351,
                                                        "name": "amount1",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 323,
                                                        "src": "4268:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 356,
                                                                        "name": "sqrtPriceX96",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 337,
                                                                        "src": "4325:12:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint160",
                                                                            "typeString": "uint160"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint160",
                                                                            "typeString": "uint160"
                                                                        }
                                                                    ],
                                                                    "id": 355,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "4317:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                                        "typeString": "type(uint256)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 354,
                                                                        "name": "uint256",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "4317:7:3",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 357,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4317:21:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 360,
                                                                        "name": "amountInDesired",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 320,
                                                                        "src": "4364:15:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 359,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "4356:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                                        "typeString": "type(uint256)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 358,
                                                                        "name": "uint256",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "4356:7:3",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 361,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4356:24:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                                            "typeString": "int_const 79228162514264337593543950336"
                                                                        },
                                                                        "id": 366,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "hexValue": "32",
                                                                            "id": 364,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "4406:1:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_2_by_1",
                                                                                "typeString": "int_const 2"
                                                                            },
                                                                            "value": "2"
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "**",
                                                                        "rightExpression": {
                                                                            "hexValue": "3936",
                                                                            "id": 365,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "4411:2:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_96_by_1",
                                                                                "typeString": "int_const 96"
                                                                            },
                                                                            "value": "96"
                                                                        },
                                                                        "src": "4406:7:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                                            "typeString": "int_const 79228162514264337593543950336"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                                            "typeString": "int_const 79228162514264337593543950336"
                                                                        }
                                                                    ],
                                                                    "id": 363,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                    "src": "4398:7:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                                        "typeString": "type(uint256)"
                                                                    },
                                                                    "typeName": {
                                                                        "id": 362,
                                                                        "name": "uint256",
                                                                        "nodeType": "ElementaryTypeName",
                                                                        "src": "4398:7:3",
                                                                        "typeDescriptions": {}
                                                                    }
                                                                },
                                                                "id": 367,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "typeConversion",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4398:16:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 352,
                                                                "name": "Math",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1551,
                                                                "src": "4278:4:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Math_$1551_$",
                                                                    "typeString": "type(library Math)"
                                                                }
                                                            },
                                                            "id": 353,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "4283:16:3",
                                                            "memberName": "mulDivRoundingUp",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1539,
                                                            "src": "4278:21:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 368,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4278:150:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "4268:160:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 370,
                                                "nodeType": "ExpressionStatement",
                                                "src": "4268:160:3"
                                            },
                                            {
                                                "assignments": [
                                                    372
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 372,
                                                        "mutability": "mutable",
                                                        "name": "liquidity",
                                                        "nameLocation": "4451:9:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 396,
                                                        "src": "4443:17:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint128",
                                                            "typeString": "uint128"
                                                        },
                                                        "typeName": {
                                                            "id": 371,
                                                            "name": "uint128",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "4443:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint128",
                                                                "typeString": "uint128"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 382,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "id": 374,
                                                            "name": "lowerTick",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 316,
                                                            "src": "4494:9:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        },
                                                        {
                                                            "id": 375,
                                                            "name": "upperTick",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 318,
                                                            "src": "4521:9:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        },
                                                        {
                                                            "id": 376,
                                                            "name": "sqrtPriceX96",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 337,
                                                            "src": "4548:12:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint160",
                                                                "typeString": "uint160"
                                                            }
                                                        },
                                                        {
                                                            "id": 377,
                                                            "name": "amountInDesired",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 320,
                                                            "src": "4578:15:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 380,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 378,
                                                                "name": "amount1",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 323,
                                                                "src": "4611:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "hexValue": "32",
                                                                "id": 379,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4622:1:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_2_by_1",
                                                                    "typeString": "int_const 2"
                                                                },
                                                                "value": "2"
                                                            },
                                                            "src": "4611:12:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint160",
                                                                "typeString": "uint160"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 373,
                                                        "name": "_getLiquidity",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 523,
                                                        "src": "4463:13:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                                                            "typeString": "function (int24,int24,uint160,uint256,uint256) pure returns (uint128)"
                                                        }
                                                    },
                                                    "id": 381,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4463:174:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint128",
                                                        "typeString": "uint128"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "4443:194:3"
                                            },
                                            {
                                                "expression": {
                                                    "id": 394,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 383,
                                                        "name": "amount1",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 323,
                                                        "src": "4652:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 388,
                                                                        "name": "lowerTick",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 316,
                                                                        "src": "4729:9:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_int24",
                                                                            "typeString": "int24"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_int24",
                                                                            "typeString": "int24"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 386,
                                                                        "name": "TickMath",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2302,
                                                                        "src": "4701:8:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_TickMath_$2302_$",
                                                                            "typeString": "type(library TickMath)"
                                                                        }
                                                                    },
                                                                    "id": 387,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "4710:18:3",
                                                                    "memberName": "getSqrtRatioAtTick",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2162,
                                                                    "src": "4701:27:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                                                                        "typeString": "function (int24) pure returns (uint160)"
                                                                    }
                                                                },
                                                                "id": 389,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "4701:38:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                }
                                                            },
                                                            {
                                                                "id": 390,
                                                                "name": "sqrtPriceX96",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 337,
                                                                "src": "4757:12:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                }
                                                            },
                                                            {
                                                                "id": 391,
                                                                "name": "liquidity",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 372,
                                                                "src": "4787:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint128",
                                                                    "typeString": "uint128"
                                                                }
                                                            },
                                                            {
                                                                "hexValue": "66616c7365",
                                                                "id": 392,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "4814:5:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint128",
                                                                    "typeString": "uint128"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 384,
                                                                "name": "Math",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1551,
                                                                "src": "4662:4:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Math_$1551_$",
                                                                    "typeString": "type(library Math)"
                                                                }
                                                            },
                                                            "id": 385,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "4667:16:3",
                                                            "memberName": "calcAmount1Delta",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1279,
                                                            "src": "4662:21:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
                                                                "typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 393,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4662:171:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "4652:181:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 395,
                                                "nodeType": "ExpressionStatement",
                                                "src": "4652:181:3"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "cbe76c3c",
                        "id": 399,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "quoteLiqInputToken0",
                        "nameLocation": "3764:19:3",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 321,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 310,
                                    "mutability": "mutable",
                                    "name": "tokenIn",
                                    "nameLocation": "3809:7:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 399,
                                    "src": "3801:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 309,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3801:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 312,
                                    "mutability": "mutable",
                                    "name": "tokenOut",
                                    "nameLocation": "3834:8:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 399,
                                    "src": "3826:16:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 311,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3826:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 314,
                                    "mutability": "mutable",
                                    "name": "fee",
                                    "nameLocation": "3859:3:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 399,
                                    "src": "3852:10:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint24",
                                        "typeString": "uint24"
                                    },
                                    "typeName": {
                                        "id": 313,
                                        "name": "uint24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3852:6:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 316,
                                    "mutability": "mutable",
                                    "name": "lowerTick",
                                    "nameLocation": "3878:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 399,
                                    "src": "3872:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                    },
                                    "typeName": {
                                        "id": 315,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3872:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 318,
                                    "mutability": "mutable",
                                    "name": "upperTick",
                                    "nameLocation": "3903:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 399,
                                    "src": "3897:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                    },
                                    "typeName": {
                                        "id": 317,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3897:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 320,
                                    "mutability": "mutable",
                                    "name": "amountInDesired",
                                    "nameLocation": "3930:15:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 399,
                                    "src": "3922:23:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 319,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3922:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3783:168:3"
                        },
                        "returnParameters": {
                            "id": 324,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 323,
                                    "mutability": "mutable",
                                    "name": "amount1",
                                    "nameLocation": "3981:7:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 399,
                                    "src": "3973:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 322,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3973:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3972:17:3"
                        },
                        "scope": 524,
                        "src": "3755:1095:3",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 489,
                            "nodeType": "Block",
                            "src": "5091:852:3",
                            "statements": [
                                {
                                    "assignments": [
                                        418
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 418,
                                            "mutability": "mutable",
                                            "name": "pool",
                                            "nameLocation": "5116:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 489,
                                            "src": "5101:19:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                "typeString": "contract IUniswapV3Pool"
                                            },
                                            "typeName": {
                                                "id": 417,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 416,
                                                    "name": "IUniswapV3Pool",
                                                    "nameLocations": [
                                                        "5101:14:3"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 2442,
                                                    "src": "5101:14:3"
                                                },
                                                "referencedDeclaration": 2442,
                                                "src": "5101:14:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                    "typeString": "contract IUniswapV3Pool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 426,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 421,
                                                "name": "factory",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 14,
                                                "src": "5159:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 422,
                                                "name": "tokenIn",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 401,
                                                "src": "5180:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 423,
                                                "name": "tokenOut",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 403,
                                                "src": "5201:8:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 424,
                                                "name": "fee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 405,
                                                "src": "5223:3:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint24",
                                                    "typeString": "uint24"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint24",
                                                    "typeString": "uint24"
                                                }
                                            ],
                                            "expression": {
                                                "id": 419,
                                                "name": "HelpFunctions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 620,
                                                "src": "5123:13:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_HelpFunctions_$620_$",
                                                    "typeString": "type(library HelpFunctions)"
                                                }
                                            },
                                            "id": 420,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5137:8:3",
                                            "memberName": "_getPool",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 593,
                                            "src": "5123:22:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$2442_$",
                                                "typeString": "function (address,address,address,uint24) pure returns (contract IUniswapV3Pool)"
                                            }
                                        },
                                        "id": 425,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5123:113:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                            "typeString": "contract IUniswapV3Pool"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5101:135:3"
                                },
                                {
                                    "assignments": [
                                        428,
                                        430,
                                        null,
                                        null,
                                        null
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 428,
                                            "mutability": "mutable",
                                            "name": "sqrtPriceX96",
                                            "nameLocation": "5256:12:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 489,
                                            "src": "5248:20:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                            },
                                            "typeName": {
                                                "id": 427,
                                                "name": "uint160",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5248:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint160",
                                                    "typeString": "uint160"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 430,
                                            "mutability": "mutable",
                                            "name": "tick",
                                            "nameLocation": "5276:4:3",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 489,
                                            "src": "5270:10:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            },
                                            "typeName": {
                                                "id": 429,
                                                "name": "int24",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "5270:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null,
                                        null,
                                        null
                                    ],
                                    "id": 434,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 431,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 418,
                                                "src": "5290:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2442",
                                                    "typeString": "contract IUniswapV3Pool"
                                                }
                                            },
                                            "id": 432,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5295:5:3",
                                            "memberName": "slot0",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2324,
                                            "src": "5290:10:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$",
                                                "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16)"
                                            }
                                        },
                                        "id": 433,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5290:12:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$",
                                            "typeString": "tuple(uint160,int24,uint16,uint16,uint16)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5247:55:3"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 441,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            },
                                            "id": 437,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 435,
                                                "name": "tick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 430,
                                                "src": "5317:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                                "id": 436,
                                                "name": "upperTick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 409,
                                                "src": "5324:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "src": "5317:16:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_int24",
                                                "typeString": "int24"
                                            },
                                            "id": 440,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 438,
                                                "name": "tick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 430,
                                                "src": "5337:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                                "id": 439,
                                                "name": "lowerTick",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 407,
                                                "src": "5344:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int24",
                                                    "typeString": "int24"
                                                }
                                            },
                                            "src": "5337:16:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "5317:36:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 488,
                                    "nodeType": "IfStatement",
                                    "src": "5313:624:3",
                                    "trueBody": {
                                        "id": 487,
                                        "nodeType": "Block",
                                        "src": "5355:582:3",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 460,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 442,
                                                        "name": "amount0",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 414,
                                                        "src": "5369:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "id": 445,
                                                                "name": "amountInDesired",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 411,
                                                                "src": "5415:15:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 450,
                                                                                "name": "sqrtPriceX96",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 428,
                                                                                "src": "5475:12:3",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint160",
                                                                                    "typeString": "uint160"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_uint160",
                                                                                    "typeString": "uint160"
                                                                                }
                                                                            ],
                                                                            "id": 449,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "5467:7:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                                                "typeString": "type(uint256)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 448,
                                                                                "name": "uint256",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "5467:7:3",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 451,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "nameLocations": [],
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5467:21:3",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "commonType": {
                                                                                    "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                                                    "typeString": "int_const 79228162514264337593543950336"
                                                                                },
                                                                                "id": 456,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "leftExpression": {
                                                                                    "hexValue": "32",
                                                                                    "id": 454,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "5498:1:3",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_2_by_1",
                                                                                        "typeString": "int_const 2"
                                                                                    },
                                                                                    "value": "2"
                                                                                },
                                                                                "nodeType": "BinaryOperation",
                                                                                "operator": "**",
                                                                                "rightExpression": {
                                                                                    "hexValue": "3936",
                                                                                    "id": 455,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "number",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "5503:2:3",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_rational_96_by_1",
                                                                                        "typeString": "int_const 96"
                                                                                    },
                                                                                    "value": "96"
                                                                                },
                                                                                "src": "5498:7:3",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                                                    "typeString": "int_const 79228162514264337593543950336"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                                                                                    "typeString": "int_const 79228162514264337593543950336"
                                                                                }
                                                                            ],
                                                                            "id": 453,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "5490:7:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                                                "typeString": "type(uint256)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 452,
                                                                                "name": "uint256",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "5490:7:3",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 457,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "nameLocations": [],
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "5490:16:3",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 446,
                                                                        "name": "Math",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1551,
                                                                        "src": "5448:4:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_Math_$1551_$",
                                                                            "typeString": "type(library Math)"
                                                                        }
                                                                    },
                                                                    "id": 447,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "5453:13:3",
                                                                    "memberName": "divRoundingUp",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 1550,
                                                                    "src": "5448:18:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 458,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "5448:59:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 443,
                                                                "name": "Math",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1551,
                                                                "src": "5379:4:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Math_$1551_$",
                                                                    "typeString": "type(library Math)"
                                                                }
                                                            },
                                                            "id": 444,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "5384:13:3",
                                                            "memberName": "divRoundingUp",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1550,
                                                            "src": "5379:18:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 459,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "5379:142:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "5369:152:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 461,
                                                "nodeType": "ExpressionStatement",
                                                "src": "5369:152:3"
                                            },
                                            {
                                                "assignments": [
                                                    463
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 463,
                                                        "mutability": "mutable",
                                                        "name": "liquidity",
                                                        "nameLocation": "5544:9:3",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 487,
                                                        "src": "5536:17:3",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint128",
                                                            "typeString": "uint128"
                                                        },
                                                        "typeName": {
                                                            "id": 462,
                                                            "name": "uint128",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "5536:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint128",
                                                                "typeString": "uint128"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 473,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "id": 465,
                                                            "name": "lowerTick",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 407,
                                                            "src": "5587:9:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        },
                                                        {
                                                            "id": 466,
                                                            "name": "upperTick",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 409,
                                                            "src": "5614:9:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        },
                                                        {
                                                            "id": 467,
                                                            "name": "sqrtPriceX96",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 428,
                                                            "src": "5641:12:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint160",
                                                                "typeString": "uint160"
                                                            }
                                                        },
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 470,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 468,
                                                                "name": "amount0",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 414,
                                                                "src": "5671:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "**",
                                                            "rightExpression": {
                                                                "hexValue": "32",
                                                                "id": 469,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5682:1:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_2_by_1",
                                                                    "typeString": "int_const 2"
                                                                },
                                                                "value": "2"
                                                            },
                                                            "src": "5671:12:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        {
                                                            "id": 471,
                                                            "name": "amountInDesired",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 411,
                                                            "src": "5701:15:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint160",
                                                                "typeString": "uint160"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 464,
                                                        "name": "_getLiquidity",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 523,
                                                        "src": "5556:13:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                                                            "typeString": "function (int24,int24,uint160,uint256,uint256) pure returns (uint128)"
                                                        }
                                                    },
                                                    "id": 472,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5556:174:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint128",
                                                        "typeString": "uint128"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "5536:194:3"
                                            },
                                            {
                                                "expression": {
                                                    "id": 485,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 474,
                                                        "name": "amount0",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 414,
                                                        "src": "5745:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "id": 477,
                                                                "name": "sqrtPriceX96",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 428,
                                                                "src": "5794:12:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                }
                                                            },
                                                            {
                                                                "arguments": [
                                                                    {
                                                                        "id": 480,
                                                                        "name": "upperTick",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 409,
                                                                        "src": "5852:9:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_int24",
                                                                            "typeString": "int24"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_int24",
                                                                            "typeString": "int24"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 478,
                                                                        "name": "TickMath",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2302,
                                                                        "src": "5824:8:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_TickMath_$2302_$",
                                                                            "typeString": "type(library TickMath)"
                                                                        }
                                                                    },
                                                                    "id": 479,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "5833:18:3",
                                                                    "memberName": "getSqrtRatioAtTick",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 2162,
                                                                    "src": "5824:27:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                                                                        "typeString": "function (int24) pure returns (uint160)"
                                                                    }
                                                                },
                                                                "id": 481,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "5824:38:3",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                }
                                                            },
                                                            {
                                                                "id": 482,
                                                                "name": "liquidity",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 463,
                                                                "src": "5880:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint128",
                                                                    "typeString": "uint128"
                                                                }
                                                            },
                                                            {
                                                                "hexValue": "66616c7365",
                                                                "id": 483,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "5907:5:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint160",
                                                                    "typeString": "uint160"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint128",
                                                                    "typeString": "uint128"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 475,
                                                                "name": "Math",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1551,
                                                                "src": "5755:4:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Math_$1551_$",
                                                                    "typeString": "type(library Math)"
                                                                }
                                                            },
                                                            "id": 476,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "5760:16:3",
                                                            "memberName": "calcAmount0Delta",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1223,
                                                            "src": "5755:21:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
                                                                "typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
                                                            }
                                                        },
                                                        "id": 484,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "5755:171:3",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "5745:181:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 486,
                                                "nodeType": "ExpressionStatement",
                                                "src": "5745:181:3"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "f898a068",
                        "id": 490,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "quoteLiqInputToken1",
                        "nameLocation": "4865:19:3",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 412,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 401,
                                    "mutability": "mutable",
                                    "name": "tokenIn",
                                    "nameLocation": "4910:7:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 490,
                                    "src": "4902:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 400,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4902:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 403,
                                    "mutability": "mutable",
                                    "name": "tokenOut",
                                    "nameLocation": "4935:8:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 490,
                                    "src": "4927:16:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 402,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4927:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 405,
                                    "mutability": "mutable",
                                    "name": "fee",
                                    "nameLocation": "4960:3:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 490,
                                    "src": "4953:10:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint24",
                                        "typeString": "uint24"
                                    },
                                    "typeName": {
                                        "id": 404,
                                        "name": "uint24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4953:6:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint24",
                                            "typeString": "uint24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 407,
                                    "mutability": "mutable",
                                    "name": "lowerTick",
                                    "nameLocation": "4979:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 490,
                                    "src": "4973:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                    },
                                    "typeName": {
                                        "id": 406,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4973:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 409,
                                    "mutability": "mutable",
                                    "name": "upperTick",
                                    "nameLocation": "5004:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 490,
                                    "src": "4998:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                    },
                                    "typeName": {
                                        "id": 408,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4998:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 411,
                                    "mutability": "mutable",
                                    "name": "amountInDesired",
                                    "nameLocation": "5031:15:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 490,
                                    "src": "5023:23:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 410,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5023:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4884:168:3"
                        },
                        "returnParameters": {
                            "id": 415,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 414,
                                    "mutability": "mutable",
                                    "name": "amount0",
                                    "nameLocation": "5082:7:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 490,
                                    "src": "5074:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 413,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5074:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5073:17:3"
                        },
                        "scope": 524,
                        "src": "4856:1087:3",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 522,
                            "nodeType": "Block",
                            "src": "6202:264:3",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 520,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 505,
                                            "name": "liquidity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 503,
                                            "src": "6212:9:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 508,
                                                    "name": "sqrtPriceX96",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 496,
                                                    "src": "6274:12:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    }
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 511,
                                                            "name": "lowerTick",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 492,
                                                            "src": "6328:9:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 509,
                                                            "name": "TickMath",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2302,
                                                            "src": "6300:8:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_TickMath_$2302_$",
                                                                "typeString": "type(library TickMath)"
                                                            }
                                                        },
                                                        "id": 510,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "6309:18:3",
                                                        "memberName": "getSqrtRatioAtTick",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2162,
                                                        "src": "6300:27:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                                                            "typeString": "function (int24) pure returns (uint160)"
                                                        }
                                                    },
                                                    "id": 512,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "6300:38:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    }
                                                },
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 515,
                                                            "name": "upperTick",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 494,
                                                            "src": "6380:9:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_int24",
                                                                "typeString": "int24"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 513,
                                                            "name": "TickMath",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2302,
                                                            "src": "6352:8:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_TickMath_$2302_$",
                                                                "typeString": "type(library TickMath)"
                                                            }
                                                        },
                                                        "id": 514,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "6361:18:3",
                                                        "memberName": "getSqrtRatioAtTick",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2162,
                                                        "src": "6352:27:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                                                            "typeString": "function (int24) pure returns (uint160)"
                                                        }
                                                    },
                                                    "id": 516,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "6352:38:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    }
                                                },
                                                {
                                                    "id": 517,
                                                    "name": "amountInDesired",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 498,
                                                    "src": "6404:15:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                {
                                                    "id": 518,
                                                    "name": "amountOutDesired",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 500,
                                                    "src": "6433:16:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint160",
                                                        "typeString": "uint160"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 506,
                                                    "name": "LiquidityMath",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1144,
                                                    "src": "6224:13:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_LiquidityMath_$1144_$",
                                                        "typeString": "type(library LiquidityMath)"
                                                    }
                                                },
                                                "id": 507,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "6238:22:3",
                                                "memberName": "getLiquidityForAmounts",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1108,
                                                "src": "6224:36:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                                                    "typeString": "function (uint160,uint160,uint160,uint256,uint256) pure returns (uint128)"
                                                }
                                            },
                                            "id": 519,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "6224:235:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint128",
                                                "typeString": "uint128"
                                            }
                                        },
                                        "src": "6212:247:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                        }
                                    },
                                    "id": 521,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6212:247:3"
                                }
                            ]
                        },
                        "id": 523,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_getLiquidity",
                        "nameLocation": "5993:13:3",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 501,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 492,
                                    "mutability": "mutable",
                                    "name": "lowerTick",
                                    "nameLocation": "6022:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 523,
                                    "src": "6016:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                    },
                                    "typeName": {
                                        "id": 491,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6016:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 494,
                                    "mutability": "mutable",
                                    "name": "upperTick",
                                    "nameLocation": "6047:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 523,
                                    "src": "6041:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                    },
                                    "typeName": {
                                        "id": 493,
                                        "name": "int24",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6041:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 496,
                                    "mutability": "mutable",
                                    "name": "sqrtPriceX96",
                                    "nameLocation": "6074:12:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 523,
                                    "src": "6066:20:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                    },
                                    "typeName": {
                                        "id": 495,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6066:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 498,
                                    "mutability": "mutable",
                                    "name": "amountInDesired",
                                    "nameLocation": "6104:15:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 523,
                                    "src": "6096:23:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 497,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6096:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 500,
                                    "mutability": "mutable",
                                    "name": "amountOutDesired",
                                    "nameLocation": "6137:16:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 523,
                                    "src": "6129:24:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 499,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6129:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6006:153:3"
                        },
                        "returnParameters": {
                            "id": 504,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 503,
                                    "mutability": "mutable",
                                    "name": "liquidity",
                                    "nameLocation": "6191:9:3",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 523,
                                    "src": "6183:17:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                    },
                                    "typeName": {
                                        "id": 502,
                                        "name": "uint128",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6183:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint128",
                                            "typeString": "uint128"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6182:19:3"
                        },
                        "scope": 524,
                        "src": "5984:482:3",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 525,
                "src": "321:6147:3",
                "usedErrors": [
                    4125
                ],
                "usedEvents": []
            }
        ],
        "src": "37:6432:3"
    },
    "bytecode": "60a060405234801561001057600080fd5b50604051611bd8380380611bd883398101604081905261002f91610055565b6001600160a01b03166080819052600080546001600160a01b0319169091179055610085565b60006020828403121561006757600080fd5b81516001600160a01b038116811461007e57600080fd5b9392505050565b608051611b2b6100ad600039600081816097015281816102e301526107610152611b2b6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063260a5b0314610067578063c45a015514610092578063cbe76c3c146100d1578063e95dbb69146100f2578063f898a0681461012b578063fa461e331461013e575b600080fd5b61007a610075366004611500565b610153565b60405161008993929190611545565b60405180910390f35b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610089565b6100e46100df366004611616565b6102cc565b604051908152602001610089565b61010561010036600461168d565b610470565b604080519384526001600160a01b03909216602084015260020b90820152606001610089565b6100e4610139366004611616565b61074a565b61015161014c3660046116f3565b6108f0565b005b6000606080610161856109ad565b67ffffffffffffffff8111156101795761017961145d565b6040519080825280602002602001820160405280156101a2578160200160208202803683370190505b5091506101ae856109ad565b67ffffffffffffffff8111156101c6576101c661145d565b6040519080825280602002602001820160405280156101ef578160200160208202803683370190505b50905060005b6000806000610203896109d9565b925092509250600080600061021c8686868e6000610470565b9250925092508189888151811061023557610235611743565b60200260200101906001600160a01b031690816001600160a01b0316815250508088888151811061026857610268611743565b602002602001019060020b908160020b81525050829a50868061028a9061176f565b9750506102968c610a15565b156102ab576102a48c610a4f565b9b506102b9565b8a99505050505050506102c4565b5050505050506101f5565b509250925092565b604051631c9956ed60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015280881660248301528616604482015262ffffff851660648201526000908190739828dc171e405abf5282769f90461a6e284fa5839063e4cab76890608401602060405180830381865af4158015610364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190611788565b9050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef91906117b7565b505050915091508560020b8160020b12801561041057508660020b8160020b135b156104635761042d826001600160a01b031686600160601b610a80565b935060006104488888858961044360028b611905565b610acb565b905061045f61045689610af4565b84836000610f16565b9450505b5050509695505050505050565b6000805460405163175c1b2360e31b81526001600160a01b038881166004830152878116602483015262ffffff871660448301528392839283929091169063bae0d91890606401602060405180830381865afa1580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190611788565b90506000886001600160a01b03168a6001600160a01b0316109050816001600160a01b031663dd5a12d830838a8a6001600160a01b031660001461053c578a610575565b8561056557610560600173fffd8963efd1fc6a506488495d951d5263988d26611914565b610575565b6105756401000276a3600161193b565b604080516001600160a01b038a166020820152016040516020818303038152906040526040518663ffffffff1660e01b81526004016105b895949392919061195b565b60408051808303816000875af19250505080156105f2575060408051601f3d908101601f191682019092526105ef918101906119d5565b60015b61073a573d808015610620576040519150601f19603f3d011682016040523d82523d6000602084013e610625565b606091505b50805160208083019190912060408051600481526024810190915291820180516001600160e01b0316632d4eeeb360e21b17815291519091208190036106a65760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59141c9a58d9531a5b5a5d607a1b60448201526064015b60405180910390fd5b6040805160048152602481019091526020810180516001600160e01b0316634323a55560e01b178152905190208190036107175760405162461bcd60e51b81526020600482015260126024820152714e6f74456e6f7567684c697175696469747960701b604482015260640161069d565b8180602001905181019061072b91906119f9565b9650965096505050505061073f565b505050505b955095509592505050565b604051631c9956ed60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015280881660248301528616604482015262ffffff851660648201526000908190739828dc171e405abf5282769f90461a6e284fa5839063e4cab76890608401602060405180830381865af41580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190611788565b9050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d91906117b7565b505050915091508560020b8160020b12801561088e57508660020b8160020b135b1561046357600160601b6001600160a01b038316046bffffffffffffffffffffffff8316151501808606151590860401935060006108d98888856108d360028a611905565b8a610acb565b905061045f836108e889610af4565b836000610fa0565b6000818060200190518101906109069190611788565b9050600080851361091f5761091a85611a3c565b610928565b61092884611a3c565b9050600080836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f91906117b7565b50505091509150604051838152826020820152816040820152606081fd5b60006109bb60036014611a58565b601483516109c99190611a6b565b6109d39190611a94565b92915050565b600080806109e78482611075565b92506109f48460146110da565b9050610a0c610a0560036014611a58565b8590611075565b91509193909250565b6000610a2360036014611a58565b6014610a30600382611a58565b610a3a9190611a58565b610a449190611a58565b825110159050919050565b60606109d3610a6060036014611a58565b610a6c60036014611a58565b8451610a789190611a6b565b849190611137565b6000610a8d848484611244565b905060008280610a9f57610a9f611a7e565b8486091115610ac4576000198110610ab657600080fd5b80610ac08161176f565b9150505b9392505050565b6000610aea84610ada88610af4565b610ae388610af4565b8686611311565b9695505050505050565b60008060008360020b12610b0b578260020b610b18565b8260020b610b1890611a3c565b9050610b27620d89e719611aa8565b62ffffff16811115610b5f5760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640161069d565b600081600116600003610b7657600160801b610b88565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610bc7576080610bc2826ffff97272373d413259a46990580e213a611aca565b901c90505b6004821615610bf1576080610bec826ffff2e50f5f656932ef12357cf3c7fdcc611aca565b901c90505b6008821615610c1b576080610c16826fffe5caca7e10e4e61c3624eaa0941cd0611aca565b901c90505b6010821615610c45576080610c40826fffcb9843d60f6159c9db58835c926644611aca565b901c90505b6020821615610c6f576080610c6a826fff973b41fa98c081472e6896dfb254c0611aca565b901c90505b6040821615610c99576080610c94826fff2ea16466c96a3843ec78b326b52861611aca565b901c90505b6080821615610cc3576080610cbe826ffe5dee046a99a2a811c461f1969c3053611aca565b901c90505b610100821615610cee576080610ce9826ffcbe86c7900a88aedcffc83b479aa3a4611aca565b901c90505b610200821615610d19576080610d14826ff987a7253ac413176f2b074cf7815e54611aca565b901c90505b610400821615610d44576080610d3f826ff3392b0822b70005940c7a398e4b70f3611aca565b901c90505b610800821615610d6f576080610d6a826fe7159475a2c29b7443b29c7fa6e889d9611aca565b901c90505b611000821615610d9a576080610d95826fd097f3bdfd2022b8845ad8f792aa5825611aca565b901c90505b612000821615610dc5576080610dc0826fa9f746462d870fdf8a65dc1f90e061e5611aca565b901c90505b614000821615610df0576080610deb826f70d869a156d2a1b890bb3df62baf32f7611aca565b901c90505b618000821615610e1b576080610e16826f31be135f97d08fd981231505542fcfa6611aca565b901c90505b62010000821615610e47576080610e42826f09aa508b5b7a84e1c677de54f3e99bc9611aca565b901c90505b62020000821615610e72576080610e6d826e5d6af8dedb81196699c329225ee604611aca565b901c90505b62040000821615610e9c576080610e97826d2216e584f5fa1ea926041bedfe98611aca565b901c90505b62080000821615610ec4576080610ebf826b048a170391f7dc42444e8fa2611aca565b901c90505b60008460020b1315610edf57610edc81600019611a94565b90505b610eee64010000000082611ae1565b15610efa576001610efd565b60005b610f0e9060ff16602083901c611a58565b949350505050565b6000836001600160a01b0316856001600160a01b03161115610f36579293925b8115610f6d57610f666001600160801b038416610f538787611914565b6001600160a01b0316600160601b610a80565b9050610f0e565b610f976001600160801b038416610f848787611914565b6001600160a01b0316600160601b611244565b95945050505050565b6000836001600160a01b0316856001600160a01b03161115610fc0579293925b6000856001600160a01b031611610fd657600080fd5b6fffffffffffffffffffffffffffffffff60601b606084901b166000610ffc8787611914565b6001600160a01b031690508315611040576110396110248383896001600160a01b0316610a80565b886001600160a01b0316808204910615150190565b925061106b565b866001600160a01b031661105e8383896001600160a01b0316611244565b6110689190611a94565b92505b5050949350505050565b6000611082826014611a58565b835110156110ca5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015260640161069d565b500160200151600160601b900490565b60006110e7826003611a58565b8351101561112e5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015260640161069d565b50016003015190565b60608161114581601f611a58565b10156111845760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161069d565b61118e8284611a58565b845110156111d25760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161069d565b6060821580156111f1576040519150600082526020820160405261123b565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561122a578051835260209283019201611212565b5050858452601f01601f1916604052505b50949350505050565b600080806000198587098587029250828110838203039150508060000361127e5783828161127457611274611a7e565b0492505050610ac4565b8381106112a857604051631dcf306360e21b8152600481018290526024810185905260440161069d565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000836001600160a01b0316856001600160a01b03161115611331579293925b846001600160a01b0316866001600160a01b03161161135c576113558585856113c8565b9050610f97565b836001600160a01b0316866001600160a01b0316116113bd5760006113828786866113c8565b9050600061139187898661142a565b9050806001600160801b0316826001600160801b0316106113b257806113b4565b815b92505050610f97565b610aea85858461142a565b6000826001600160a01b0316846001600160a01b031611156113e8579192915b600061140b856001600160a01b0316856001600160a01b0316600160601b611244565b9050610ac0838261141c8888611914565b6001600160a01b0316611244565b6000826001600160a01b0316846001600160a01b0316111561144a579192915b610f0e82600160601b61141c8787611914565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261148457600080fd5b813567ffffffffffffffff8082111561149f5761149f61145d565b604051601f8301601f19908116603f011681019082821181831017156114c7576114c761145d565b816040528381528660208588010111156114e057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561151357600080fd5b823567ffffffffffffffff81111561152a57600080fd5b61153685828601611473565b95602094909401359450505050565b6000606082018583526020606081850152818651808452608086019150828801935060005b8181101561158f5784516001600160a01b03168352938301939183019160010161156a565b50508481036040860152855180825290820192508186019060005b818110156115c957825160020b855293830193918301916001016115aa565b509298975050505050505050565b6001600160a01b03811681146115ec57600080fd5b50565b803562ffffff8116811461160257600080fd5b919050565b8060020b81146115ec57600080fd5b60008060008060008060c0878903121561162f57600080fd5b863561163a816115d7565b9550602087013561164a816115d7565b9450611658604088016115ef565b9350606087013561166881611607565b9250608087013561167881611607565b8092505060a087013590509295509295509295565b600080600080600060a086880312156116a557600080fd5b85356116b0816115d7565b945060208601356116c0816115d7565b93506116ce604087016115ef565b92506060860135915060808601356116e5816115d7565b809150509295509295909350565b60008060006060848603121561170857600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561172d57600080fd5b61173986828701611473565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161178157611781611759565b5060010190565b60006020828403121561179a57600080fd5b8151610ac4816115d7565b805161ffff8116811461160257600080fd5b600080600080600060a086880312156117cf57600080fd5b85516117da816115d7565b60208701519095506117eb81611607565b93506117f9604087016117a5565b9250611807606087016117a5565b9150611815608087016117a5565b90509295509295909350565b600181815b8085111561185c57816000190482111561184257611842611759565b8085161561184f57918102915b93841c9390800290611826565b509250929050565b600082611873575060016109d3565b81611880575060006109d3565b816001811461189657600281146118a0576118bc565b60019150506109d3565b60ff8411156118b1576118b1611759565b50506001821b6109d3565b5060208310610133831016604e8410600b84101617156118df575081810a6109d3565b6118e98383611821565b80600019048211156118fd576118fd611759565b029392505050565b6000610ac460ff841683611864565b6001600160a01b0382811682821603908082111561193457611934611759565b5092915050565b6001600160a01b0381811683821601908082111561193457611934611759565b600060018060a01b038088168352602087151581850152866040850152818616606085015260a06080850152845191508160a085015260005b828110156119b05785810182015185820160c001528101611994565b5050600060c0828501015260c0601f19601f8301168401019150509695505050505050565b600080604083850312156119e857600080fd5b505080516020909101519092909150565b600080600060608486031215611a0e57600080fd5b835192506020840151611a20816115d7565b6040850151909250611a3181611607565b809150509250925092565b6000600160ff1b8201611a5157611a51611759565b5060000390565b808201808211156109d3576109d3611759565b818103818111156109d3576109d3611759565b634e487b7160e01b600052601260045260246000fd5b600082611aa357611aa3611a7e565b500490565b60008160020b627fffff198103611ac157611ac1611759565b60000392915050565b80820281158282048414176109d3576109d3611759565b600082611af057611af0611a7e565b50069056fea26469706673582212202023e08c202621d838f630c1b5d3fcaa6ef24400dd82f180f37691c196c47d2564736f6c63430008140033",
    "bytecodeSha1": "097cd8f93c264fbff98c2d2fe1b78d35d32079df",
    "compiler": {
        "evm_version": "istanbul",
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "version": "0.8.20+commit.a1b79de6"
    },
    "contractName": "Quoter",
    "coverageMap": {
        "branches": {
            "0": {},
            "1": {},
            "10": {
                "BytesLibExt.toUint24": {
                    "92": [
                        283,
                        310,
                        true
                    ]
                }
            },
            "11": {},
            "12": {},
            "13": {},
            "14": {},
            "15": {},
            "16": {
                "TickMath.getSqrtRatioAtTick": {
                    "108": [
                        1468,
                        1476,
                        true
                    ],
                    "109": [
                        1543,
                        1579,
                        true
                    ],
                    "110": [
                        1612,
                        1630,
                        true
                    ],
                    "111": [
                        1719,
                        1737,
                        false
                    ],
                    "112": [
                        1812,
                        1830,
                        false
                    ],
                    "113": [
                        1905,
                        1923,
                        false
                    ],
                    "114": [
                        1998,
                        2017,
                        false
                    ],
                    "115": [
                        2092,
                        2111,
                        false
                    ],
                    "116": [
                        2186,
                        2205,
                        false
                    ],
                    "117": [
                        2280,
                        2299,
                        false
                    ],
                    "118": [
                        2374,
                        2394,
                        false
                    ],
                    "119": [
                        2469,
                        2489,
                        false
                    ],
                    "120": [
                        2564,
                        2584,
                        false
                    ],
                    "121": [
                        2659,
                        2679,
                        false
                    ],
                    "122": [
                        2754,
                        2775,
                        false
                    ],
                    "123": [
                        2850,
                        2871,
                        false
                    ],
                    "124": [
                        2946,
                        2967,
                        false
                    ],
                    "125": [
                        3042,
                        3063,
                        false
                    ],
                    "126": [
                        3138,
                        3160,
                        false
                    ],
                    "127": [
                        3234,
                        3256,
                        false
                    ],
                    "128": [
                        3329,
                        3351,
                        false
                    ],
                    "129": [
                        3422,
                        3444,
                        false
                    ],
                    "130": [
                        3511,
                        3519,
                        false
                    ],
                    "131": [
                        3904,
                        3926,
                        true
                    ]
                }
            },
            "17": {},
            "18": {},
            "19": {},
            "2": {},
            "20": {},
            "22": {},
            "23": {},
            "24": {},
            "25": {},
            "26": {
                "PRBMath.mulDiv": {
                    "106": [
                        16270,
                        16280,
                        false
                    ],
                    "107": [
                        16510,
                        16530,
                        false
                    ]
                }
            },
            "27": {
                "BytesLib.slice": {
                    "90": [
                        9944,
                        9967,
                        true
                    ],
                    "91": [
                        10005,
                        10038,
                        true
                    ]
                },
                "BytesLib.toAddress": {
                    "89": [
                        12990,
                        13018,
                        true
                    ]
                }
            },
            "3": {
                "Quoter.quoteLiqInputToken0": {
                    "80": [
                        4216,
                        4232,
                        false
                    ],
                    "81": [
                        4236,
                        4252,
                        false
                    ]
                },
                "Quoter.quoteLiqInputToken1": {
                    "86": [
                        5317,
                        5333,
                        false
                    ],
                    "87": [
                        5337,
                        5353,
                        false
                    ]
                },
                "Quoter.quoteMulti": {
                    "79": [
                        2168,
                        2191,
                        false
                    ]
                },
                "Quoter.quoteSingle": {
                    "82": [
                        2934,
                        2956,
                        true
                    ],
                    "83": [
                        3005,
                        3015,
                        true
                    ],
                    "84": [
                        3359,
                        3429,
                        false
                    ],
                    "85": [
                        3500,
                        3571,
                        false
                    ]
                },
                "Quoter.uniswapV3SwapCallback": {
                    "88": [
                        799,
                        815,
                        true
                    ]
                }
            },
            "4": {},
            "5": {},
            "6": {},
            "7": {
                "LiquidityMath.getLiquidityForAmount0": {
                    "97": [
                        420,
                        449,
                        false
                    ]
                },
                "LiquidityMath.getLiquidityForAmount1": {
                    "98": [
                        1030,
                        1059,
                        false
                    ]
                },
                "LiquidityMath.getLiquidityForAmounts": {
                    "93": [
                        1573,
                        1602,
                        false
                    ],
                    "94": [
                        1694,
                        1723,
                        false
                    ],
                    "95": [
                        1895,
                        1924,
                        false
                    ],
                    "96": [
                        2267,
                        2290,
                        true
                    ]
                }
            },
            "8": {
                "Math.calcAmount0Delta": {
                    "103": [
                        410,
                        439,
                        false
                    ],
                    "104": [
                        535,
                        552,
                        true
                    ],
                    "105": [
                        705,
                        712,
                        false
                    ]
                },
                "Math.calcAmount1Delta": {
                    "101": [
                        1291,
                        1320,
                        false
                    ],
                    "102": [
                        1412,
                        1419,
                        false
                    ]
                },
                "Math.mulDivRoundingUp": {
                    "99": [
                        5210,
                        5239,
                        false
                    ],
                    "100": [
                        5263,
                        5289,
                        true
                    ]
                }
            },
            "9": {}
        },
        "statements": {
            "0": {},
            "1": {},
            "10": {
                "BytesLibExt.toUint24": {
                    "56": [
                        275,
                        335
                    ]
                },
                "Path.decodeFirstPool": {
                    "17": [
                        1979,
                        2006
                    ],
                    "18": [
                        2016,
                        2046
                    ],
                    "19": [
                        2056,
                        2094
                    ]
                },
                "Path.hasMultiplePools": {
                    "20": [
                        1267,
                        1314
                    ]
                },
                "Path.numPools": {
                    "16": [
                        1406,
                        1452
                    ]
                },
                "Path.skipToken": {
                    "21": [
                        1711,
                        1768
                    ]
                }
            },
            "11": {},
            "12": {},
            "13": {},
            "14": {},
            "15": {},
            "16": {
                "TickMath.getSqrtRatioAtTick": {
                    "26": [
                        1535,
                        1585
                    ],
                    "27": [
                        1739,
                        1798
                    ],
                    "28": [
                        1832,
                        1891
                    ],
                    "29": [
                        1925,
                        1984
                    ],
                    "30": [
                        2019,
                        2078
                    ],
                    "31": [
                        2113,
                        2172
                    ],
                    "32": [
                        2207,
                        2266
                    ],
                    "33": [
                        2301,
                        2360
                    ],
                    "34": [
                        2396,
                        2455
                    ],
                    "35": [
                        2491,
                        2550
                    ],
                    "36": [
                        2586,
                        2645
                    ],
                    "37": [
                        2681,
                        2740
                    ],
                    "38": [
                        2777,
                        2836
                    ],
                    "39": [
                        2873,
                        2932
                    ],
                    "40": [
                        2969,
                        3028
                    ],
                    "41": [
                        3065,
                        3124
                    ],
                    "42": [
                        3162,
                        3220
                    ],
                    "43": [
                        3258,
                        3315
                    ],
                    "44": [
                        3353,
                        3408
                    ],
                    "45": [
                        3446,
                        3496
                    ],
                    "46": [
                        3521,
                        3554
                    ],
                    "47": [
                        3864,
                        3936
                    ]
                }
            },
            "17": {},
            "18": {},
            "19": {},
            "2": {},
            "20": {},
            "22": {},
            "23": {},
            "24": {},
            "25": {},
            "26": {
                "PRBMath.mulDiv": {
                    "60": [
                        16326,
                        16354
                    ],
                    "61": [
                        16384,
                        16397
                    ],
                    "62": [
                        16506,
                        16609
                    ],
                    "63": [
                        18637,
                        18673
                    ],
                    "64": [
                        18707,
                        18743
                    ],
                    "65": [
                        18778,
                        18814
                    ],
                    "66": [
                        18849,
                        18885
                    ],
                    "67": [
                        18920,
                        18956
                    ],
                    "68": [
                        18992,
                        19028
                    ],
                    "69": [
                        18030,
                        18054
                    ],
                    "70": [
                        19468,
                        19492
                    ]
                }
            },
            "27": {
                "BytesLib.slice": {
                    "57": [
                        9936,
                        9986
                    ],
                    "58": [
                        9997,
                        10060
                    ],
                    "59": [
                        12819,
                        12835
                    ]
                },
                "BytesLib.toAddress": {
                    "55": [
                        12982,
                        13044
                    ]
                }
            },
            "3": {
                "Quoter._getLiquidity": {
                    "25": [
                        6212,
                        6459
                    ]
                },
                "Quoter.quoteLiqInputToken0": {
                    "9": [
                        4268,
                        4428
                    ],
                    "10": [
                        4652,
                        4833
                    ]
                },
                "Quoter.quoteLiqInputToken1": {
                    "14": [
                        5369,
                        5521
                    ],
                    "15": [
                        5745,
                        5926
                    ]
                },
                "Quoter.quoteMulti": {
                    "0": [
                        1528,
                        1582
                    ],
                    "1": [
                        1592,
                        1636
                    ],
                    "2": [
                        2011,
                        2055
                    ],
                    "3": [
                        2069,
                        2097
                    ],
                    "4": [
                        2111,
                        2132
                    ],
                    "5": [
                        2146,
                        2149
                    ],
                    "6": [
                        2211,
                        2234
                    ],
                    "7": [
                        2273,
                        2293
                    ],
                    "8": [
                        2311,
                        2316
                    ]
                },
                "Quoter.quoteSingle": {
                    "11": [
                        3449,
                        3476
                    ],
                    "12": [
                        3590,
                        3618
                    ],
                    "13": [
                        3646,
                        3698
                    ]
                }
            },
            "4": {},
            "5": {},
            "6": {},
            "7": {
                "LiquidityMath.getLiquidityForAmount0": {
                    "75": [
                        463,
                        526
                    ],
                    "76": [
                        678,
                        789
                    ]
                },
                "LiquidityMath.getLiquidityForAmount1": {
                    "77": [
                        1073,
                        1136
                    ],
                    "78": [
                        1147,
                        1324
                    ]
                },
                "LiquidityMath.getLiquidityForAmounts": {
                    "71": [
                        1616,
                        1679
                    ],
                    "72": [
                        1739,
                        1874
                    ],
                    "73": [
                        2255,
                        2316
                    ],
                    "74": [
                        2347,
                        2482
                    ]
                }
            },
            "8": {
                "Math.calcAmount0Delta": {
                    "51": [
                        453,
                        516
                    ],
                    "52": [
                        527,
                        553
                    ],
                    "53": [
                        728,
                        869
                    ],
                    "54": [
                        900,
                        1011
                    ]
                },
                "Math.calcAmount1Delta": {
                    "48": [
                        1334,
                        1397
                    ],
                    "49": [
                        1435,
                        1585
                    ],
                    "50": [
                        1616,
                        1764
                    ]
                },
                "Math.mulDivRoundingUp": {
                    "22": [
                        5154,
                        5196
                    ],
                    "23": [
                        5255,
                        5290
                    ],
                    "24": [
                        5304,
                        5312
                    ]
                }
            },
            "9": {}
        }
    },
    "dependencies": [
        "ABDKMath64x64",
        "BitMath",
        "BytesLib",
        "BytesLibExt",
        "FixedPoint128",
        "FixedPoint96",
        "HelpFunctions",
        "IERC20",
        "IUniswapV3FlashCallback",
        "IUniswapV3MintCallback",
        "IUniswapV3Pool",
        "IUniswapV3PoolDeployer",
        "IUniswapV3SwapCallback",
        "LiquidityMath",
        "Math",
        "Oracle",
        "PRBMath",
        "Path",
        "Pool",
        "PoolAddress",
        "PoolFactory",
        "Position",
        "SwapMath",
        "Tick",
        "TickBitmap",
        "TickMath",
        "Utils"
    ],
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063260a5b0314610067578063c45a015514610092578063cbe76c3c146100d1578063e95dbb69146100f2578063f898a0681461012b578063fa461e331461013e575b600080fd5b61007a610075366004611500565b610153565b60405161008993929190611545565b60405180910390f35b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610089565b6100e46100df366004611616565b6102cc565b604051908152602001610089565b61010561010036600461168d565b610470565b604080519384526001600160a01b03909216602084015260020b90820152606001610089565b6100e4610139366004611616565b61074a565b61015161014c3660046116f3565b6108f0565b005b6000606080610161856109ad565b67ffffffffffffffff8111156101795761017961145d565b6040519080825280602002602001820160405280156101a2578160200160208202803683370190505b5091506101ae856109ad565b67ffffffffffffffff8111156101c6576101c661145d565b6040519080825280602002602001820160405280156101ef578160200160208202803683370190505b50905060005b6000806000610203896109d9565b925092509250600080600061021c8686868e6000610470565b9250925092508189888151811061023557610235611743565b60200260200101906001600160a01b031690816001600160a01b0316815250508088888151811061026857610268611743565b602002602001019060020b908160020b81525050829a50868061028a9061176f565b9750506102968c610a15565b156102ab576102a48c610a4f565b9b506102b9565b8a99505050505050506102c4565b5050505050506101f5565b509250925092565b604051631c9956ed60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015280881660248301528616604482015262ffffff85166064820152600090819073__$0298c9f31864cd8aa139f2173091fa1ee4$__9063e4cab76890608401602060405180830381865af4158015610364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190611788565b9050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef91906117b7565b505050915091508560020b8160020b12801561041057508660020b8160020b135b156104635761042d826001600160a01b031686600160601b610a80565b935060006104488888858961044360028b611905565b610acb565b905061045f61045689610af4565b84836000610f16565b9450505b5050509695505050505050565b6000805460405163175c1b2360e31b81526001600160a01b038881166004830152878116602483015262ffffff871660448301528392839283929091169063bae0d91890606401602060405180830381865afa1580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190611788565b90506000886001600160a01b03168a6001600160a01b0316109050816001600160a01b031663dd5a12d830838a8a6001600160a01b031660001461053c578a610575565b8561056557610560600173fffd8963efd1fc6a506488495d951d5263988d26611914565b610575565b6105756401000276a3600161193b565b604080516001600160a01b038a166020820152016040516020818303038152906040526040518663ffffffff1660e01b81526004016105b895949392919061195b565b60408051808303816000875af19250505080156105f2575060408051601f3d908101601f191682019092526105ef918101906119d5565b60015b61073a573d808015610620576040519150601f19603f3d011682016040523d82523d6000602084013e610625565b606091505b50805160208083019190912060408051600481526024810190915291820180516001600160e01b0316632d4eeeb360e21b17815291519091208190036106a65760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59141c9a58d9531a5b5a5d607a1b60448201526064015b60405180910390fd5b6040805160048152602481019091526020810180516001600160e01b0316634323a55560e01b178152905190208190036107175760405162461bcd60e51b81526020600482015260126024820152714e6f74456e6f7567684c697175696469747960701b604482015260640161069d565b8180602001905181019061072b91906119f9565b9650965096505050505061073f565b505050505b955095509592505050565b604051631c9956ed60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015280881660248301528616604482015262ffffff85166064820152600090819073__$0298c9f31864cd8aa139f2173091fa1ee4$__9063e4cab76890608401602060405180830381865af41580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190611788565b9050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d91906117b7565b505050915091508560020b8160020b12801561088e57508660020b8160020b135b1561046357600160601b6001600160a01b038316046bffffffffffffffffffffffff8316151501808606151590860401935060006108d98888856108d360028a611905565b8a610acb565b905061045f836108e889610af4565b836000610fa0565b6000818060200190518101906109069190611788565b9050600080851361091f5761091a85611a3c565b610928565b61092884611a3c565b9050600080836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f91906117b7565b50505091509150604051838152826020820152816040820152606081fd5b60006109bb60036014611a58565b601483516109c99190611a6b565b6109d39190611a94565b92915050565b600080806109e78482611075565b92506109f48460146110da565b9050610a0c610a0560036014611a58565b8590611075565b91509193909250565b6000610a2360036014611a58565b6014610a30600382611a58565b610a3a9190611a58565b610a449190611a58565b825110159050919050565b60606109d3610a6060036014611a58565b610a6c60036014611a58565b8451610a789190611a6b565b849190611137565b6000610a8d848484611244565b905060008280610a9f57610a9f611a7e565b8486091115610ac4576000198110610ab657600080fd5b80610ac08161176f565b9150505b9392505050565b6000610aea84610ada88610af4565b610ae388610af4565b8686611311565b9695505050505050565b60008060008360020b12610b0b578260020b610b18565b8260020b610b1890611a3c565b9050610b27620d89e719611aa8565b62ffffff16811115610b5f5760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640161069d565b600081600116600003610b7657600160801b610b88565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610bc7576080610bc2826ffff97272373d413259a46990580e213a611aca565b901c90505b6004821615610bf1576080610bec826ffff2e50f5f656932ef12357cf3c7fdcc611aca565b901c90505b6008821615610c1b576080610c16826fffe5caca7e10e4e61c3624eaa0941cd0611aca565b901c90505b6010821615610c45576080610c40826fffcb9843d60f6159c9db58835c926644611aca565b901c90505b6020821615610c6f576080610c6a826fff973b41fa98c081472e6896dfb254c0611aca565b901c90505b6040821615610c99576080610c94826fff2ea16466c96a3843ec78b326b52861611aca565b901c90505b6080821615610cc3576080610cbe826ffe5dee046a99a2a811c461f1969c3053611aca565b901c90505b610100821615610cee576080610ce9826ffcbe86c7900a88aedcffc83b479aa3a4611aca565b901c90505b610200821615610d19576080610d14826ff987a7253ac413176f2b074cf7815e54611aca565b901c90505b610400821615610d44576080610d3f826ff3392b0822b70005940c7a398e4b70f3611aca565b901c90505b610800821615610d6f576080610d6a826fe7159475a2c29b7443b29c7fa6e889d9611aca565b901c90505b611000821615610d9a576080610d95826fd097f3bdfd2022b8845ad8f792aa5825611aca565b901c90505b612000821615610dc5576080610dc0826fa9f746462d870fdf8a65dc1f90e061e5611aca565b901c90505b614000821615610df0576080610deb826f70d869a156d2a1b890bb3df62baf32f7611aca565b901c90505b618000821615610e1b576080610e16826f31be135f97d08fd981231505542fcfa6611aca565b901c90505b62010000821615610e47576080610e42826f09aa508b5b7a84e1c677de54f3e99bc9611aca565b901c90505b62020000821615610e72576080610e6d826e5d6af8dedb81196699c329225ee604611aca565b901c90505b62040000821615610e9c576080610e97826d2216e584f5fa1ea926041bedfe98611aca565b901c90505b62080000821615610ec4576080610ebf826b048a170391f7dc42444e8fa2611aca565b901c90505b60008460020b1315610edf57610edc81600019611a94565b90505b610eee64010000000082611ae1565b15610efa576001610efd565b60005b610f0e9060ff16602083901c611a58565b949350505050565b6000836001600160a01b0316856001600160a01b03161115610f36579293925b8115610f6d57610f666001600160801b038416610f538787611914565b6001600160a01b0316600160601b610a80565b9050610f0e565b610f976001600160801b038416610f848787611914565b6001600160a01b0316600160601b611244565b95945050505050565b6000836001600160a01b0316856001600160a01b03161115610fc0579293925b6000856001600160a01b031611610fd657600080fd5b6fffffffffffffffffffffffffffffffff60601b606084901b166000610ffc8787611914565b6001600160a01b031690508315611040576110396110248383896001600160a01b0316610a80565b886001600160a01b0316808204910615150190565b925061106b565b866001600160a01b031661105e8383896001600160a01b0316611244565b6110689190611a94565b92505b5050949350505050565b6000611082826014611a58565b835110156110ca5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b604482015260640161069d565b500160200151600160601b900490565b60006110e7826003611a58565b8351101561112e5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b604482015260640161069d565b50016003015190565b60608161114581601f611a58565b10156111845760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161069d565b61118e8284611a58565b845110156111d25760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161069d565b6060821580156111f1576040519150600082526020820160405261123b565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561122a578051835260209283019201611212565b5050858452601f01601f1916604052505b50949350505050565b600080806000198587098587029250828110838203039150508060000361127e5783828161127457611274611a7e565b0492505050610ac4565b8381106112a857604051631dcf306360e21b8152600481018290526024810185905260440161069d565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000836001600160a01b0316856001600160a01b03161115611331579293925b846001600160a01b0316866001600160a01b03161161135c576113558585856113c8565b9050610f97565b836001600160a01b0316866001600160a01b0316116113bd5760006113828786866113c8565b9050600061139187898661142a565b9050806001600160801b0316826001600160801b0316106113b257806113b4565b815b92505050610f97565b610aea85858461142a565b6000826001600160a01b0316846001600160a01b031611156113e8579192915b600061140b856001600160a01b0316856001600160a01b0316600160601b611244565b9050610ac0838261141c8888611914565b6001600160a01b0316611244565b6000826001600160a01b0316846001600160a01b0316111561144a579192915b610f0e82600160601b61141c8787611914565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261148457600080fd5b813567ffffffffffffffff8082111561149f5761149f61145d565b604051601f8301601f19908116603f011681019082821181831017156114c7576114c761145d565b816040528381528660208588010111156114e057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561151357600080fd5b823567ffffffffffffffff81111561152a57600080fd5b61153685828601611473565b95602094909401359450505050565b6000606082018583526020606081850152818651808452608086019150828801935060005b8181101561158f5784516001600160a01b03168352938301939183019160010161156a565b50508481036040860152855180825290820192508186019060005b818110156115c957825160020b855293830193918301916001016115aa565b509298975050505050505050565b6001600160a01b03811681146115ec57600080fd5b50565b803562ffffff8116811461160257600080fd5b919050565b8060020b81146115ec57600080fd5b60008060008060008060c0878903121561162f57600080fd5b863561163a816115d7565b9550602087013561164a816115d7565b9450611658604088016115ef565b9350606087013561166881611607565b9250608087013561167881611607565b8092505060a087013590509295509295509295565b600080600080600060a086880312156116a557600080fd5b85356116b0816115d7565b945060208601356116c0816115d7565b93506116ce604087016115ef565b92506060860135915060808601356116e5816115d7565b809150509295509295909350565b60008060006060848603121561170857600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561172d57600080fd5b61173986828701611473565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161178157611781611759565b5060010190565b60006020828403121561179a57600080fd5b8151610ac4816115d7565b805161ffff8116811461160257600080fd5b600080600080600060a086880312156117cf57600080fd5b85516117da816115d7565b60208701519095506117eb81611607565b93506117f9604087016117a5565b9250611807606087016117a5565b9150611815608087016117a5565b90509295509295909350565b600181815b8085111561185c57816000190482111561184257611842611759565b8085161561184f57918102915b93841c9390800290611826565b509250929050565b600082611873575060016109d3565b81611880575060006109d3565b816001811461189657600281146118a0576118bc565b60019150506109d3565b60ff8411156118b1576118b1611759565b50506001821b6109d3565b5060208310610133831016604e8410600b84101617156118df575081810a6109d3565b6118e98383611821565b80600019048211156118fd576118fd611759565b029392505050565b6000610ac460ff841683611864565b6001600160a01b0382811682821603908082111561193457611934611759565b5092915050565b6001600160a01b0381811683821601908082111561193457611934611759565b600060018060a01b038088168352602087151581850152866040850152818616606085015260a06080850152845191508160a085015260005b828110156119b05785810182015185820160c001528101611994565b5050600060c0828501015260c0601f19601f8301168401019150509695505050505050565b600080604083850312156119e857600080fd5b505080516020909101519092909150565b600080600060608486031215611a0e57600080fd5b835192506020840151611a20816115d7565b6040850151909250611a3181611607565b809150509250925092565b6000600160ff1b8201611a5157611a51611759565b5060000390565b808201808211156109d3576109d3611759565b818103818111156109d3576109d3611759565b634e487b7160e01b600052601260045260246000fd5b600082611aa357611aa3611a7e565b500490565b60008160020b627fffff198103611ac157611ac1611759565b60000392915050565b80820281158282048414176109d3576109d3611759565b600082611af057611af0611a7e565b50069056fea26469706673582212202023e08c202621d838f630c1b5d3fcaa6ef24400dd82f180f37691c196c47d2564736f6c63430008140033",
    "deployedSourceMap": "321:6147:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1268:1079;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;370:32;;;;;;;;-1:-1:-1;;;;;2690:32:28;;;2672:51;;2660:2;2645:18;370:32:3;2526:203:28;3755:1095:3;;;;;;:::i;:::-;;:::i;:::-;;;4115:25:28;;;4103:2;4088:18;3755:1095:3;3969:177:28;2353:1363:3;;;;;;:::i;:::-;;:::i;:::-;;;;5025:25:28;;;-1:-1:-1;;;;;5086:32:28;;;5081:2;5066:18;;5059:60;5166:1;5155:21;5135:18;;;5128:49;5013:2;4998:18;2353:1363:3;4827:356:28;4856:1087:3;;;;;;:::i;:::-;;:::i;581:655::-;;;;;;:::i;:::-;;:::i;:::-;;1268:1079;1392:17;1423:38;1475:28;1566:15;:4;:13;:15::i;:::-;1552:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1552:30:3;;1528:54;;1620:15;:4;:13;:15::i;:::-;1608:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1608:28:3;;1592:44;;1647:9;1670:671;1698:15;1715:16;1733:10;1747:39;:4;:37;:39::i;:::-;1697:89;;;;;;1819:18;1855:25;1898:15;1930:66;1942:7;1951:8;1961:3;1967:8;1977:1;1930:11;:66::i;:::-;1801:195;;;;;;2038:17;2011:21;2033:1;2011:24;;;;;;;;:::i;:::-;;;;;;:44;-1:-1:-1;;;;;2011:44:3;;;-1:-1:-1;;;;;2011:44:3;;;;;2088:9;2069:13;2083:1;2069:16;;;;;;;;:::i;:::-;;;;;;:28;;;;;;;;;;;2122:10;2111:21;;2146:3;;;;;:::i;:::-;;;;2168:23;:4;:21;:23::i;:::-;2164:167;;;2218:16;:4;:14;:16::i;:::-;2211:23;;2164:167;;;2285:8;2273:20;;2311:5;;;;;;;;2164:167;1683:658;;;;;;1670:671;;;1518:829;1268:1079;;;;;:::o;3755:1095::-;4022:113;;-1:-1:-1;;;4022:113:3;;-1:-1:-1;;;;;4058:7:3;6344:15:28;;4022:113:3;;;6326:34:28;6396:15;;;6376:18;;;6369:43;6448:15;;6428:18;;;6421:43;6512:8;6500:21;;6480:18;;;6473:49;3973:15:3;;;;4022:13;;:22;;6260:19:28;;4022:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4000:135;;4147:20;4169:10;4189:4;-1:-1:-1;;;;;4189:10:3;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4146:55;;;;;;;4223:9;4216:16;;:4;:16;;;:36;;;;;4243:9;4236:16;;:4;:16;;;4216:36;4212:632;;;4278:150;4325:12;-1:-1:-1;;;;;4317:21:3;4364:15;-1:-1:-1;;;4278:21:3;:150::i;:::-;4268:160;-1:-1:-1;4443:17:3;4463:174;4494:9;4521;4548:12;4578:15;4611:12;4622:1;4268:160;4611:12;:::i;:::-;4463:13;:174::i;:::-;4443:194;;4662:171;4701:38;4729:9;4701:27;:38::i;:::-;4757:12;4787:9;4814:5;4662:21;:171::i;:::-;4652:181;;4254:590;4212:632;3990:860;;;3755:1095;;;;;;;;:::o;2353:1363::-;2544:17;2658:11;;:87;;-1:-1:-1;;;2658:87:3;;-1:-1:-1;;;;;9256:15:28;;;2658:87:3;;;9238:34:28;9308:15;;;9288:18;;;9281:43;9372:8;9360:21;;9340:18;;;9333:49;2544:17:3;;;;;;2658:11;;;;:17;;9173:18:28;;2658:87:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2621:125;;2759:15;2787:8;-1:-1:-1;;;;;2777:18:3;:7;-1:-1:-1;;;;;2777:18:3;;2759:36;;2822:4;-1:-1:-1;;;;;2822:9:3;;2857:4;2880:10;2908:8;2934:17;-1:-1:-1;;;;;2934:22:3;2955:1;2934:22;:259;;3176:17;2934:259;;;3005:10;:126;;3104:27;3130:1;997:49:16;3104:27:3;:::i;:::-;3005:126;;;3046:27;817:10:16;3072:1:3;3046:27;:::i;:::-;3211:25;;;-1:-1:-1;;;;;2690:32:28;;3211:25:3;;;2672:51:28;2645:18;3211:25:3;;;;;;;;;;;;2822:428;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2822:428:3;;;;;;;;-1:-1:-1;;2822:428:3;;;;;;;;;;;;:::i;:::-;;;2806:903;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3324:17:3;;;;;;;;;;3369:46;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3369:46:3;-1:-1:-1;;;3369:46:3;;;3359:57;;;;;:70;;;3355:278;;3449:27;;-1:-1:-1;;;3449:27:3;;11383:2:28;3449:27:3;;;11365:21:28;11422:2;11402:18;;;11395:30;-1:-1:-1;;;11441:18:28;;;11434:47;11498:18;;3449:27:3;;;;;;;;3355:278;3510:47;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3510:47:3;-1:-1:-1;;;3510:47:3;;;3500:58;;;;:71;;;3496:137;;3590:28;;-1:-1:-1;;;3590:28:3;;11729:2:28;3590:28:3;;;11711:21:28;11768:2;11748:18;;;11741:30;-1:-1:-1;;;11787:18:28;;;11780:48;11845:18;;3590:28:3;11527:342:28;3496:137:3;3664:6;3653:45;;;;;;;;;;;;:::i;:::-;3646:52;;;;;;;;;;;;2806:903;;;2611:1105;;2353:1363;;;;;;;;;;:::o;4856:1087::-;5123:113;;-1:-1:-1;;;5123:113:3;;-1:-1:-1;;;;;5159:7:3;6344:15:28;;5123:113:3;;;6326:34:28;6396:15;;;6376:18;;;6369:43;6448:15;;6428:18;;;6421:43;6512:8;6500:21;;6480:18;;;6473:49;5074:15:3;;;;5123:13;;:22;;6260:19:28;;5123:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5101:135;;5248:20;5270:10;5290:4;-1:-1:-1;;;;;5290:10:3;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5247:55;;;;;;;5324:9;5317:16;;:4;:16;;;:36;;;;;5344:9;5337:16;;:4;:16;;;5317:36;5313:624;;;-1:-1:-1;;;;;;;;5467:21:3;;5523:27:8;5571;;;5568:34;;5502:114;5571:27;;;5568:34;;5523:27;;;5502:114;5369:152:3;-1:-1:-1;5536:17:3;5556:174;5587:9;5614;5641:12;5671;5682:1;5369:152;5671:12;:::i;:::-;5701:15;5556:13;:174::i;:::-;5536:194;;5755:171;5794:12;5824:38;5852:9;5824:27;:38::i;:::-;5880:9;5907:5;5755:21;:171::i;581:655::-;727:12;753:4;742:27;;;;;;;;;;;;:::i;:::-;727:42;;779:17;814:1;799:12;:16;:90;;875:13;876:12;875:13;:::i;:::-;799:90;;;838:13;839:12;838:13;:::i;:::-;779:110;;900:25;927:15;980:4;-1:-1:-1;;;;;952:48:3;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;899:103;;;;;;;1052:4;1046:11;1082:9;1077:3;1070:22;1128:17;1121:4;1116:3;1112:14;1105:41;1182:9;1175:4;1170:3;1166:14;1159:33;1217:2;1212:3;1205:15;1327:132:10;1387:7;851:20;748:1;658:2;851:20;:::i;:::-;658:2;1414:4;:11;:23;;;;:::i;:::-;1413:39;;;;:::i;:::-;1406:46;1327:132;-1:-1:-1;;1327:132:10:o;1781:320::-;1885:15;;;1989:17;:4;1885:15;1989:14;:17::i;:::-;1979:27;-1:-1:-1;2022:24:10;:4;658:2;2022:13;:24::i;:::-;2016:30;-1:-1:-1;2067:27:10;851:20;748:1;658:2;851:20;:::i;:::-;2067:4;;:14;:27::i;:::-;2056:38;;1781:320;;;;;:::o;1183:138::-;1251:4;851:20;748:1;658:2;851:20;:::i;:::-;658:2;851:20;748:1;658:2;851:20;:::i;:::-;989:23;;;;:::i;:::-;1152:24;;;;:::i;:::-;1274:4;:11;:40;;1267:47;;1183:138;;;:::o;1626:149::-;1687:12;1718:50;851:20;748:1;658:2;851:20;:::i;:::-;;748:1;658:2;851:20;:::i;:::-;1742:4;:11;:25;;;;:::i;:::-;1718:4;;:50;:10;:50::i;5006:323:8:-;5128:14;5163:33;5178:1;5181;5184:11;5163:14;:33::i;:::-;5154:42;;5238:1;5223:11;5210:25;;;;;:::i;:::-;5220:1;5217;5210:25;:29;5206:117;;;-1:-1:-1;;5263:6:8;:26;5255:35;;;;;;5304:8;;;;:::i;:::-;;;;5206:117;5006:323;;;;;:::o;5984:482:3:-;6183:17;6224:235;6274:12;6300:38;6328:9;6300:27;:38::i;:::-;6352;6380:9;6352:27;:38::i;:::-;6404:15;6433:16;6224:36;:235::i;:::-;6212:247;5984:482;-1:-1:-1;;;;;;5984:482:3:o;1355:2588:16:-;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1450:75;-1:-1:-1;637:9:16;-1:-1:-1;;637:9:16;:::i;:::-;1554:25;;1543:7;:36;;1535:50;;;;-1:-1:-1;;;1535:50:16;;13637:2:28;1535:50:16;;;13619:21:28;13676:1;13656:18;;;13649:29;-1:-1:-1;;;13694:18:28;;;13687:31;13735:18;;1535:50:16;13435:324:28;1535:50:16;1596:13;1612:7;1622:3;1612:13;1629:1;1612:18;:93;;-1:-1:-1;;;1612:93:16;;;1633:34;1612:93;1596:109;;;-1:-1:-1;1729:3:16;1719:13;;:18;1715:83;;1795:3;1748:42;:5;1756:34;1748:42;:::i;:::-;1747:51;;1739:59;;1715:83;1822:3;1812:13;;:18;1808:83;;1888:3;1841:42;:5;1849:34;1841:42;:::i;:::-;1840:51;;1832:59;;1808:83;1915:3;1905:13;;:18;1901:83;;1981:3;1934:42;:5;1942:34;1934:42;:::i;:::-;1933:51;;1925:59;;1901:83;2008:4;1998:14;;:19;1994:84;;2075:3;2028:42;:5;2036:34;2028:42;:::i;:::-;2027:51;;2019:59;;1994:84;2102:4;2092:14;;:19;2088:84;;2169:3;2122:42;:5;2130:34;2122:42;:::i;:::-;2121:51;;2113:59;;2088:84;2196:4;2186:14;;:19;2182:84;;2263:3;2216:42;:5;2224:34;2216:42;:::i;:::-;2215:51;;2207:59;;2182:84;2290:4;2280:14;;:19;2276:84;;2357:3;2310:42;:5;2318:34;2310:42;:::i;:::-;2309:51;;2301:59;;2276:84;2384:5;2374:15;;:20;2370:85;;2452:3;2405:42;:5;2413:34;2405:42;:::i;:::-;2404:51;;2396:59;;2370:85;2479:5;2469:15;;:20;2465:85;;2547:3;2500:42;:5;2508:34;2500:42;:::i;:::-;2499:51;;2491:59;;2465:85;2574:5;2564:15;;:20;2560:85;;2642:3;2595:42;:5;2603:34;2595:42;:::i;:::-;2594:51;;2586:59;;2560:85;2669:5;2659:15;;:20;2655:85;;2737:3;2690:42;:5;2698:34;2690:42;:::i;:::-;2689:51;;2681:59;;2655:85;2764:6;2754:16;;:21;2750:86;;2833:3;2786:42;:5;2794:34;2786:42;:::i;:::-;2785:51;;2777:59;;2750:86;2860:6;2850:16;;:21;2846:86;;2929:3;2882:42;:5;2890:34;2882:42;:::i;:::-;2881:51;;2873:59;;2846:86;2956:6;2946:16;;:21;2942:86;;3025:3;2978:42;:5;2986:34;2978:42;:::i;:::-;2977:51;;2969:59;;2942:86;3052:6;3042:16;;:21;3038:86;;3121:3;3074:42;:5;3082:34;3074:42;:::i;:::-;3073:51;;3065:59;;3038:86;3148:7;3138:17;;:22;3134:86;;3217:3;3171:41;:5;3179:33;3171:41;:::i;:::-;3170:50;;3162:58;;3134:86;3244:7;3234:17;;:22;3230:85;;3312:3;3267:40;:5;3275:32;3267:40;:::i;:::-;3266:49;;3258:57;;3230:85;3339:7;3329:17;;:22;3325:83;;3405:3;3362:38;:5;3370:30;3362:38;:::i;:::-;3361:47;;3353:55;;3325:83;3432:7;3422:17;;:22;3418:78;;3493:3;3455:33;:5;3463:25;3455:33;:::i;:::-;3454:42;;3446:50;;3418:78;3518:1;3511:4;:8;;;3507:47;;;3529:25;3549:5;-1:-1:-1;;3529:25:16;:::i;:::-;3521:33;;3507:47;3904:17;3913:7;3904:5;:17;:::i;:::-;:22;:30;;3933:1;3904:30;;;3929:1;3904:30;3887:48;;;;3897:2;3888:11;;;3887:48;:::i;:::-;3864:72;1355:2588;-1:-1:-1;;;;1355:2588:16:o;1094:687:8:-;1260:15;1307:13;-1:-1:-1;;;;;1291:29:8;:13;-1:-1:-1;;;;;1291:29:8;;1287:110;;;1368:13;;1383;1287:110;1412:7;1408:367;;;1445:140;-1:-1:-1;;;;;1445:140:8;;1507:29;1523:13;1507;:29;:::i;:::-;-1:-1:-1;;;;;1445:140:8;-1:-1:-1;;;1445:16:8;:140::i;:::-;1435:150;;1408:367;;;1626:138;-1:-1:-1;;;;;1626:138:8;;1686:29;1702:13;1686;:29;:::i;:::-;-1:-1:-1;;;;;1626:138:8;-1:-1:-1;;;1626:14:8;:138::i;:::-;1616:148;1094:687;-1:-1:-1;;;;;1094:687:8:o;213:815::-;379:15;426:13;-1:-1:-1;;;;;410:29:8;:13;-1:-1:-1;;;;;410:29:8;;406:110;;;487:13;;502;406:110;551:1;535:13;-1:-1:-1;;;;;535:17:8;;527:26;;;;;;-1:-1:-1;;;135:2:6;585:45:8;;;;564:18;661:29;677:13;661;:29;:::i;:::-;-1:-1:-1;;;;;640:50:8;;;705:7;701:321;;;738:131;769:55;786:10;798;810:13;-1:-1:-1;;;;;769:55:8;:16;:55::i;:::-;842:13;-1:-1:-1;;;;;738:131:8;5523:27;;;5571;;5568:34;;5502:114;;5335:297;738:131;728:141;;701:321;;;998:13;-1:-1:-1;;;;;926:85:8;:53;941:10;953;965:13;-1:-1:-1;;;;;926:53:8;:14;:53::i;:::-;:85;;;;:::i;:::-;900:111;;701:321;396:632;;213:815;;;;;;:::o;12851:444:27:-;12957:7;13007:11;:6;13016:2;13007:11;:::i;:::-;12990:6;:13;:28;;12982:62;;;;-1:-1:-1;;;12982:62:27;;14256:2:28;12982:62:27;;;14238:21:28;14295:2;14275:18;;;14268:30;-1:-1:-1;;;14314:18:28;;;14307:51;14375:18;;12982:62:27;14054:345:28;12982:62:27;-1:-1:-1;13154:30:27;13170:4;13154:30;13148:37;-1:-1:-1;;;13126:120:27;;;12851:444::o;151:333:10:-;253:6;300:10;:6;309:1;300:10;:::i;:::-;283:6;:13;:27;;275:60;;;;-1:-1:-1;;;275:60:10;;14606:2:28;275:60:10;;;14588:21:28;14645:2;14625:18;;;14618:30;-1:-1:-1;;;14664:18:28;;;14657:50;14724:18;;275:60:10;14404:344:28;275:60:10;-1:-1:-1;412:29:10;428:3;412:29;406:36;;151:333::o;9785:3058:27:-;9911:12;9960:7;9944:12;9960:7;9954:2;9944:12;:::i;:::-;:23;;9936:50;;;;-1:-1:-1;;;9936:50:27;;14955:2:28;9936:50:27;;;14937:21:28;14994:2;14974:18;;;14967:30;-1:-1:-1;;;15013:18:28;;;15006:44;15067:18;;9936:50:27;14753:338:28;9936:50:27;10022:16;10031:7;10022:6;:16;:::i;:::-;10005:6;:13;:33;;9997:63;;;;-1:-1:-1;;;9997:63:27;;15298:2:28;9997:63:27;;;15280:21:28;15337:2;15317:18;;;15310:30;-1:-1:-1;;;15356:18:28;;;15349:47;15413:18;;9997:63:27;15096:341:28;9997:63:27;10073:22;10139:15;;10168:2224;;;;12536:4;12530:11;12517:24;;12725:1;12714:9;12707:20;12775:4;12764:9;12760:20;12754:4;12747:34;10132:2664;;10168:2224;10353:4;10347:11;10334:24;;11022:2;11013:7;11009:16;11453:9;11446:17;11440:4;11436:28;11403:9;11392;11388:25;11362:121;11520:7;11516:2;11512:16;11913:6;11848:9;11841:17;11835:4;11831:28;11790:9;11782:6;11778:22;11744:142;11714:228;11548:592;11969:3;11965:2;11962:11;11548:592;;;12111:9;;12100:21;;12011:4;12003:13;;;;12044;11548:592;;;-1:-1:-1;;12160:26:27;;;12372:2;12355:11;-1:-1:-1;;12351:25:27;12345:4;12338:39;-1:-1:-1;10132:2664:27;-1:-1:-1;12826:9:27;9785:3058;-1:-1:-1;;;;9785:3058:27:o;15472:4067:26:-;15588:14;;;-1:-1:-1;;16084:1:26;16081;16074:20;16124:1;16121;16117:9;16108:18;;16176:5;16172:2;16169:13;16161:5;16157:2;16153:14;16149:34;16140:43;;;16270:5;16279:1;16270:10;16266:143;;16343:11;16335:5;:19;;;;;:::i;:::-;;16326:28;;16384:13;;;;16266:143;16519:11;16510:5;:20;16506:103;;16554:43;;-1:-1:-1;;;16554:43:26;;;;;15616:25:28;;;15657:18;;;15650:34;;;15589:18;;16554:43:26;15442:248:28;16506:103:26;16851:17;16977:11;16974:1;16971;16964:25;18415:1;17534;17519:12;;:16;;17504:32;;17645:25;;;;18396:1;:15;;18395:21;;18652;;;18648:25;;18637:36;18722:21;;;18718:25;;18707:36;18793:21;;;18789:25;;18778:36;18864:21;;;18860:25;;18849:36;18935:21;;;18931:25;;18920:36;19007:21;;;19003:25;;;18992:36;;;17486:15;17917;;;17913:29;;;17909:37;;;17086:20;;;17075:32;;;18039:15;;;;17130:21;;17752:19;;;;18030:24;;;;19477:15;;;-1:-1:-1;;;;15472:4067:26:o;1337:1162:7:-;1540:17;1589:13;-1:-1:-1;;;;;1573:29:7;:13;-1:-1:-1;;;;;1573:29:7;;1569:110;;;1650:13;;1665;1569:110;1710:13;-1:-1:-1;;;;;1694:29:7;:12;-1:-1:-1;;;;;1694:29:7;;1690:803;;1751:123;1791:13;1822;1853:7;1751:22;:123::i;:::-;1739:135;;1690:803;;;1911:13;-1:-1:-1;;;;;1895:29:7;:12;-1:-1:-1;;;;;1895:29:7;;1891:602;;1940:18;1961:122;2001:12;2031:13;2062:7;1961:22;:122::i;:::-;1940:143;;2097:18;2118:122;2158:13;2189:12;2219:7;2118:22;:122::i;:::-;2097:143;;2280:10;-1:-1:-1;;;;;2267:23:7;:10;-1:-1:-1;;;;;2267:23:7;;:49;;2306:10;2267:49;;;2293:10;2267:49;2255:61;;1926:401;;1891:602;;;2359:123;2399:13;2430;2461:7;2359:22;:123::i;239:557::-;387:17;436:13;-1:-1:-1;;;;;420:29:7;:13;-1:-1:-1;;;;;420:29:7;;416:110;;;497:13;;512;416:110;537:20;560:108;588:13;-1:-1:-1;;;;;560:108:7;615:13;-1:-1:-1;;;;;560:108:7;-1:-1:-1;;;560:14:7;:108::i;:::-;537:131;-1:-1:-1;711:68:7;726:7;537:131;749:29;765:13;749;:29;:::i;:::-;-1:-1:-1;;;;;711:68:7;:14;:68::i;849:482::-;997:17;1046:13;-1:-1:-1;;;;;1030:29:7;:13;-1:-1:-1;;;;;1030:29:7;;1026:110;;;1107:13;;1122;1026:110;1180:134;1212:7;-1:-1:-1;;;1271:29:7;1287:13;1271;:29;:::i;14:127:28:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:718;188:5;241:3;234:4;226:6;222:17;218:27;208:55;;259:1;256;249:12;208:55;295:6;282:20;321:18;358:2;354;351:10;348:36;;;364:18;;:::i;:::-;439:2;433:9;407:2;493:13;;-1:-1:-1;;489:22:28;;;513:2;485:31;481:40;469:53;;;537:18;;;557:22;;;534:46;531:72;;;583:18;;:::i;:::-;623:10;619:2;612:22;658:2;650:6;643:18;704:3;697:4;692:2;684:6;680:15;676:26;673:35;670:55;;;721:1;718;711:12;670:55;785:2;778:4;770:6;766:17;759:4;751:6;747:17;734:54;832:1;825:4;820:2;812:6;808:15;804:26;797:37;852:6;843:15;;;;;;146:718;;;;:::o;869:388::-;946:6;954;1007:2;995:9;986:7;982:23;978:32;975:52;;;1023:1;1020;1013:12;975:52;1063:9;1050:23;1096:18;1088:6;1085:30;1082:50;;;1128:1;1125;1118:12;1082:50;1151:49;1192:7;1183:6;1172:9;1168:22;1151:49;:::i;:::-;1141:59;1247:2;1232:18;;;;1219:32;;-1:-1:-1;;;;869:388:28:o;1262:1259::-;1506:4;1554:2;1543:9;1539:18;1584:6;1573:9;1566:25;1610:2;1648;1643;1632:9;1628:18;1621:30;1671:6;1706;1700:13;1737:6;1729;1722:22;1775:3;1764:9;1760:19;1753:26;;1814:2;1806:6;1802:15;1788:29;;1835:1;1845:195;1859:6;1856:1;1853:13;1845:195;;;1924:13;;-1:-1:-1;;;;;1920:39:28;1908:52;;2015:15;;;;1980:12;;;;1956:1;1874:9;1845:195;;;-1:-1:-1;;2076:19:28;;;2071:2;2056:18;;2049:47;2146:13;;2168:21;;;2207:12;;;;-1:-1:-1;2244:15:28;;;;2279:1;2289:204;2305:8;2300:3;2297:17;2289:204;;;2388:15;;2385:1;2374:30;2360:45;;2427:14;;;;2466:17;;;;2333:1;2324:11;2289:204;;;-1:-1:-1;2510:5:28;;1262:1259;-1:-1:-1;;;;;;;;1262:1259:28:o;2734:131::-;-1:-1:-1;;;;;2809:31:28;;2799:42;;2789:70;;2855:1;2852;2845:12;2789:70;2734:131;:::o;2870:161::-;2937:20;;2997:8;2986:20;;2976:31;;2966:59;;3021:1;3018;3011:12;2966:59;2870:161;;;:::o;3036:118::-;3123:5;3120:1;3109:20;3102:5;3099:31;3089:59;;3144:1;3141;3134:12;3159:805;3258:6;3266;3274;3282;3290;3298;3351:3;3339:9;3330:7;3326:23;3322:33;3319:53;;;3368:1;3365;3358:12;3319:53;3407:9;3394:23;3426:31;3451:5;3426:31;:::i;:::-;3476:5;-1:-1:-1;3533:2:28;3518:18;;3505:32;3546:33;3505:32;3546:33;:::i;:::-;3598:7;-1:-1:-1;3624:37:28;3657:2;3642:18;;3624:37;:::i;:::-;3614:47;;3713:2;3702:9;3698:18;3685:32;3726:31;3749:7;3726:31;:::i;:::-;3776:7;-1:-1:-1;3835:3:28;3820:19;;3807:33;3849:31;3807:33;3849:31;:::i;:::-;3899:7;3889:17;;;3953:3;3942:9;3938:19;3925:33;3915:43;;3159:805;;;;;;;;:::o;4151:671::-;4245:6;4253;4261;4269;4277;4330:3;4318:9;4309:7;4305:23;4301:33;4298:53;;;4347:1;4344;4337:12;4298:53;4386:9;4373:23;4405:31;4430:5;4405:31;:::i;:::-;4455:5;-1:-1:-1;4512:2:28;4497:18;;4484:32;4525:33;4484:32;4525:33;:::i;:::-;4577:7;-1:-1:-1;4603:37:28;4636:2;4621:18;;4603:37;:::i;:::-;4593:47;;4687:2;4676:9;4672:18;4659:32;4649:42;;4743:3;4732:9;4728:19;4715:33;4757;4782:7;4757:33;:::i;:::-;4809:7;4799:17;;;4151:671;;;;;;;;:::o;5188:454::-;5272:6;5280;5288;5341:2;5329:9;5320:7;5316:23;5312:32;5309:52;;;5357:1;5354;5347:12;5309:52;5393:9;5380:23;5370:33;;5450:2;5439:9;5435:18;5422:32;5412:42;;5505:2;5494:9;5490:18;5477:32;5532:18;5524:6;5521:30;5518:50;;;5564:1;5561;5554:12;5518:50;5587:49;5628:7;5619:6;5608:9;5604:22;5587:49;:::i;:::-;5577:59;;;5188:454;;;;;:::o;5647:127::-;5708:10;5703:3;5699:20;5696:1;5689:31;5739:4;5736:1;5729:15;5763:4;5760:1;5753:15;5779:127;5840:10;5835:3;5831:20;5828:1;5821:31;5871:4;5868:1;5861:15;5895:4;5892:1;5885:15;5911:135;5950:3;5971:17;;;5968:43;;5991:18;;:::i;:::-;-1:-1:-1;6038:1:28;6027:13;;5911:135::o;6533:274::-;6626:6;6679:2;6667:9;6658:7;6654:23;6650:32;6647:52;;;6695:1;6692;6685:12;6647:52;6727:9;6721:16;6746:31;6771:5;6746:31;:::i;6812:163::-;6890:13;;6943:6;6932:18;;6922:29;;6912:57;;6965:1;6962;6955:12;6980:632;7081:6;7089;7097;7105;7113;7166:3;7154:9;7145:7;7141:23;7137:33;7134:53;;;7183:1;7180;7173:12;7134:53;7215:9;7209:16;7234:31;7259:5;7234:31;:::i;:::-;7334:2;7319:18;;7313:25;7284:5;;-1:-1:-1;7347:31:28;7313:25;7347:31;:::i;:::-;7397:7;-1:-1:-1;7423:48:28;7467:2;7452:18;;7423:48;:::i;:::-;7413:58;;7490:48;7534:2;7523:9;7519:18;7490:48;:::i;:::-;7480:58;;7557:49;7601:3;7590:9;7586:19;7557:49;:::i;:::-;7547:59;;6980:632;;;;;;;;:::o;7617:422::-;7706:1;7749:5;7706:1;7763:270;7784:7;7774:8;7771:21;7763:270;;;7843:4;7839:1;7835:6;7831:17;7825:4;7822:27;7819:53;;;7852:18;;:::i;:::-;7902:7;7892:8;7888:22;7885:55;;;7922:16;;;;7885:55;8001:22;;;;7961:15;;;;7763:270;;;7767:3;7617:422;;;;;:::o;8044:806::-;8093:5;8123:8;8113:80;;-1:-1:-1;8164:1:28;8178:5;;8113:80;8212:4;8202:76;;-1:-1:-1;8249:1:28;8263:5;;8202:76;8294:4;8312:1;8307:59;;;;8380:1;8375:130;;;;8287:218;;8307:59;8337:1;8328:10;;8351:5;;;8375:130;8412:3;8402:8;8399:17;8396:43;;;8419:18;;:::i;:::-;-1:-1:-1;;8475:1:28;8461:16;;8490:5;;8287:218;;8589:2;8579:8;8576:16;8570:3;8564:4;8561:13;8557:36;8551:2;8541:8;8538:16;8533:2;8527:4;8524:12;8520:35;8517:77;8514:159;;;-1:-1:-1;8626:19:28;;;8658:5;;8514:159;8705:34;8730:8;8724:4;8705:34;:::i;:::-;8775:6;8771:1;8767:6;8763:19;8754:7;8751:32;8748:58;;;8786:18;;:::i;:::-;8824:20;;8044:806;-1:-1:-1;;;8044:806:28:o;8855:140::-;8913:5;8942:47;8983:4;8973:8;8969:19;8963:4;8942:47;:::i;9649:185::-;-1:-1:-1;;;;;9770:10:28;;;9758;;;9754:27;;9793:12;;;9790:38;;;9808:18;;:::i;:::-;9790:38;9649:185;;;;:::o;9839:182::-;-1:-1:-1;;;;;9946:10:28;;;9958;;;9942:27;;9981:11;;;9978:37;;;9995:18;;:::i;10026:902::-;10242:4;10288:1;10284;10279:3;10275:11;10271:19;10329:2;10321:6;10317:15;10306:9;10299:34;10352:2;10404:6;10397:14;10390:22;10385:2;10374:9;10370:18;10363:50;10449:6;10444:2;10433:9;10429:18;10422:34;10504:2;10496:6;10492:15;10487:2;10476:9;10472:18;10465:43;10545:3;10539;10528:9;10524:19;10517:32;10578:6;10572:13;10558:27;;10622:6;10616:3;10605:9;10601:19;10594:35;10647:1;10657:141;10671:6;10668:1;10665:13;10657:141;;;10767:14;;;10763:23;;10757:30;10732:17;;;10751:3;10728:27;10721:67;10686:10;;10657:141;;;10661:3;;10848:1;10842:3;10833:6;10822:9;10818:22;10814:32;10807:43;10918:3;10911:2;10907:7;10902:2;10894:6;10890:15;10886:29;10875:9;10871:45;10867:55;10859:63;;;10026:902;;;;;;;;:::o;10933:243::-;11010:6;11018;11071:2;11059:9;11050:7;11046:23;11042:32;11039:52;;;11087:1;11084;11077:12;11039:52;-1:-1:-1;;11110:16:28;;11166:2;11151:18;;;11145:25;11110:16;;11145:25;;-1:-1:-1;10933:243:28:o;11874:442::-;11960:6;11968;11976;12029:2;12017:9;12008:7;12004:23;12000:32;11997:52;;;12045:1;12042;12035:12;11997:52;12074:9;12068:16;12058:26;;12127:2;12116:9;12112:18;12106:25;12140:31;12165:5;12140:31;:::i;:::-;12240:2;12225:18;;12219:25;12190:5;;-1:-1:-1;12253:31:28;12219:25;12253:31;:::i;:::-;12303:7;12293:17;;;11874:442;;;;;:::o;12585:136::-;12620:3;-1:-1:-1;;;12641:22:28;;12638:48;;12666:18;;:::i;:::-;-1:-1:-1;12706:1:28;12702:13;;12585:136::o;12726:125::-;12791:9;;;12812:10;;;12809:36;;;12825:18;;:::i;12856:128::-;12923:9;;;12944:11;;;12941:37;;;12958:18;;:::i;12989:127::-;13050:10;13045:3;13041:20;13038:1;13031:31;13081:4;13078:1;13071:15;13105:4;13102:1;13095:15;13121:120;13161:1;13187;13177:35;;13192:18;;:::i;:::-;-1:-1:-1;13226:9:28;;13121:120::o;13246:184::-;13280:3;13327:5;13324:1;13313:20;13361:7;13357:12;13348:7;13345:25;13342:51;;13373:18;;:::i;:::-;13413:1;13409:15;;13246:184;-1:-1:-1;;13246:184:28:o;13764:168::-;13837:9;;;13868;;13885:15;;;13879:22;;13865:37;13855:71;;13906:18;;:::i;13937:112::-;13969:1;13995;13985:35;;14000:18;;:::i;:::-;-1:-1:-1;14034:9:28;;13937:112::o",
    "language": "Solidity",
    "natspec": {
        "errors": {
            "PRBMath__MulDivOverflow(uint256,uint256)": [
                {
                    "notice": "Emitted when the result overflows uint256."
                }
            ]
        },
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "offset": [
        321,
        6468
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x260A5B03 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0xCBE76C3C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xE95DBB69 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xF898A068 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x89 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x89 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 SIGNEXTEND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x89 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x161 DUP6 PUSH2 0x9AD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x179 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x1AE DUP6 PUSH2 0x9AD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C6 JUMPI PUSH2 0x1C6 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x203 DUP10 PUSH2 0x9D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x21C DUP7 DUP7 DUP7 DUP15 PUSH1 0x0 PUSH2 0x470 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP2 DUP10 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x235 JUMPI PUSH2 0x235 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP1 DUP9 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x268 JUMPI PUSH2 0x268 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x2 SIGNEXTEND SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP DUP3 SWAP11 POP DUP7 DUP1 PUSH2 0x28A SWAP1 PUSH2 0x176F JUMP JUMPDEST SWAP8 POP POP PUSH2 0x296 DUP13 PUSH2 0xA15 JUMP JUMPDEST ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2A4 DUP13 PUSH2 0xA4F JUMP JUMPDEST SWAP12 POP PUSH2 0x2B9 JUMP JUMPDEST DUP11 SWAP10 POP POP POP POP POP POP POP PUSH2 0x2C4 JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x1F5 JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C9956ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP9 AND PUSH1 0x24 DUP4 ADD MSTORE DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP6 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xE4CAB768 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x364 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 POP DUP6 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x410 JUMPI POP DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x463 JUMPI PUSH2 0x42D DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x448 DUP9 DUP9 DUP6 DUP10 PUSH2 0x443 PUSH1 0x2 DUP12 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST SWAP1 POP PUSH2 0x45F PUSH2 0x456 DUP10 PUSH2 0xAF4 JUMP JUMPDEST DUP5 DUP4 PUSH1 0x0 PUSH2 0xF16 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x175C1B23 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP8 AND PUSH1 0x44 DUP4 ADD MSTORE DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0xBAE0D918 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD5A12D8 ADDRESS DUP4 DUP11 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ PUSH2 0x53C JUMPI DUP11 PUSH2 0x575 JUMP JUMPDEST DUP6 PUSH2 0x565 JUMPI PUSH2 0x560 PUSH1 0x1 PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH2 0x575 PUSH5 0x1000276A3 PUSH1 0x1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x5F2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x5EF SWAP2 DUP2 ADD SWAP1 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x73A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x625 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP2 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2D4EEEB3 PUSH1 0xE2 SHL OR DUP2 MSTORE SWAP2 MLOAD SWAP1 SWAP2 KECCAK256 DUP2 SWAP1 SUB PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59141C9A58D9531A5B5A5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4323A555 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP1 MLOAD SWAP1 KECCAK256 DUP2 SWAP1 SUB PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F74456E6F7567684C6971756964697479 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69D JUMP JUMPDEST DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0x73F JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C9956ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP9 AND PUSH1 0x24 DUP4 ADD MSTORE DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP6 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xE4CAB768 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x849 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 POP DUP6 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x88E JUMPI POP DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x463 JUMPI PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO ADD DUP1 DUP7 MOD ISZERO ISZERO SWAP1 DUP7 DIV ADD SWAP4 POP PUSH1 0x0 PUSH2 0x8D9 DUP9 DUP9 DUP6 PUSH2 0x8D3 PUSH1 0x2 DUP11 PUSH2 0x1905 JUMP JUMPDEST DUP11 PUSH2 0xACB JUMP JUMPDEST SWAP1 POP PUSH2 0x45F DUP4 PUSH2 0x8E8 DUP10 PUSH2 0xAF4 JUMP JUMPDEST DUP4 PUSH1 0x0 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP6 SGT PUSH2 0x91F JUMPI PUSH2 0x91A DUP6 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH2 0x928 DUP5 PUSH2 0x1A3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BB PUSH1 0x3 PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x14 DUP4 MLOAD PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x9E7 DUP5 DUP3 PUSH2 0x1075 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F4 DUP5 PUSH1 0x14 PUSH2 0x10DA JUMP JUMPDEST SWAP1 POP PUSH2 0xA0C PUSH2 0xA05 PUSH1 0x3 PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1075 JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA23 PUSH1 0x3 PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x14 PUSH2 0xA30 PUSH1 0x3 DUP3 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xA44 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST DUP3 MLOAD LT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9D3 PUSH2 0xA60 PUSH1 0x3 PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xA6C PUSH1 0x3 PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST DUP5 MLOAD PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST DUP5 SWAP2 SWAP1 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8D DUP5 DUP5 DUP5 PUSH2 0x1244 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH2 0xA9F JUMPI PUSH2 0xA9F PUSH2 0x1A7E JUMP JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 NOT DUP2 LT PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0xAC0 DUP2 PUSH2 0x176F JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEA DUP5 PUSH2 0xADA DUP9 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0xAE3 DUP9 PUSH2 0xAF4 JUMP JUMPDEST DUP7 DUP7 PUSH2 0x1311 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0xB0B JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0xB18 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0xB18 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST SWAP1 POP PUSH2 0xB27 PUSH3 0xD89E7 NOT PUSH2 0x1AA8 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 AND PUSH1 0x0 SUB PUSH2 0xB76 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xB88 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x80 PUSH2 0xBC2 DUP3 PUSH16 0xFFF97272373D413259A46990580E213A PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x80 PUSH2 0xBEC DUP3 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0xC1B JUMPI PUSH1 0x80 PUSH2 0xC16 DUP3 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0xC45 JUMPI PUSH1 0x80 PUSH2 0xC40 DUP3 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0xC6F JUMPI PUSH1 0x80 PUSH2 0xC6A DUP3 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0xC99 JUMPI PUSH1 0x80 PUSH2 0xC94 DUP3 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x80 PUSH2 0xCBE DUP3 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0xCEE JUMPI PUSH1 0x80 PUSH2 0xCE9 DUP3 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0xD19 JUMPI PUSH1 0x80 PUSH2 0xD14 DUP3 PUSH16 0xF987A7253AC413176F2B074CF7815E54 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0xD44 JUMPI PUSH1 0x80 PUSH2 0xD3F DUP3 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0xD6F JUMPI PUSH1 0x80 PUSH2 0xD6A DUP3 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0xD9A JUMPI PUSH1 0x80 PUSH2 0xD95 DUP3 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x80 PUSH2 0xDC0 DUP3 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x80 PUSH2 0xDEB DUP3 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0xE1B JUMPI PUSH1 0x80 PUSH2 0xE16 DUP3 PUSH16 0x31BE135F97D08FD981231505542FCFA6 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0xE47 JUMPI PUSH1 0x80 PUSH2 0xE42 DUP3 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0xE72 JUMPI PUSH1 0x80 PUSH2 0xE6D DUP3 PUSH15 0x5D6AF8DEDB81196699C329225EE604 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0xE9C JUMPI PUSH1 0x80 PUSH2 0xE97 DUP3 PUSH14 0x2216E584F5FA1EA926041BEDFE98 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x80 PUSH2 0xEBF DUP3 PUSH12 0x48A170391F7DC42444E8FA2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xEDF JUMPI PUSH2 0xEDC DUP2 PUSH1 0x0 NOT PUSH2 0x1A94 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xEEE PUSH5 0x100000000 DUP3 PUSH2 0x1AE1 JUMP JUMPDEST ISZERO PUSH2 0xEFA JUMPI PUSH1 0x1 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0xF0E SWAP1 PUSH1 0xFF AND PUSH1 0x20 DUP4 SWAP1 SHR PUSH2 0x1A58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0xF36 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF66 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0xF53 DUP8 DUP8 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0xA80 JUMP JUMPDEST SWAP1 POP PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xF97 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0xF84 DUP8 DUP8 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x1244 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0xFC0 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0xFD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x60 SHL PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x0 PUSH2 0xFFC DUP8 DUP8 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP4 ISZERO PUSH2 0x1040 JUMPI PUSH2 0x1039 PUSH2 0x1024 DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA80 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP3 DIV SWAP2 MOD ISZERO ISZERO ADD SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0x106B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x105E DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x1068 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1082 DUP3 PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x746F416464726573735F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69D JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E7 DUP3 PUSH1 0x3 PUSH2 0x1A58 JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x746F55696E7432345F6F75744F66426F756E6473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69D JUMP JUMPDEST POP ADD PUSH1 0x3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1145 DUP2 PUSH1 0x1F PUSH2 0x1A58 JUMP JUMPDEST LT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69D JUMP JUMPDEST PUSH2 0x118E DUP3 DUP5 PUSH2 0x1A58 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69D JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x11F1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x122A JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1212 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x127E JUMPI DUP4 DUP3 DUP2 PUSH2 0x1274 JUMPI PUSH2 0x1274 PUSH2 0x1A7E JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xAC4 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DCF3063 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x69D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x2 PUSH1 0x1 DUP8 NOT DUP2 ADD DUP9 AND SWAP8 DUP9 SWAP1 DIV PUSH1 0x3 DUP2 MUL DUP4 XOR DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL DUP1 DUP3 MUL DUP5 SUB MUL SWAP1 DUP2 MUL SWAP1 SWAP3 SUB SWAP1 SWAP2 MUL PUSH1 0x0 DUP9 SWAP1 SUB DUP9 SWAP1 DIV SWAP1 SWAP2 ADD DUP6 DUP4 GT SWAP1 SWAP5 SUB SWAP4 SWAP1 SWAP4 MUL SWAP4 SUB SWAP5 SWAP1 SWAP5 DIV SWAP2 SWAP1 SWAP2 OR MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1331 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x135C JUMPI PUSH2 0x1355 DUP6 DUP6 DUP6 PUSH2 0x13C8 JUMP JUMPDEST SWAP1 POP PUSH2 0xF97 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x13BD JUMPI PUSH1 0x0 PUSH2 0x1382 DUP8 DUP7 DUP7 PUSH2 0x13C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1391 DUP8 DUP10 DUP7 PUSH2 0x142A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x13B2 JUMPI DUP1 PUSH2 0x13B4 JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0xF97 JUMP JUMPDEST PUSH2 0xAEA DUP6 DUP6 DUP5 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x13E8 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH1 0x0 PUSH2 0x140B DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x1244 JUMP JUMPDEST SWAP1 POP PUSH2 0xAC0 DUP4 DUP3 PUSH2 0x141C DUP9 DUP9 PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x144A JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0xF0E DUP3 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x141C DUP8 DUP8 PUSH2 0x1914 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x149F JUMPI PUSH2 0x149F PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x145D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1536 DUP6 DUP3 DUP7 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 PUSH1 0x60 DUP2 DUP6 ADD MSTORE DUP2 DUP7 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP9 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x158F JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x156A JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP7 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15C9 JUMPI DUP3 MLOAD PUSH1 0x2 SIGNEXTEND DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x15AA JUMP JUMPDEST POP SWAP3 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x163A DUP2 PUSH2 0x15D7 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x164A DUP2 PUSH2 0x15D7 JUMP JUMPDEST SWAP5 POP PUSH2 0x1658 PUSH1 0x40 DUP9 ADD PUSH2 0x15EF JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1668 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1678 DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x16B0 DUP2 PUSH2 0x15D7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x16C0 DUP2 PUSH2 0x15D7 JUMP JUMPDEST SWAP4 POP PUSH2 0x16CE PUSH1 0x40 DUP8 ADD PUSH2 0x15EF JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x16E5 DUP2 PUSH2 0x15D7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x172D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1739 DUP7 DUP3 DUP8 ADD PUSH2 0x1473 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1781 JUMPI PUSH2 0x1781 PUSH2 0x1759 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAC4 DUP2 PUSH2 0x15D7 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x17DA DUP2 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH2 0x17EB DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP4 POP PUSH2 0x17F9 PUSH1 0x40 DUP8 ADD PUSH2 0x17A5 JUMP JUMPDEST SWAP3 POP PUSH2 0x1807 PUSH1 0x60 DUP8 ADD PUSH2 0x17A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1815 PUSH1 0x80 DUP8 ADD PUSH2 0x17A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x185C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1842 PUSH2 0x1759 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x184F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1826 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1873 JUMPI POP PUSH1 0x1 PUSH2 0x9D3 JUMP JUMPDEST DUP2 PUSH2 0x1880 JUMPI POP PUSH1 0x0 PUSH2 0x9D3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1896 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x18A0 JUMPI PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x18B1 JUMPI PUSH2 0x18B1 PUSH2 0x1759 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x9D3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x18DF JUMPI POP DUP2 DUP2 EXP PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x18E9 DUP4 DUP4 PUSH2 0x1821 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18FD PUSH2 0x1759 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC4 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1864 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1934 PUSH2 0x1759 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1934 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE PUSH1 0x20 DUP8 ISZERO ISZERO DUP2 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP7 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP6 ADD MSTORE DUP5 MLOAD SWAP2 POP DUP2 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19B0 JUMPI DUP6 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP3 ADD PUSH1 0xC0 ADD MSTORE DUP2 ADD PUSH2 0x1994 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0xC0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x1A20 DUP2 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1A31 DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x1A51 JUMPI PUSH2 0x1A51 PUSH2 0x1759 JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9D3 JUMPI PUSH2 0x9D3 PUSH2 0x1759 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9D3 JUMPI PUSH2 0x9D3 PUSH2 0x1759 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AA3 JUMPI PUSH2 0x1AA3 PUSH2 0x1A7E JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH3 0x7FFFFF NOT DUP2 SUB PUSH2 0x1AC1 JUMPI PUSH2 0x1AC1 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9D3 JUMPI PUSH2 0x9D3 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AF0 JUMPI PUSH2 0x1AF0 PUSH2 0x1A7E JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x23 0xE0 DUP13 KECCAK256 0x26 0x21 0xD8 CODESIZE 0xF6 ADDRESS 0xC1 0xB5 0xD3 0xFC 0xAA PUSH15 0xF24400DD82F180F37691C196C47D25 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
    "pcMap": {
        "0": {
            "offset": [
                321,
                6468
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x80"
        },
        "2": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "4": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "5": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "CALLVALUE",
            "path": "3"
        },
        "6": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "7": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "8": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x10"
        },
        "11": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "12": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "14": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "15": {
            "dev": "Cannot send ether to nonpayable function",
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "REVERT",
            "path": "3"
        },
        "16": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "17": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "POP",
            "path": "3"
        },
        "18": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "20": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "21": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "LT",
            "path": "3"
        },
        "22": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x62"
        },
        "25": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "26": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "28": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "CALLDATALOAD",
            "path": "3"
        },
        "29": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xE0"
        },
        "31": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "SHR",
            "path": "3"
        },
        "32": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "33": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0x260A5B03"
        },
        "38": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "EQ",
            "path": "3"
        },
        "39": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x67"
        },
        "42": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "43": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "44": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xC45A0155"
        },
        "49": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "EQ",
            "path": "3"
        },
        "50": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x92"
        },
        "53": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "54": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "55": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xCBE76C3C"
        },
        "60": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "EQ",
            "path": "3"
        },
        "61": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xD1"
        },
        "64": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "65": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "66": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xE95DBB69"
        },
        "71": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "EQ",
            "path": "3"
        },
        "72": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xF2"
        },
        "75": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "76": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "77": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xF898A068"
        },
        "82": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "EQ",
            "path": "3"
        },
        "83": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x12B"
        },
        "86": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "87": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "88": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xFA461E33"
        },
        "93": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "EQ",
            "path": "3"
        },
        "94": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x13E"
        },
        "97": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "98": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "99": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "101": {
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "DUP1",
            "path": "3"
        },
        "102": {
            "first_revert": true,
            "fn": null,
            "offset": [
                321,
                6468
            ],
            "op": "REVERT",
            "path": "3"
        },
        "103": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "104": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x7A"
        },
        "107": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x75"
        },
        "110": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "111": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "113": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1500"
        },
        "116": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMP",
            "path": "3"
        },
        "117": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "118": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x153"
        },
        "121": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMP",
            "path": "3"
        },
        "122": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "123": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "125": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "126": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x89"
        },
        "129": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP4",
            "path": "3"
        },
        "130": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "131": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "132": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "133": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1545"
        },
        "136": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMP",
            "path": "3"
        },
        "137": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "138": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "140": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "141": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "DUP1",
            "path": "3"
        },
        "142": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "143": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SUB",
            "path": "3"
        },
        "144": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "145": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "RETURN",
            "path": "3"
        },
        "146": {
            "offset": [
                370,
                402
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "147": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                370,
                402
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xB9"
        },
        "150": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                370,
                402
            ],
            "op": "PUSH32",
            "path": "3",
            "value": "0x0"
        },
        "183": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                370,
                402
            ],
            "op": "DUP2",
            "path": "3"
        },
        "184": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                370,
                402
            ],
            "op": "JUMP",
            "path": "3"
        },
        "185": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                370,
                402
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "186": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                370,
                402
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "188": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                370,
                402
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "189": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "191": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "193": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "195": {
            "op": "SHL"
        },
        "196": {
            "op": "SUB"
        },
        "197": {
            "op": "SWAP1"
        },
        "198": {
            "op": "SWAP2"
        },
        "199": {
            "op": "AND"
        },
        "200": {
            "op": "DUP2"
        },
        "201": {
            "op": "MSTORE"
        },
        "202": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "204": {
            "op": "ADD"
        },
        "205": {
            "offset": [
                370,
                402
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x89"
        },
        "208": {
            "op": "JUMP"
        },
        "209": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "210": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xE4"
        },
        "213": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xDF"
        },
        "216": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "217": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "219": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1616"
        },
        "222": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                3755,
                4850
            ],
            "op": "JUMP",
            "path": "3"
        },
        "223": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "224": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x2CC"
        },
        "227": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                3755,
                4850
            ],
            "op": "JUMP",
            "path": "3"
        },
        "228": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "229": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "231": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "232": {
            "op": "SWAP1"
        },
        "233": {
            "op": "DUP2"
        },
        "234": {
            "op": "MSTORE"
        },
        "235": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "237": {
            "op": "ADD"
        },
        "238": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x89"
        },
        "241": {
            "op": "JUMP"
        },
        "242": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "243": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x105"
        },
        "246": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x100"
        },
        "249": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "250": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "252": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x168D"
        },
        "255": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMP",
            "path": "3"
        },
        "256": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "257": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x470"
        },
        "260": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMP",
            "path": "3"
        },
        "261": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "262": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "264": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "DUP1",
            "path": "3"
        },
        "265": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "266": {
            "op": "SWAP4"
        },
        "267": {
            "op": "DUP5"
        },
        "268": {
            "op": "MSTORE"
        },
        "269": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "271": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "273": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "275": {
            "op": "SHL"
        },
        "276": {
            "op": "SUB"
        },
        "277": {
            "op": "SWAP1"
        },
        "278": {
            "op": "SWAP3"
        },
        "279": {
            "op": "AND"
        },
        "280": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "282": {
            "op": "DUP5"
        },
        "283": {
            "op": "ADD"
        },
        "284": {
            "op": "MSTORE"
        },
        "285": {
            "op": "PUSH1",
            "value": "0x2"
        },
        "287": {
            "op": "SIGNEXTEND"
        },
        "288": {
            "op": "SWAP1"
        },
        "289": {
            "op": "DUP3"
        },
        "290": {
            "op": "ADD"
        },
        "291": {
            "op": "MSTORE"
        },
        "292": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "294": {
            "op": "ADD"
        },
        "295": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x89"
        },
        "298": {
            "op": "JUMP"
        },
        "299": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "300": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xE4"
        },
        "303": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x139"
        },
        "306": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "307": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "309": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1616"
        },
        "312": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                4856,
                5943
            ],
            "op": "JUMP",
            "path": "3"
        },
        "313": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "314": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x74A"
        },
        "317": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                4856,
                5943
            ],
            "op": "JUMP",
            "path": "3"
        },
        "318": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "319": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x151"
        },
        "322": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x14C"
        },
        "325": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "326": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "328": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x16F3"
        },
        "331": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "jump": "i",
            "offset": [
                581,
                1236
            ],
            "op": "JUMP",
            "path": "3"
        },
        "332": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "333": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x8F0"
        },
        "336": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "jump": "i",
            "offset": [
                581,
                1236
            ],
            "op": "JUMP",
            "path": "3"
        },
        "337": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "338": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "STOP",
            "path": "3"
        },
        "339": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "340": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1392,
                1409
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "342": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1423,
                1461
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x60"
        },
        "344": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1475,
                1503
            ],
            "op": "DUP1",
            "path": "3"
        },
        "345": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1566,
                1581
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 0,
            "value": "0x161"
        },
        "348": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1566,
                1570
            ],
            "op": "DUP6",
            "path": "3"
        },
        "349": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1566,
                1579
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x9AD"
        },
        "352": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1566,
                1581
            ],
            "op": "JUMP",
            "path": "3"
        },
        "353": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1566,
                1581
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "354": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH8",
            "path": "3",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "363": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP2",
            "path": "3"
        },
        "364": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "GT",
            "path": "3"
        },
        "365": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "366": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x179"
        },
        "369": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "370": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x179"
        },
        "373": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x145D"
        },
        "376": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1552,
                1582
            ],
            "op": "JUMP",
            "path": "3"
        },
        "377": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "378": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "380": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "381": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "382": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP1",
            "path": "3"
        },
        "383": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP3",
            "path": "3"
        },
        "384": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "385": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP1",
            "path": "3"
        },
        "386": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "388": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "MUL",
            "path": "3"
        },
        "389": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "391": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "ADD",
            "path": "3"
        },
        "392": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP3",
            "path": "3"
        },
        "393": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "ADD",
            "path": "3"
        },
        "394": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "396": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "397": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP1",
            "path": "3"
        },
        "398": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "399": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1A2"
        },
        "402": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "403": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP2",
            "path": "3"
        },
        "404": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "406": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "ADD",
            "path": "3"
        },
        "407": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "409": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP3",
            "path": "3"
        },
        "410": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "MUL",
            "path": "3"
        },
        "411": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP1",
            "path": "3"
        },
        "412": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "413": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "DUP4",
            "path": "3"
        },
        "414": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "CALLDATACOPY",
            "path": "3"
        },
        "415": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "ADD",
            "path": "3"
        },
        "416": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "417": {
            "op": "POP"
        },
        "418": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "419": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1552,
                1582
            ],
            "op": "POP",
            "path": "3"
        },
        "420": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1528,
                1582
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "421": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1528,
                1582
            ],
            "op": "POP",
            "path": "3"
        },
        "422": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1620,
                1635
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 1,
            "value": "0x1AE"
        },
        "425": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1620,
                1624
            ],
            "op": "DUP6",
            "path": "3"
        },
        "426": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1620,
                1633
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x9AD"
        },
        "429": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1620,
                1635
            ],
            "op": "JUMP",
            "path": "3"
        },
        "430": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1620,
                1635
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "431": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH8",
            "path": "3",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "440": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP2",
            "path": "3"
        },
        "441": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "GT",
            "path": "3"
        },
        "442": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "443": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1C6"
        },
        "446": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "447": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1C6"
        },
        "450": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x145D"
        },
        "453": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1608,
                1636
            ],
            "op": "JUMP",
            "path": "3"
        },
        "454": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "455": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "457": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "458": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "459": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP1",
            "path": "3"
        },
        "460": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP3",
            "path": "3"
        },
        "461": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "462": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP1",
            "path": "3"
        },
        "463": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "465": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "MUL",
            "path": "3"
        },
        "466": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "468": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "ADD",
            "path": "3"
        },
        "469": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP3",
            "path": "3"
        },
        "470": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "ADD",
            "path": "3"
        },
        "471": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "473": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "474": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP1",
            "path": "3"
        },
        "475": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "476": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1EF"
        },
        "479": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "480": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP2",
            "path": "3"
        },
        "481": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "483": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "ADD",
            "path": "3"
        },
        "484": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "486": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP3",
            "path": "3"
        },
        "487": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "MUL",
            "path": "3"
        },
        "488": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP1",
            "path": "3"
        },
        "489": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "490": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "DUP4",
            "path": "3"
        },
        "491": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "CALLDATACOPY",
            "path": "3"
        },
        "492": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "ADD",
            "path": "3"
        },
        "493": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "494": {
            "op": "POP"
        },
        "495": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "496": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1608,
                1636
            ],
            "op": "POP",
            "path": "3"
        },
        "497": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1592,
                1636
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "498": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1592,
                1636
            ],
            "op": "POP",
            "path": "3"
        },
        "499": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1647,
                1656
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "501": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1670,
                2341
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "502": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1698,
                1713
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "504": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1715,
                1731
            ],
            "op": "DUP1",
            "path": "3"
        },
        "505": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1733,
                1743
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "507": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1747,
                1786
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x203"
        },
        "510": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1747,
                1751
            ],
            "op": "DUP10",
            "path": "3"
        },
        "511": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1747,
                1784
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x9D9"
        },
        "514": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1747,
                1786
            ],
            "op": "JUMP",
            "path": "3"
        },
        "515": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1747,
                1786
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "516": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1697,
                1786
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "517": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1697,
                1786
            ],
            "op": "POP",
            "path": "3"
        },
        "518": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1697,
                1786
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "519": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1697,
                1786
            ],
            "op": "POP",
            "path": "3"
        },
        "520": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1697,
                1786
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "521": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1697,
                1786
            ],
            "op": "POP",
            "path": "3"
        },
        "522": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1819,
                1837
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "524": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1855,
                1880
            ],
            "op": "DUP1",
            "path": "3"
        },
        "525": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1898,
                1913
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "527": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1930,
                1996
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x21C"
        },
        "530": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1942,
                1949
            ],
            "op": "DUP7",
            "path": "3"
        },
        "531": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1951,
                1959
            ],
            "op": "DUP7",
            "path": "3"
        },
        "532": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1961,
                1964
            ],
            "op": "DUP7",
            "path": "3"
        },
        "533": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1967,
                1975
            ],
            "op": "DUP15",
            "path": "3"
        },
        "534": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1977,
                1978
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "536": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1930,
                1941
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x470"
        },
        "539": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                1930,
                1996
            ],
            "op": "JUMP",
            "path": "3"
        },
        "540": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1930,
                1996
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "541": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1801,
                1996
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "542": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1801,
                1996
            ],
            "op": "POP",
            "path": "3"
        },
        "543": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1801,
                1996
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "544": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1801,
                1996
            ],
            "op": "POP",
            "path": "3"
        },
        "545": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1801,
                1996
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "546": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1801,
                1996
            ],
            "op": "POP",
            "path": "3"
        },
        "547": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2038,
                2055
            ],
            "op": "DUP2",
            "path": "3",
            "statement": 2
        },
        "548": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2032
            ],
            "op": "DUP10",
            "path": "3"
        },
        "549": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2033,
                2034
            ],
            "op": "DUP9",
            "path": "3"
        },
        "550": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "DUP2",
            "path": "3"
        },
        "551": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "552": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "DUP2",
            "path": "3"
        },
        "553": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "LT",
            "path": "3"
        },
        "554": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x235"
        },
        "557": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "558": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x235"
        },
        "561": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1743"
        },
        "564": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                2011,
                2035
            ],
            "op": "JUMP",
            "path": "3"
        },
        "565": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "566": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "568": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "MUL",
            "path": "3"
        },
        "569": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "571": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "ADD",
            "path": "3"
        },
        "572": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2035
            ],
            "op": "ADD",
            "path": "3"
        },
        "573": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "574": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "576": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "578": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "580": {
            "op": "SHL"
        },
        "581": {
            "op": "SUB"
        },
        "582": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "AND",
            "path": "3"
        },
        "583": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "584": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "DUP2",
            "path": "3"
        },
        "585": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "587": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "589": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "591": {
            "op": "SHL"
        },
        "592": {
            "op": "SUB"
        },
        "593": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "AND",
            "path": "3"
        },
        "594": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "DUP2",
            "path": "3"
        },
        "595": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "596": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "POP",
            "path": "3"
        },
        "597": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2011,
                2055
            ],
            "op": "POP",
            "path": "3"
        },
        "598": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2088,
                2097
            ],
            "op": "DUP1",
            "path": "3",
            "statement": 3
        },
        "599": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2082
            ],
            "op": "DUP9",
            "path": "3"
        },
        "600": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2083,
                2084
            ],
            "op": "DUP9",
            "path": "3"
        },
        "601": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "DUP2",
            "path": "3"
        },
        "602": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "603": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "DUP2",
            "path": "3"
        },
        "604": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "LT",
            "path": "3"
        },
        "605": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x268"
        },
        "608": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "609": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x268"
        },
        "612": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1743"
        },
        "615": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                2069,
                2085
            ],
            "op": "JUMP",
            "path": "3"
        },
        "616": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "617": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "619": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "MUL",
            "path": "3"
        },
        "620": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "622": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "ADD",
            "path": "3"
        },
        "623": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2085
            ],
            "op": "ADD",
            "path": "3"
        },
        "624": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "625": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "627": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "628": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "629": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "DUP2",
            "path": "3"
        },
        "630": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "632": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "633": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "DUP2",
            "path": "3"
        },
        "634": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "635": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "POP",
            "path": "3"
        },
        "636": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2069,
                2097
            ],
            "op": "POP",
            "path": "3"
        },
        "637": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2122,
                2132
            ],
            "op": "DUP3",
            "path": "3",
            "statement": 4
        },
        "638": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2111,
                2132
            ],
            "op": "SWAP11",
            "path": "3"
        },
        "639": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2111,
                2132
            ],
            "op": "POP",
            "path": "3"
        },
        "640": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "DUP7",
            "path": "3",
            "statement": 5
        },
        "641": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "DUP1",
            "path": "3"
        },
        "642": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x28A"
        },
        "645": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "646": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x176F"
        },
        "649": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                2146,
                2149
            ],
            "op": "JUMP",
            "path": "3"
        },
        "650": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "651": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "SWAP8",
            "path": "3"
        },
        "652": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "POP",
            "path": "3"
        },
        "653": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2146,
                2149
            ],
            "op": "POP",
            "path": "3"
        },
        "654": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2168,
                2191
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x296"
        },
        "657": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2168,
                2172
            ],
            "op": "DUP13",
            "path": "3"
        },
        "658": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2168,
                2189
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xA15"
        },
        "661": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                2168,
                2191
            ],
            "op": "JUMP",
            "path": "3"
        },
        "662": {
            "branch": 79,
            "fn": "Quoter.quoteMulti",
            "offset": [
                2168,
                2191
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "663": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2164,
                2331
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "664": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2164,
                2331
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x2AB"
        },
        "667": {
            "branch": 79,
            "fn": "Quoter.quoteMulti",
            "offset": [
                2164,
                2331
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "668": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2218,
                2234
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 6,
            "value": "0x2A4"
        },
        "671": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2218,
                2222
            ],
            "op": "DUP13",
            "path": "3"
        },
        "672": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2218,
                2232
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xA4F"
        },
        "675": {
            "fn": "Quoter.quoteMulti",
            "jump": "i",
            "offset": [
                2218,
                2234
            ],
            "op": "JUMP",
            "path": "3"
        },
        "676": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2218,
                2234
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "677": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2211,
                2234
            ],
            "op": "SWAP12",
            "path": "3"
        },
        "678": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2211,
                2234
            ],
            "op": "POP",
            "path": "3"
        },
        "679": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2164,
                2331
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x2B9"
        },
        "682": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2164,
                2331
            ],
            "op": "JUMP",
            "path": "3"
        },
        "683": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2164,
                2331
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "684": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2285,
                2293
            ],
            "op": "DUP11",
            "path": "3",
            "statement": 7
        },
        "685": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2273,
                2293
            ],
            "op": "SWAP10",
            "path": "3"
        },
        "686": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2273,
                2293
            ],
            "op": "POP",
            "path": "3"
        },
        "687": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "POP",
            "path": "3",
            "statement": 8
        },
        "688": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "POP",
            "path": "3"
        },
        "689": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "POP",
            "path": "3"
        },
        "690": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "POP",
            "path": "3"
        },
        "691": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "POP",
            "path": "3"
        },
        "692": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "POP",
            "path": "3"
        },
        "693": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x2C4"
        },
        "696": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2311,
                2316
            ],
            "op": "JUMP",
            "path": "3"
        },
        "697": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                2164,
                2331
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "698": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1683,
                2341
            ],
            "op": "POP",
            "path": "3"
        },
        "699": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1683,
                2341
            ],
            "op": "POP",
            "path": "3"
        },
        "700": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1683,
                2341
            ],
            "op": "POP",
            "path": "3"
        },
        "701": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1683,
                2341
            ],
            "op": "POP",
            "path": "3"
        },
        "702": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1683,
                2341
            ],
            "op": "POP",
            "path": "3"
        },
        "703": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1683,
                2341
            ],
            "op": "POP",
            "path": "3"
        },
        "704": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1670,
                2341
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1F5"
        },
        "707": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1670,
                2341
            ],
            "op": "JUMP",
            "path": "3"
        },
        "708": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1670,
                2341
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "709": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1518,
                2347
            ],
            "op": "POP",
            "path": "3"
        },
        "710": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "711": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "POP",
            "path": "3"
        },
        "712": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "713": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "POP",
            "path": "3"
        },
        "714": {
            "fn": "Quoter.quoteMulti",
            "offset": [
                1268,
                2347
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "715": {
            "fn": "Quoter.quoteMulti",
            "jump": "o",
            "offset": [
                1268,
                2347
            ],
            "op": "JUMP",
            "path": "3"
        },
        "716": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "717": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "719": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "720": {
            "op": "PUSH4",
            "value": "0x1C9956ED"
        },
        "725": {
            "op": "PUSH1",
            "value": "0xE3"
        },
        "727": {
            "op": "SHL"
        },
        "728": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP2",
            "path": "3"
        },
        "729": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "730": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "732": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "734": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "736": {
            "op": "SHL"
        },
        "737": {
            "op": "SUB"
        },
        "738": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4058,
                4065
            ],
            "op": "PUSH32",
            "path": "3",
            "value": "0x0"
        },
        "771": {
            "op": "DUP2"
        },
        "772": {
            "op": "AND"
        },
        "773": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "775": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP4",
            "path": "3"
        },
        "776": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "ADD",
            "path": "3"
        },
        "777": {
            "op": "MSTORE"
        },
        "778": {
            "op": "DUP1"
        },
        "779": {
            "op": "DUP9"
        },
        "780": {
            "op": "AND"
        },
        "781": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "783": {
            "op": "DUP4"
        },
        "784": {
            "op": "ADD"
        },
        "785": {
            "op": "MSTORE"
        },
        "786": {
            "op": "DUP7"
        },
        "787": {
            "op": "AND"
        },
        "788": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "790": {
            "op": "DUP3"
        },
        "791": {
            "op": "ADD"
        },
        "792": {
            "op": "MSTORE"
        },
        "793": {
            "op": "PUSH3",
            "value": "0xFFFFFF"
        },
        "797": {
            "op": "DUP6"
        },
        "798": {
            "op": "AND"
        },
        "799": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "801": {
            "op": "DUP3"
        },
        "802": {
            "op": "ADD"
        },
        "803": {
            "op": "MSTORE"
        },
        "804": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3973,
                3988
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "806": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3973,
                3988
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "807": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3973,
                3988
            ],
            "op": "DUP2",
            "path": "3"
        },
        "808": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3973,
                3988
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "809": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4035
            ],
            "op": "PUSH20",
            "path": "3",
            "value": "0x0"
        },
        "830": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4035
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "831": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4044
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xE4CAB768"
        },
        "836": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4044
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "837": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "839": {
            "op": "ADD"
        },
        "840": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "842": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "844": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "845": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP1",
            "path": "3"
        },
        "846": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP4",
            "path": "3"
        },
        "847": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "SUB",
            "path": "3"
        },
        "848": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP2",
            "path": "3"
        },
        "849": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP7",
            "path": "3"
        },
        "850": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "GAS",
            "path": "3"
        },
        "851": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DELEGATECALL",
            "path": "3"
        },
        "852": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "853": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP1",
            "path": "3"
        },
        "854": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "855": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x364"
        },
        "858": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "859": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "860": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "862": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP1",
            "path": "3"
        },
        "863": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "RETURNDATACOPY",
            "path": "3"
        },
        "864": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "865": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "867": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "REVERT",
            "path": "3"
        },
        "868": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "869": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "POP",
            "path": "3"
        },
        "870": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "POP",
            "path": "3"
        },
        "871": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "POP",
            "path": "3"
        },
        "872": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "POP",
            "path": "3"
        },
        "873": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "875": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "876": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "877": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "879": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "NOT",
            "path": "3"
        },
        "880": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "882": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP3",
            "path": "3"
        },
        "883": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "ADD",
            "path": "3"
        },
        "884": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "AND",
            "path": "3"
        },
        "885": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP3",
            "path": "3"
        },
        "886": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "ADD",
            "path": "3"
        },
        "887": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP1",
            "path": "3"
        },
        "888": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "890": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "891": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "POP",
            "path": "3"
        },
        "892": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "DUP2",
            "path": "3"
        },
        "893": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "ADD",
            "path": "3"
        },
        "894": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "895": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x388"
        },
        "898": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "899": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "900": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1788"
        },
        "903": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                4022,
                4135
            ],
            "op": "JUMP",
            "path": "3"
        },
        "904": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4022,
                4135
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "905": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4000,
                4135
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "906": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4000,
                4135
            ],
            "op": "POP",
            "path": "3"
        },
        "907": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4147,
                4167
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "909": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4169,
                4179
            ],
            "op": "DUP1",
            "path": "3"
        },
        "910": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4193
            ],
            "op": "DUP3",
            "path": "3"
        },
        "911": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "913": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "915": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "917": {
            "op": "SHL"
        },
        "918": {
            "op": "SUB"
        },
        "919": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4199
            ],
            "op": "AND",
            "path": "3"
        },
        "920": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4199
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0x3850C7BD"
        },
        "925": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "927": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "928": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP2",
            "path": "3"
        },
        "929": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xFFFFFFFF"
        },
        "934": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "AND",
            "path": "3"
        },
        "935": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xE0"
        },
        "937": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "SHL",
            "path": "3"
        },
        "938": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP2",
            "path": "3"
        },
        "939": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "940": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "942": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "ADD",
            "path": "3"
        },
        "943": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xA0"
        },
        "945": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "947": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "948": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP1",
            "path": "3"
        },
        "949": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP4",
            "path": "3"
        },
        "950": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "SUB",
            "path": "3"
        },
        "951": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP2",
            "path": "3"
        },
        "952": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP7",
            "path": "3"
        },
        "953": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "GAS",
            "path": "3"
        },
        "954": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "STATICCALL",
            "path": "3"
        },
        "955": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "956": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP1",
            "path": "3"
        },
        "957": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "958": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x3CB"
        },
        "961": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "962": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "963": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "965": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP1",
            "path": "3"
        },
        "966": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "RETURNDATACOPY",
            "path": "3"
        },
        "967": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "968": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "970": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "REVERT",
            "path": "3"
        },
        "971": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "972": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "973": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "974": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "975": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "976": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "978": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "979": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "980": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "982": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "NOT",
            "path": "3"
        },
        "983": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "985": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP3",
            "path": "3"
        },
        "986": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "ADD",
            "path": "3"
        },
        "987": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "AND",
            "path": "3"
        },
        "988": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP3",
            "path": "3"
        },
        "989": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "ADD",
            "path": "3"
        },
        "990": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP1",
            "path": "3"
        },
        "991": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "993": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "994": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "995": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "DUP2",
            "path": "3"
        },
        "996": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "ADD",
            "path": "3"
        },
        "997": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "998": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x3EF"
        },
        "1001": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1002": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1003": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x17B7"
        },
        "1006": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                4189,
                4201
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1007": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4189,
                4201
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1008": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4146,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "1009": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4146,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "1010": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4146,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "1011": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4146,
                4201
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1012": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4146,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "1013": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4146,
                4201
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1014": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4146,
                4201
            ],
            "op": "POP",
            "path": "3"
        },
        "1015": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4223,
                4232
            ],
            "op": "DUP6",
            "path": "3"
        },
        "1016": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4232
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "1018": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4232
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "1019": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4220
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1020": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4232
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "1022": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4232
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "1023": {
            "branch": 80,
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4232
            ],
            "op": "SLT",
            "path": "3"
        },
        "1024": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4252
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1025": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4252
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "1026": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4252
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x410"
        },
        "1029": {
            "branch": 80,
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4252
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1030": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4252
            ],
            "op": "POP",
            "path": "3"
        },
        "1031": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4243,
                4252
            ],
            "op": "DUP7",
            "path": "3"
        },
        "1032": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4236,
                4252
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "1034": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4236,
                4252
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "1035": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4236,
                4240
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1036": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4236,
                4252
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "1038": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4236,
                4252
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "1039": {
            "branch": 81,
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4236,
                4252
            ],
            "op": "SGT",
            "path": "3"
        },
        "1040": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4216,
                4252
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1041": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4212,
                4844
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "1042": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4212,
                4844
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x463"
        },
        "1045": {
            "branch": 81,
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4212,
                4844
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1046": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4278,
                4428
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 9,
            "value": "0x42D"
        },
        "1049": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4325,
                4337
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1050": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1052": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1054": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1056": {
            "op": "SHL"
        },
        "1057": {
            "op": "SUB"
        },
        "1058": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4317,
                4338
            ],
            "op": "AND",
            "path": "3"
        },
        "1059": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4364,
                4379
            ],
            "op": "DUP7",
            "path": "3"
        },
        "1060": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1062": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "1064": {
            "op": "SHL"
        },
        "1065": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4278,
                4299
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xA80"
        },
        "1068": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                4278,
                4428
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1069": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4278,
                4428
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1070": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4268,
                4428
            ],
            "op": "SWAP4",
            "path": "3"
        },
        "1071": {
            "op": "POP"
        },
        "1072": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4443,
                4460
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1074": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4463,
                4637
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x448"
        },
        "1077": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4494,
                4503
            ],
            "op": "DUP9",
            "path": "3"
        },
        "1078": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4521,
                4530
            ],
            "op": "DUP9",
            "path": "3"
        },
        "1079": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4548,
                4560
            ],
            "op": "DUP6",
            "path": "3"
        },
        "1080": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4578,
                4593
            ],
            "op": "DUP10",
            "path": "3"
        },
        "1081": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4611,
                4623
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x443"
        },
        "1084": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4622,
                4623
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "1086": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4268,
                4428
            ],
            "op": "DUP12",
            "path": "3"
        },
        "1087": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4611,
                4623
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1905"
        },
        "1090": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                4611,
                4623
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1091": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4611,
                4623
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1092": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4463,
                4476
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xACB"
        },
        "1095": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                4463,
                4637
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1096": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4463,
                4637
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1097": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4443,
                4637
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1098": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4443,
                4637
            ],
            "op": "POP",
            "path": "3"
        },
        "1099": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4662,
                4833
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 10,
            "value": "0x45F"
        },
        "1102": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4701,
                4739
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x456"
        },
        "1105": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4729,
                4738
            ],
            "op": "DUP10",
            "path": "3"
        },
        "1106": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4701,
                4728
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xAF4"
        },
        "1109": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                4701,
                4739
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1110": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4701,
                4739
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1111": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4757,
                4769
            ],
            "op": "DUP5",
            "path": "3"
        },
        "1112": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4787,
                4796
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1113": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4814,
                4819
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1115": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4662,
                4683
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xF16"
        },
        "1118": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "i",
            "offset": [
                4662,
                4833
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1119": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4662,
                4833
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1120": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4652,
                4833
            ],
            "op": "SWAP5",
            "path": "3"
        },
        "1121": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4652,
                4833
            ],
            "op": "POP",
            "path": "3"
        },
        "1122": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4254,
                4844
            ],
            "op": "POP",
            "path": "3"
        },
        "1123": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                4212,
                4844
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1124": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3990,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1125": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3990,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1126": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3990,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1127": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "SWAP7",
            "path": "3"
        },
        "1128": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "SWAP6",
            "path": "3"
        },
        "1129": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1130": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1131": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1132": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1133": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1134": {
            "fn": "Quoter.quoteLiqInputToken0",
            "offset": [
                3755,
                4850
            ],
            "op": "POP",
            "path": "3"
        },
        "1135": {
            "fn": "Quoter.quoteLiqInputToken0",
            "jump": "o",
            "offset": [
                3755,
                4850
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1136": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1137": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2544,
                2561
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1139": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2669
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1140": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2669
            ],
            "op": "SLOAD",
            "path": "3"
        },
        "1141": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1143": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1144": {
            "op": "PUSH4",
            "value": "0x175C1B23"
        },
        "1149": {
            "op": "PUSH1",
            "value": "0xE3"
        },
        "1151": {
            "op": "SHL"
        },
        "1152": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1153": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1154": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1156": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1158": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1160": {
            "op": "SHL"
        },
        "1161": {
            "op": "SUB"
        },
        "1162": {
            "op": "DUP9"
        },
        "1163": {
            "op": "DUP2"
        },
        "1164": {
            "op": "AND"
        },
        "1165": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "1167": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1168": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "ADD",
            "path": "3"
        },
        "1169": {
            "op": "MSTORE"
        },
        "1170": {
            "op": "DUP8"
        },
        "1171": {
            "op": "DUP2"
        },
        "1172": {
            "op": "AND"
        },
        "1173": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1175": {
            "op": "DUP4"
        },
        "1176": {
            "op": "ADD"
        },
        "1177": {
            "op": "MSTORE"
        },
        "1178": {
            "op": "PUSH3",
            "value": "0xFFFFFF"
        },
        "1182": {
            "op": "DUP8"
        },
        "1183": {
            "op": "AND"
        },
        "1184": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1186": {
            "op": "DUP4"
        },
        "1187": {
            "op": "ADD"
        },
        "1188": {
            "op": "MSTORE"
        },
        "1189": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2544,
                2561
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1190": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2544,
                2561
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "1191": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2544,
                2561
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1192": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2544,
                2561
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "1193": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2544,
                2561
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1194": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2544,
                2561
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "1195": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2669
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1196": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2669
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1197": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2669
            ],
            "op": "AND",
            "path": "3"
        },
        "1198": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2669
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1199": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2675
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xBAE0D918"
        },
        "1204": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2675
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1205": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1207": {
            "op": "ADD"
        },
        "1208": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1210": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1212": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1213": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1214": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1215": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "SUB",
            "path": "3"
        },
        "1216": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1217": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP7",
            "path": "3"
        },
        "1218": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "GAS",
            "path": "3"
        },
        "1219": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "STATICCALL",
            "path": "3"
        },
        "1220": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "1221": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1222": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "1223": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x4D4"
        },
        "1226": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1227": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1228": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1230": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1231": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "RETURNDATACOPY",
            "path": "3"
        },
        "1232": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1233": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1235": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "REVERT",
            "path": "3"
        },
        "1236": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1237": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "POP",
            "path": "3"
        },
        "1238": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "POP",
            "path": "3"
        },
        "1239": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "POP",
            "path": "3"
        },
        "1240": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "POP",
            "path": "3"
        },
        "1241": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1243": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1244": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1245": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "1247": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "NOT",
            "path": "3"
        },
        "1248": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "1250": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1251": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "ADD",
            "path": "3"
        },
        "1252": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "AND",
            "path": "3"
        },
        "1253": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1254": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "ADD",
            "path": "3"
        },
        "1255": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1256": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1258": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1259": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "POP",
            "path": "3"
        },
        "1260": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1261": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "ADD",
            "path": "3"
        },
        "1262": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1263": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x4F8"
        },
        "1266": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1267": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1268": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1788"
        },
        "1271": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                2658,
                2745
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1272": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2658,
                2745
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1273": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2621,
                2746
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1274": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2621,
                2746
            ],
            "op": "POP",
            "path": "3"
        },
        "1275": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2759,
                2774
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1277": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2787,
                2795
            ],
            "op": "DUP9",
            "path": "3"
        },
        "1278": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1280": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1282": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1284": {
            "op": "SHL"
        },
        "1285": {
            "op": "SUB"
        },
        "1286": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2777,
                2795
            ],
            "op": "AND",
            "path": "3"
        },
        "1287": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2777,
                2784
            ],
            "op": "DUP11",
            "path": "3"
        },
        "1288": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1290": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1292": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1294": {
            "op": "SHL"
        },
        "1295": {
            "op": "SUB"
        },
        "1296": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2777,
                2795
            ],
            "op": "AND",
            "path": "3"
        },
        "1297": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2777,
                2795
            ],
            "op": "LT",
            "path": "3"
        },
        "1298": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2759,
                2795
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1299": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2759,
                2795
            ],
            "op": "POP",
            "path": "3"
        },
        "1300": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                2826
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1301": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1303": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1305": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1307": {
            "op": "SHL"
        },
        "1308": {
            "op": "SUB"
        },
        "1309": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                2831
            ],
            "op": "AND",
            "path": "3"
        },
        "1310": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                2831
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xDD5A12D8"
        },
        "1315": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2857,
                2861
            ],
            "op": "ADDRESS",
            "path": "3"
        },
        "1316": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2880,
                2890
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1317": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2908,
                2916
            ],
            "op": "DUP11",
            "path": "3"
        },
        "1318": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                2951
            ],
            "op": "DUP11",
            "path": "3"
        },
        "1319": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1321": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1323": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1325": {
            "op": "SHL"
        },
        "1326": {
            "op": "SUB"
        },
        "1327": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                2956
            ],
            "op": "AND",
            "path": "3"
        },
        "1328": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2955,
                2956
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1330": {
            "branch": 82,
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                2956
            ],
            "op": "EQ",
            "path": "3"
        },
        "1331": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                3193
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x53C"
        },
        "1334": {
            "branch": 82,
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                3193
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1335": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3176,
                3193
            ],
            "op": "DUP11",
            "path": "3"
        },
        "1336": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                3193
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x575"
        },
        "1339": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                3193
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1340": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2934,
                3193
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1341": {
            "branch": 83,
            "fn": "Quoter.quoteSingle",
            "offset": [
                3005,
                3015
            ],
            "op": "DUP6",
            "path": "3"
        },
        "1342": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3005,
                3131
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x565"
        },
        "1345": {
            "branch": 83,
            "fn": "Quoter.quoteSingle",
            "offset": [
                3005,
                3131
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1346": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3104,
                3131
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x560"
        },
        "1349": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3130,
                3131
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1"
        },
        "1351": {
            "offset": [
                997,
                1046
            ],
            "op": "PUSH20",
            "path": "16",
            "value": "0xFFFD8963EFD1FC6A506488495D951D5263988D26"
        },
        "1372": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3104,
                3131
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1914"
        },
        "1375": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                3104,
                3131
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1376": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3104,
                3131
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1377": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3005,
                3131
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x575"
        },
        "1380": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3005,
                3131
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1381": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3005,
                3131
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1382": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3046,
                3073
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x575"
        },
        "1385": {
            "offset": [
                817,
                827
            ],
            "op": "PUSH5",
            "path": "16",
            "value": "0x1000276A3"
        },
        "1391": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3072,
                3073
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1"
        },
        "1393": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3046,
                3073
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x193B"
        },
        "1396": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                3046,
                3073
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1397": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3046,
                3073
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1398": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1400": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1401": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1402": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1404": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1406": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1408": {
            "op": "SHL"
        },
        "1409": {
            "op": "SUB"
        },
        "1410": {
            "op": "DUP11"
        },
        "1411": {
            "op": "AND"
        },
        "1412": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1414": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1415": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "ADD",
            "path": "3"
        },
        "1416": {
            "op": "MSTORE"
        },
        "1417": {
            "op": "ADD"
        },
        "1418": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1420": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1421": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1423": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1424": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1425": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "SUB",
            "path": "3"
        },
        "1426": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "SUB",
            "path": "3"
        },
        "1427": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1428": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1429": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1430": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1432": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3211,
                3236
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1433": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1435": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1436": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP7",
            "path": "3"
        },
        "1437": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xFFFFFFFF"
        },
        "1442": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "AND",
            "path": "3"
        },
        "1443": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xE0"
        },
        "1445": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SHL",
            "path": "3"
        },
        "1446": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1447": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1448": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "1450": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "ADD",
            "path": "3"
        },
        "1451": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x5B8"
        },
        "1454": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP6",
            "path": "3"
        },
        "1455": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP5",
            "path": "3"
        },
        "1456": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP4",
            "path": "3"
        },
        "1457": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "1458": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1459": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1460": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x195B"
        },
        "1463": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                2822,
                3250
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1464": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1465": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1467": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1468": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1469": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1470": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1471": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SUB",
            "path": "3"
        },
        "1472": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1473": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1475": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP8",
            "path": "3"
        },
        "1476": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "GAS",
            "path": "3"
        },
        "1477": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "CALL",
            "path": "3"
        },
        "1478": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "1479": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "POP",
            "path": "3"
        },
        "1480": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "POP",
            "path": "3"
        },
        "1481": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "POP",
            "path": "3"
        },
        "1482": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1483": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "1484": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x5F2"
        },
        "1487": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1488": {
            "op": "POP"
        },
        "1489": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1491": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1492": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1493": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "1495": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1496": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1497": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1498": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "ADD",
            "path": "3"
        },
        "1499": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "1501": {
            "op": "NOT"
        },
        "1502": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "AND",
            "path": "3"
        },
        "1503": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1504": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "ADD",
            "path": "3"
        },
        "1505": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1506": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "1507": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1508": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x5EF"
        },
        "1511": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1512": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1513": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "ADD",
            "path": "3"
        },
        "1514": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1515": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x19D5"
        },
        "1518": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                2822,
                3250
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1519": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1520": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1"
        },
        "1522": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2822,
                3250
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1523": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x73A"
        },
        "1526": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1527": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1528": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1529": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1530": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "1531": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x620"
        },
        "1534": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1535": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1537": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1538": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1539": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "POP",
            "path": "3"
        },
        "1540": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "1542": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "NOT",
            "path": "3"
        },
        "1543": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x3F"
        },
        "1545": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1546": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "ADD",
            "path": "3"
        },
        "1547": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "AND",
            "path": "3"
        },
        "1548": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1549": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "ADD",
            "path": "3"
        },
        "1550": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1552": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1553": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1554": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1555": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1556": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "1557": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1559": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1561": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "DUP5",
            "path": "3"
        },
        "1562": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "ADD",
            "path": "3"
        },
        "1563": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "RETURNDATACOPY",
            "path": "3"
        },
        "1564": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x625"
        },
        "1567": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1568": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1569": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x60"
        },
        "1571": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1572": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "POP",
            "path": "3"
        },
        "1573": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1574": {
            "op": "POP"
        },
        "1575": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1576": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1577": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1579": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1580": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1581": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "ADD",
            "path": "3"
        },
        "1582": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1583": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1584": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1585": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3324,
                3341
            ],
            "op": "KECCAK256",
            "path": "3"
        },
        "1586": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1588": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1589": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1590": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "1592": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1593": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1594": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x24"
        },
        "1596": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1597": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "ADD",
            "path": "3"
        },
        "1598": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1599": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1600": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1601": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1602": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1603": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "ADD",
            "path": "3"
        },
        "1604": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1605": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1606": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1608": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1610": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1612": {
            "op": "SHL"
        },
        "1613": {
            "op": "SUB"
        },
        "1614": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "AND",
            "path": "3"
        },
        "1615": {
            "op": "PUSH4",
            "value": "0x2D4EEEB3"
        },
        "1620": {
            "op": "PUSH1",
            "value": "0xE2"
        },
        "1622": {
            "op": "SHL"
        },
        "1623": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "OR",
            "path": "3"
        },
        "1624": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1625": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3369,
                3415
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1626": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3416
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1627": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3416
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1628": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3416
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1629": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3416
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1630": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3416
            ],
            "op": "KECCAK256",
            "path": "3"
        },
        "1631": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3429
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1632": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3429
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1633": {
            "branch": 84,
            "fn": "Quoter.quoteSingle",
            "offset": [
                3359,
                3429
            ],
            "op": "SUB",
            "path": "3"
        },
        "1634": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3355,
                3633
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x6A6"
        },
        "1637": {
            "branch": 84,
            "fn": "Quoter.quoteSingle",
            "offset": [
                3355,
                3633
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1638": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "PUSH1",
            "path": "3",
            "statement": 11,
            "value": "0x40"
        },
        "1640": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1641": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1645": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1647": {
            "op": "SHL"
        },
        "1648": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1649": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1650": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1652": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "1654": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1655": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "ADD",
            "path": "3"
        },
        "1656": {
            "op": "MSTORE"
        },
        "1657": {
            "op": "PUSH1",
            "value": "0x11"
        },
        "1659": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1661": {
            "op": "DUP3"
        },
        "1662": {
            "op": "ADD"
        },
        "1663": {
            "op": "MSTORE"
        },
        "1664": {
            "op": "PUSH17",
            "value": "0x125B9D985B1A59141C9A58D9531A5B5A5D"
        },
        "1682": {
            "op": "PUSH1",
            "value": "0x7A"
        },
        "1684": {
            "op": "SHL"
        },
        "1685": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1687": {
            "op": "DUP3"
        },
        "1688": {
            "op": "ADD"
        },
        "1689": {
            "op": "MSTORE"
        },
        "1690": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1692": {
            "op": "ADD"
        },
        "1693": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1694": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1696": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1697": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1698": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1699": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "SUB",
            "path": "3"
        },
        "1700": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1701": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3449,
                3476
            ],
            "op": "REVERT",
            "optimizer_revert": true,
            "path": "3"
        },
        "1702": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3355,
                3633
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1703": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1705": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1706": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1707": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "1709": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1710": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1711": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x24"
        },
        "1713": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1714": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "ADD",
            "path": "3"
        },
        "1715": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1716": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1717": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1718": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1720": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1721": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "ADD",
            "path": "3"
        },
        "1722": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1723": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1724": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1726": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1728": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1730": {
            "op": "SHL"
        },
        "1731": {
            "op": "SUB"
        },
        "1732": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "AND",
            "path": "3"
        },
        "1733": {
            "op": "PUSH4",
            "value": "0x4323A555"
        },
        "1738": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1740": {
            "op": "SHL"
        },
        "1741": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "OR",
            "path": "3"
        },
        "1742": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1743": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3510,
                3557
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1744": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3500,
                3558
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1745": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3500,
                3558
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1746": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3500,
                3558
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1747": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3500,
                3558
            ],
            "op": "KECCAK256",
            "path": "3"
        },
        "1748": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3500,
                3571
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1749": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3500,
                3571
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1750": {
            "branch": 85,
            "fn": "Quoter.quoteSingle",
            "offset": [
                3500,
                3571
            ],
            "op": "SUB",
            "path": "3"
        },
        "1751": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3496,
                3633
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x717"
        },
        "1754": {
            "branch": 85,
            "fn": "Quoter.quoteSingle",
            "offset": [
                3496,
                3633
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "1755": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "PUSH1",
            "path": "3",
            "statement": 12,
            "value": "0x40"
        },
        "1757": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1758": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1762": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1764": {
            "op": "SHL"
        },
        "1765": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1766": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1767": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "1769": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "1771": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "DUP3",
            "path": "3"
        },
        "1772": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "ADD",
            "path": "3"
        },
        "1773": {
            "op": "MSTORE"
        },
        "1774": {
            "op": "PUSH1",
            "value": "0x12"
        },
        "1776": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1778": {
            "op": "DUP3"
        },
        "1779": {
            "op": "ADD"
        },
        "1780": {
            "op": "MSTORE"
        },
        "1781": {
            "op": "PUSH18",
            "value": "0x4E6F74456E6F7567684C6971756964697479"
        },
        "1800": {
            "op": "PUSH1",
            "value": "0x70"
        },
        "1802": {
            "op": "SHL"
        },
        "1803": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1805": {
            "op": "DUP3"
        },
        "1806": {
            "op": "ADD"
        },
        "1807": {
            "op": "MSTORE"
        },
        "1808": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1810": {
            "op": "ADD"
        },
        "1811": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3590,
                3618
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x69D"
        },
        "1814": {
            "op": "JUMP"
        },
        "1815": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3496,
                3633
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1816": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3664,
                3670
            ],
            "op": "DUP2",
            "path": "3",
            "statement": 13
        },
        "1817": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1818": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1820": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "ADD",
            "path": "3"
        },
        "1821": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1822": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1823": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1824": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "ADD",
            "path": "3"
        },
        "1825": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1826": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x72B"
        },
        "1829": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "1830": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1831": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x19F9"
        },
        "1834": {
            "fn": "Quoter.quoteSingle",
            "jump": "i",
            "offset": [
                3653,
                3698
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1835": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3653,
                3698
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1836": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "SWAP7",
            "path": "3"
        },
        "1837": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "POP",
            "path": "3"
        },
        "1838": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "SWAP7",
            "path": "3"
        },
        "1839": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "POP",
            "path": "3"
        },
        "1840": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "SWAP7",
            "path": "3"
        },
        "1841": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "POP",
            "path": "3"
        },
        "1842": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "POP",
            "path": "3"
        },
        "1843": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "POP",
            "path": "3"
        },
        "1844": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "POP",
            "path": "3"
        },
        "1845": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "POP",
            "path": "3"
        },
        "1846": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x73F"
        },
        "1849": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                3646,
                3698
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1850": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1851": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "POP",
            "path": "3"
        },
        "1852": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2806,
                3709
            ],
            "op": "POP",
            "path": "3"
        },
        "1853": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2611,
                3716
            ],
            "op": "POP",
            "path": "3"
        },
        "1854": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2611,
                3716
            ],
            "op": "POP",
            "path": "3"
        },
        "1855": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1856": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "SWAP6",
            "path": "3"
        },
        "1857": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "POP",
            "path": "3"
        },
        "1858": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "SWAP6",
            "path": "3"
        },
        "1859": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "POP",
            "path": "3"
        },
        "1860": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "SWAP6",
            "path": "3"
        },
        "1861": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "SWAP3",
            "path": "3"
        },
        "1862": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "POP",
            "path": "3"
        },
        "1863": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "POP",
            "path": "3"
        },
        "1864": {
            "fn": "Quoter.quoteSingle",
            "offset": [
                2353,
                3716
            ],
            "op": "POP",
            "path": "3"
        },
        "1865": {
            "fn": "Quoter.quoteSingle",
            "jump": "o",
            "offset": [
                2353,
                3716
            ],
            "op": "JUMP",
            "path": "3"
        },
        "1866": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                4856,
                5943
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "1867": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1869": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1870": {
            "op": "PUSH4",
            "value": "0x1C9956ED"
        },
        "1875": {
            "op": "PUSH1",
            "value": "0xE3"
        },
        "1877": {
            "op": "SHL"
        },
        "1878": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1879": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "1880": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1882": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1884": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1886": {
            "op": "SHL"
        },
        "1887": {
            "op": "SUB"
        },
        "1888": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5159,
                5166
            ],
            "op": "PUSH32",
            "path": "3",
            "value": "0x0"
        },
        "1921": {
            "op": "DUP2"
        },
        "1922": {
            "op": "AND"
        },
        "1923": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "1925": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1926": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "ADD",
            "path": "3"
        },
        "1927": {
            "op": "MSTORE"
        },
        "1928": {
            "op": "DUP1"
        },
        "1929": {
            "op": "DUP9"
        },
        "1930": {
            "op": "AND"
        },
        "1931": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1933": {
            "op": "DUP4"
        },
        "1934": {
            "op": "ADD"
        },
        "1935": {
            "op": "MSTORE"
        },
        "1936": {
            "op": "DUP7"
        },
        "1937": {
            "op": "AND"
        },
        "1938": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1940": {
            "op": "DUP3"
        },
        "1941": {
            "op": "ADD"
        },
        "1942": {
            "op": "MSTORE"
        },
        "1943": {
            "op": "PUSH3",
            "value": "0xFFFFFF"
        },
        "1947": {
            "op": "DUP6"
        },
        "1948": {
            "op": "AND"
        },
        "1949": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "1951": {
            "op": "DUP3"
        },
        "1952": {
            "op": "ADD"
        },
        "1953": {
            "op": "MSTORE"
        },
        "1954": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5074,
                5089
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "1956": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5074,
                5089
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1957": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5074,
                5089
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1958": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5074,
                5089
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1959": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5136
            ],
            "op": "PUSH20",
            "path": "3",
            "value": "0x0"
        },
        "1980": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5136
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1981": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5145
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xE4CAB768"
        },
        "1986": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5145
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "1987": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "1989": {
            "op": "ADD"
        },
        "1990": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "1992": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "1994": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "1995": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP1",
            "path": "3"
        },
        "1996": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP4",
            "path": "3"
        },
        "1997": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "SUB",
            "path": "3"
        },
        "1998": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP2",
            "path": "3"
        },
        "1999": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP7",
            "path": "3"
        },
        "2000": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "GAS",
            "path": "3"
        },
        "2001": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DELEGATECALL",
            "path": "3"
        },
        "2002": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2003": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2004": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2005": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x7E2"
        },
        "2008": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "2009": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2010": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2012": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2013": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "RETURNDATACOPY",
            "path": "3"
        },
        "2014": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2015": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2017": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "REVERT",
            "path": "3"
        },
        "2018": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2019": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "POP",
            "path": "3"
        },
        "2020": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "POP",
            "path": "3"
        },
        "2021": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "POP",
            "path": "3"
        },
        "2022": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "POP",
            "path": "3"
        },
        "2023": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2025": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2026": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2027": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "2029": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "NOT",
            "path": "3"
        },
        "2030": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "2032": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2033": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "ADD",
            "path": "3"
        },
        "2034": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "AND",
            "path": "3"
        },
        "2035": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2036": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "ADD",
            "path": "3"
        },
        "2037": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2038": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2040": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2041": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "POP",
            "path": "3"
        },
        "2042": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2043": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "ADD",
            "path": "3"
        },
        "2044": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2045": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x806"
        },
        "2048": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2049": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2050": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1788"
        },
        "2053": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                5123,
                5236
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2054": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5123,
                5236
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2055": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5101,
                5236
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2056": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5101,
                5236
            ],
            "op": "POP",
            "path": "3"
        },
        "2057": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5248,
                5268
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2059": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5270,
                5280
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2060": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5294
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2061": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2063": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2065": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2067": {
            "op": "SHL"
        },
        "2068": {
            "op": "SUB"
        },
        "2069": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5300
            ],
            "op": "AND",
            "path": "3"
        },
        "2070": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5300
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0x3850C7BD"
        },
        "2075": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2077": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2078": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2079": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xFFFFFFFF"
        },
        "2084": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "AND",
            "path": "3"
        },
        "2085": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xE0"
        },
        "2087": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "SHL",
            "path": "3"
        },
        "2088": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2089": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2090": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "2092": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "ADD",
            "path": "3"
        },
        "2093": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xA0"
        },
        "2095": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2097": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2098": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2099": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP4",
            "path": "3"
        },
        "2100": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "SUB",
            "path": "3"
        },
        "2101": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2102": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP7",
            "path": "3"
        },
        "2103": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "GAS",
            "path": "3"
        },
        "2104": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "STATICCALL",
            "path": "3"
        },
        "2105": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2106": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2107": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2108": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x849"
        },
        "2111": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "2112": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2113": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2115": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2116": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "RETURNDATACOPY",
            "path": "3"
        },
        "2117": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2118": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2120": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "REVERT",
            "path": "3"
        },
        "2121": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2122": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2123": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2124": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2125": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2126": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2128": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2129": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2130": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "2132": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "NOT",
            "path": "3"
        },
        "2133": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "2135": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2136": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "ADD",
            "path": "3"
        },
        "2137": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "AND",
            "path": "3"
        },
        "2138": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2139": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "ADD",
            "path": "3"
        },
        "2140": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2141": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2143": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2144": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2145": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2146": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "ADD",
            "path": "3"
        },
        "2147": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2148": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x86D"
        },
        "2151": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2152": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2153": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x17B7"
        },
        "2156": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                5290,
                5302
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2157": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5290,
                5302
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2158": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5247,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2159": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5247,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2160": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5247,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2161": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5247,
                5302
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2162": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5247,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2163": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5247,
                5302
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2164": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5247,
                5302
            ],
            "op": "POP",
            "path": "3"
        },
        "2165": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5324,
                5333
            ],
            "op": "DUP6",
            "path": "3"
        },
        "2166": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5333
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "2168": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5333
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "2169": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5321
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2170": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5333
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "2172": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5333
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "2173": {
            "branch": 86,
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5333
            ],
            "op": "SLT",
            "path": "3"
        },
        "2174": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5353
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2175": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5353
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2176": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5353
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x88E"
        },
        "2179": {
            "branch": 86,
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5353
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "2180": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5353
            ],
            "op": "POP",
            "path": "3"
        },
        "2181": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5344,
                5353
            ],
            "op": "DUP7",
            "path": "3"
        },
        "2182": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5337,
                5353
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "2184": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5337,
                5353
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "2185": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5337,
                5341
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2186": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5337,
                5353
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "2188": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5337,
                5353
            ],
            "op": "SIGNEXTEND",
            "path": "3"
        },
        "2189": {
            "branch": 87,
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5337,
                5353
            ],
            "op": "SGT",
            "path": "3"
        },
        "2190": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5317,
                5353
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2191": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5313,
                5937
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2192": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5313,
                5937
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x463"
        },
        "2195": {
            "branch": 87,
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5313,
                5937
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "2196": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2198": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "2200": {
            "op": "SHL"
        },
        "2201": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2203": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2205": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2207": {
            "op": "SHL"
        },
        "2208": {
            "op": "SUB"
        },
        "2209": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5467,
                5488
            ],
            "op": "DUP4",
            "path": "3",
            "statement": 14
        },
        "2210": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5467,
                5488
            ],
            "op": "AND",
            "path": "3"
        },
        "2211": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5523,
                5550
            ],
            "op": "DIV",
            "path": "8"
        },
        "2212": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "PUSH12",
            "path": "8",
            "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
        },
        "2225": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "DUP4",
            "path": "8"
        },
        "2226": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "AND",
            "path": "8"
        },
        "2227": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5568,
                5602
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "2228": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5568,
                5602
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "2229": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5502,
                5616
            ],
            "op": "ADD",
            "path": "8"
        },
        "2230": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "DUP1",
            "path": "8"
        },
        "2231": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "DUP7",
            "path": "8"
        },
        "2232": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "MOD",
            "path": "8"
        },
        "2233": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5568,
                5602
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "2234": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5568,
                5602
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "2235": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5523,
                5550
            ],
            "op": "SWAP1",
            "path": "8"
        },
        "2236": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5523,
                5550
            ],
            "op": "DUP7",
            "path": "8"
        },
        "2237": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5523,
                5550
            ],
            "op": "DIV",
            "path": "8"
        },
        "2238": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5502,
                5616
            ],
            "op": "ADD",
            "path": "8"
        },
        "2239": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5369,
                5521
            ],
            "op": "SWAP4",
            "path": "3"
        },
        "2240": {
            "op": "POP"
        },
        "2241": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5536,
                5553
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2243": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5556,
                5730
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x8D9"
        },
        "2246": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5587,
                5596
            ],
            "op": "DUP9",
            "path": "3"
        },
        "2247": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5614,
                5623
            ],
            "op": "DUP9",
            "path": "3"
        },
        "2248": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5641,
                5653
            ],
            "op": "DUP6",
            "path": "3"
        },
        "2249": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5671,
                5683
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x8D3"
        },
        "2252": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5682,
                5683
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x2"
        },
        "2254": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5369,
                5521
            ],
            "op": "DUP11",
            "path": "3"
        },
        "2255": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5671,
                5683
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1905"
        },
        "2258": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                5671,
                5683
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2259": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5671,
                5683
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2260": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5701,
                5716
            ],
            "op": "DUP11",
            "path": "3"
        },
        "2261": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5556,
                5569
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xACB"
        },
        "2264": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                5556,
                5730
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2265": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5556,
                5730
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2266": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5536,
                5730
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2267": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5536,
                5730
            ],
            "op": "POP",
            "path": "3"
        },
        "2268": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5755,
                5926
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 15,
            "value": "0x45F"
        },
        "2271": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5794,
                5806
            ],
            "op": "DUP4",
            "path": "3"
        },
        "2272": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5824,
                5862
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x8E8"
        },
        "2275": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5852,
                5861
            ],
            "op": "DUP10",
            "path": "3"
        },
        "2276": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5824,
                5851
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xAF4"
        },
        "2279": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                5824,
                5862
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2280": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5824,
                5862
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2281": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5880,
                5889
            ],
            "op": "DUP4",
            "path": "3"
        },
        "2282": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5907,
                5912
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2284": {
            "fn": "Quoter.quoteLiqInputToken1",
            "offset": [
                5755,
                5776
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xFA0"
        },
        "2287": {
            "fn": "Quoter.quoteLiqInputToken1",
            "jump": "i",
            "offset": [
                5755,
                5926
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2288": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                581,
                1236
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2289": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                727,
                739
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2291": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                753,
                757
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2292": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2293": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "2295": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "ADD",
            "path": "3"
        },
        "2296": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2297": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2298": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2299": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "ADD",
            "path": "3"
        },
        "2300": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2301": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x906"
        },
        "2304": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2305": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2306": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1788"
        },
        "2309": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "jump": "i",
            "offset": [
                742,
                769
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2310": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                742,
                769
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2311": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                727,
                769
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2312": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                727,
                769
            ],
            "op": "POP",
            "path": "3"
        },
        "2313": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                779,
                796
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2315": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                814,
                815
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2316": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                799,
                811
            ],
            "op": "DUP6",
            "path": "3"
        },
        "2317": {
            "branch": 88,
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                799,
                815
            ],
            "op": "SGT",
            "path": "3"
        },
        "2318": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                799,
                889
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x91F"
        },
        "2321": {
            "branch": 88,
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                799,
                889
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "2322": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                875,
                888
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x91A"
        },
        "2325": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                876,
                888
            ],
            "op": "DUP6",
            "path": "3"
        },
        "2326": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                875,
                888
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1A3C"
        },
        "2329": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "jump": "i",
            "offset": [
                875,
                888
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2330": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                875,
                888
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2331": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                799,
                889
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x928"
        },
        "2334": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                799,
                889
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2335": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                799,
                889
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2336": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                838,
                851
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x928"
        },
        "2339": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                839,
                851
            ],
            "op": "DUP5",
            "path": "3"
        },
        "2340": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                838,
                851
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1A3C"
        },
        "2343": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "jump": "i",
            "offset": [
                838,
                851
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2344": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                838,
                851
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2345": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                779,
                889
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2346": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                779,
                889
            ],
            "op": "POP",
            "path": "3"
        },
        "2347": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                900,
                925
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2349": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                927,
                942
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2350": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                980,
                984
            ],
            "op": "DUP4",
            "path": "3"
        },
        "2351": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2353": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2355": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2357": {
            "op": "SHL"
        },
        "2358": {
            "op": "SUB"
        },
        "2359": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1000
            ],
            "op": "AND",
            "path": "3"
        },
        "2360": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1000
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0x3850C7BD"
        },
        "2365": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2367": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2368": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2369": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH4",
            "path": "3",
            "value": "0xFFFFFFFF"
        },
        "2374": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "AND",
            "path": "3"
        },
        "2375": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xE0"
        },
        "2377": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "SHL",
            "path": "3"
        },
        "2378": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2379": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2380": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x4"
        },
        "2382": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "ADD",
            "path": "3"
        },
        "2383": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xA0"
        },
        "2385": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2387": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2388": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2389": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP4",
            "path": "3"
        },
        "2390": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "SUB",
            "path": "3"
        },
        "2391": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2392": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP7",
            "path": "3"
        },
        "2393": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "GAS",
            "path": "3"
        },
        "2394": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "STATICCALL",
            "path": "3"
        },
        "2395": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2396": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2397": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "2398": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x96B"
        },
        "2401": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "2402": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2403": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2405": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2406": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "RETURNDATACOPY",
            "path": "3"
        },
        "2407": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2408": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2410": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "REVERT",
            "path": "3"
        },
        "2411": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2412": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2413": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2414": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2415": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2416": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2418": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2419": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "RETURNDATASIZE",
            "path": "3"
        },
        "2420": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "2422": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "NOT",
            "path": "3"
        },
        "2423": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "2425": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2426": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "ADD",
            "path": "3"
        },
        "2427": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "AND",
            "path": "3"
        },
        "2428": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2429": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "ADD",
            "path": "3"
        },
        "2430": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP1",
            "path": "3"
        },
        "2431": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2433": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2434": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2435": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2436": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "ADD",
            "path": "3"
        },
        "2437": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2438": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x98F"
        },
        "2441": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2442": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "2443": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x17B7"
        },
        "2446": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "jump": "i",
            "offset": [
                952,
                1002
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2447": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                952,
                1002
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2448": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                899,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2449": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                899,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2450": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                899,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2451": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                899,
                1002
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2452": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                899,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2453": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                899,
                1002
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "2454": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                899,
                1002
            ],
            "op": "POP",
            "path": "3"
        },
        "2455": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1052,
                1056
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2457": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1046,
                1057
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "2458": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1082,
                1091
            ],
            "op": "DUP4",
            "path": "3"
        },
        "2459": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1077,
                1080
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2460": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1070,
                1092
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2461": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1128,
                1145
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2462": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1121,
                1125
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "2464": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1116,
                1119
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2465": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1112,
                1126
            ],
            "op": "ADD",
            "path": "3"
        },
        "2466": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1105,
                1146
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2467": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1182,
                1191
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2468": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1175,
                1179
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "2470": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1170,
                1173
            ],
            "op": "DUP3",
            "path": "3"
        },
        "2471": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1166,
                1180
            ],
            "op": "ADD",
            "path": "3"
        },
        "2472": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1159,
                1192
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "2473": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1217,
                1219
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x60"
        },
        "2475": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1212,
                1215
            ],
            "op": "DUP2",
            "path": "3"
        },
        "2476": {
            "fn": "Quoter.uniswapV3SwapCallback",
            "offset": [
                1205,
                1220
            ],
            "op": "REVERT",
            "path": "3"
        },
        "2477": {
            "fn": "Path.numPools",
            "offset": [
                1327,
                1459
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2478": {
            "fn": "Path.numPools",
            "offset": [
                1387,
                1394
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x0"
        },
        "2480": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x9BB"
        },
        "2483": {
            "offset": [
                748,
                749
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "2485": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2487": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2490": {
            "fn": "Path.numPools",
            "jump": "i",
            "offset": [
                851,
                871
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2491": {
            "fn": "Path.numPools",
            "offset": [
                851,
                871
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2492": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2494": {
            "fn": "Path.numPools",
            "offset": [
                1414,
                1418
            ],
            "op": "DUP4",
            "path": "10",
            "statement": 16
        },
        "2495": {
            "fn": "Path.numPools",
            "offset": [
                1414,
                1425
            ],
            "op": "MLOAD",
            "path": "10"
        },
        "2496": {
            "fn": "Path.numPools",
            "offset": [
                1414,
                1437
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x9C9"
        },
        "2499": {
            "fn": "Path.numPools",
            "offset": [
                1414,
                1437
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2500": {
            "fn": "Path.numPools",
            "offset": [
                1414,
                1437
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2501": {
            "fn": "Path.numPools",
            "offset": [
                1414,
                1437
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A6B"
        },
        "2504": {
            "fn": "Path.numPools",
            "jump": "i",
            "offset": [
                1414,
                1437
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2505": {
            "fn": "Path.numPools",
            "offset": [
                1414,
                1437
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2506": {
            "fn": "Path.numPools",
            "offset": [
                1413,
                1452
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x9D3"
        },
        "2509": {
            "fn": "Path.numPools",
            "offset": [
                1413,
                1452
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2510": {
            "fn": "Path.numPools",
            "offset": [
                1413,
                1452
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2511": {
            "fn": "Path.numPools",
            "offset": [
                1413,
                1452
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A94"
        },
        "2514": {
            "fn": "Path.numPools",
            "jump": "i",
            "offset": [
                1413,
                1452
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2515": {
            "fn": "Path.numPools",
            "offset": [
                1413,
                1452
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2516": {
            "fn": "Path.numPools",
            "offset": [
                1406,
                1452
            ],
            "op": "SWAP3",
            "path": "10"
        },
        "2517": {
            "fn": "Path.numPools",
            "offset": [
                1327,
                1459
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2518": {
            "op": "POP"
        },
        "2519": {
            "op": "POP"
        },
        "2520": {
            "fn": "Path.numPools",
            "jump": "o",
            "offset": [
                1327,
                1459
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2521": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1781,
                2101
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2522": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1885,
                1900
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x0"
        },
        "2524": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1885,
                1900
            ],
            "op": "DUP1",
            "path": "10"
        },
        "2525": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1885,
                1900
            ],
            "op": "DUP1",
            "path": "10"
        },
        "2526": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1989,
                2006
            ],
            "op": "PUSH2",
            "path": "10",
            "statement": 17,
            "value": "0x9E7"
        },
        "2529": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1989,
                1993
            ],
            "op": "DUP5",
            "path": "10"
        },
        "2530": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1885,
                1900
            ],
            "op": "DUP3",
            "path": "10"
        },
        "2531": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1989,
                2003
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1075"
        },
        "2534": {
            "fn": "Path.decodeFirstPool",
            "jump": "i",
            "offset": [
                1989,
                2006
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2535": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1989,
                2006
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2536": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1979,
                2006
            ],
            "op": "SWAP3",
            "path": "10"
        },
        "2537": {
            "op": "POP"
        },
        "2538": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2022,
                2046
            ],
            "op": "PUSH2",
            "path": "10",
            "statement": 18,
            "value": "0x9F4"
        },
        "2541": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2022,
                2026
            ],
            "op": "DUP5",
            "path": "10"
        },
        "2542": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2544": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2022,
                2035
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x10DA"
        },
        "2547": {
            "fn": "Path.decodeFirstPool",
            "jump": "i",
            "offset": [
                2022,
                2046
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2548": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2022,
                2046
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2549": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2016,
                2046
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2550": {
            "op": "POP"
        },
        "2551": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2067,
                2094
            ],
            "op": "PUSH2",
            "path": "10",
            "statement": 19,
            "value": "0xA0C"
        },
        "2554": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA05"
        },
        "2557": {
            "offset": [
                748,
                749
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "2559": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2561": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2564": {
            "fn": "Path.decodeFirstPool",
            "jump": "i",
            "offset": [
                851,
                871
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2565": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                851,
                871
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2566": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2067,
                2071
            ],
            "op": "DUP6",
            "path": "10"
        },
        "2567": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2067,
                2071
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2568": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2067,
                2081
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1075"
        },
        "2571": {
            "fn": "Path.decodeFirstPool",
            "jump": "i",
            "offset": [
                2067,
                2094
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2572": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2067,
                2094
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2573": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2056,
                2094
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2574": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                2056,
                2094
            ],
            "op": "POP",
            "path": "10"
        },
        "2575": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1781,
                2101
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2576": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1781,
                2101
            ],
            "op": "SWAP4",
            "path": "10"
        },
        "2577": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1781,
                2101
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2578": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1781,
                2101
            ],
            "op": "SWAP3",
            "path": "10"
        },
        "2579": {
            "fn": "Path.decodeFirstPool",
            "offset": [
                1781,
                2101
            ],
            "op": "POP",
            "path": "10"
        },
        "2580": {
            "fn": "Path.decodeFirstPool",
            "jump": "o",
            "offset": [
                1781,
                2101
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2581": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1183,
                1321
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2582": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1251,
                1255
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x0"
        },
        "2584": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA23"
        },
        "2587": {
            "offset": [
                748,
                749
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "2589": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2591": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2594": {
            "fn": "Path.hasMultiplePools",
            "jump": "i",
            "offset": [
                851,
                871
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2595": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                851,
                871
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2596": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2598": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA30"
        },
        "2601": {
            "offset": [
                748,
                749
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "2603": {
            "offset": [
                658,
                660
            ],
            "op": "DUP3",
            "path": "10"
        },
        "2604": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2607": {
            "fn": "Path.hasMultiplePools",
            "jump": "i",
            "offset": [
                851,
                871
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2608": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                851,
                871
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2609": {
            "offset": [
                989,
                1012
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA3A"
        },
        "2612": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                989,
                1012
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2613": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                989,
                1012
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2614": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                989,
                1012
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2617": {
            "fn": "Path.hasMultiplePools",
            "jump": "i",
            "offset": [
                989,
                1012
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2618": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                989,
                1012
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2619": {
            "offset": [
                1152,
                1176
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA44"
        },
        "2622": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1152,
                1176
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2623": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1152,
                1176
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2624": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1152,
                1176
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2627": {
            "fn": "Path.hasMultiplePools",
            "jump": "i",
            "offset": [
                1152,
                1176
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2628": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1152,
                1176
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2629": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1274,
                1278
            ],
            "op": "DUP3",
            "path": "10",
            "statement": 20
        },
        "2630": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1274,
                1285
            ],
            "op": "MLOAD",
            "path": "10"
        },
        "2631": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1274,
                1314
            ],
            "op": "LT",
            "path": "10"
        },
        "2632": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1274,
                1314
            ],
            "op": "ISZERO",
            "path": "10"
        },
        "2633": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1267,
                1314
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2634": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1267,
                1314
            ],
            "op": "POP",
            "path": "10"
        },
        "2635": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1183,
                1321
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2636": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1183,
                1321
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2637": {
            "fn": "Path.hasMultiplePools",
            "offset": [
                1183,
                1321
            ],
            "op": "POP",
            "path": "10"
        },
        "2638": {
            "fn": "Path.hasMultiplePools",
            "jump": "o",
            "offset": [
                1183,
                1321
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2639": {
            "fn": "Path.skipToken",
            "offset": [
                1626,
                1775
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2640": {
            "fn": "Path.skipToken",
            "offset": [
                1687,
                1699
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x60"
        },
        "2642": {
            "fn": "Path.skipToken",
            "offset": [
                1718,
                1768
            ],
            "op": "PUSH2",
            "path": "10",
            "statement": 21,
            "value": "0x9D3"
        },
        "2645": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA60"
        },
        "2648": {
            "offset": [
                748,
                749
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "2650": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2652": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2655": {
            "fn": "Path.skipToken",
            "jump": "i",
            "offset": [
                851,
                871
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2656": {
            "fn": "Path.skipToken",
            "offset": [
                851,
                871
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2657": {
            "fn": "Path.skipToken",
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA6C"
        },
        "2660": {
            "offset": [
                748,
                749
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "2662": {
            "offset": [
                658,
                660
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x14"
        },
        "2664": {
            "offset": [
                851,
                871
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "2667": {
            "fn": "Path.skipToken",
            "jump": "i",
            "offset": [
                851,
                871
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2668": {
            "fn": "Path.skipToken",
            "offset": [
                851,
                871
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2669": {
            "fn": "Path.skipToken",
            "offset": [
                1742,
                1746
            ],
            "op": "DUP5",
            "path": "10"
        },
        "2670": {
            "fn": "Path.skipToken",
            "offset": [
                1742,
                1753
            ],
            "op": "MLOAD",
            "path": "10"
        },
        "2671": {
            "fn": "Path.skipToken",
            "offset": [
                1742,
                1767
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0xA78"
        },
        "2674": {
            "fn": "Path.skipToken",
            "offset": [
                1742,
                1767
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2675": {
            "fn": "Path.skipToken",
            "offset": [
                1742,
                1767
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2676": {
            "fn": "Path.skipToken",
            "offset": [
                1742,
                1767
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A6B"
        },
        "2679": {
            "fn": "Path.skipToken",
            "jump": "i",
            "offset": [
                1742,
                1767
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2680": {
            "fn": "Path.skipToken",
            "offset": [
                1742,
                1767
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "2681": {
            "fn": "Path.skipToken",
            "offset": [
                1718,
                1722
            ],
            "op": "DUP5",
            "path": "10"
        },
        "2682": {
            "fn": "Path.skipToken",
            "offset": [
                1718,
                1722
            ],
            "op": "SWAP2",
            "path": "10"
        },
        "2683": {
            "fn": "Path.skipToken",
            "offset": [
                1718,
                1768
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "2684": {
            "fn": "Path.skipToken",
            "offset": [
                1718,
                1728
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1137"
        },
        "2687": {
            "fn": "Path.skipToken",
            "jump": "i",
            "offset": [
                1718,
                1768
            ],
            "op": "JUMP",
            "path": "10"
        },
        "2688": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5006,
                5329
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "2689": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5128,
                5142
            ],
            "op": "PUSH1",
            "path": "8",
            "value": "0x0"
        },
        "2691": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5163,
                5196
            ],
            "op": "PUSH2",
            "path": "8",
            "statement": 22,
            "value": "0xA8D"
        },
        "2694": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5178,
                5179
            ],
            "op": "DUP5",
            "path": "8"
        },
        "2695": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5181,
                5182
            ],
            "op": "DUP5",
            "path": "8"
        },
        "2696": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5184,
                5195
            ],
            "op": "DUP5",
            "path": "8"
        },
        "2697": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5163,
                5177
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1244"
        },
        "2700": {
            "fn": "Math.mulDivRoundingUp",
            "jump": "i",
            "offset": [
                5163,
                5196
            ],
            "op": "JUMP",
            "path": "8"
        },
        "2701": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5163,
                5196
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "2702": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5154,
                5196
            ],
            "op": "SWAP1",
            "path": "8"
        },
        "2703": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5154,
                5196
            ],
            "op": "POP",
            "path": "8"
        },
        "2704": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5238,
                5239
            ],
            "op": "PUSH1",
            "path": "8",
            "value": "0x0"
        },
        "2706": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5223,
                5234
            ],
            "op": "DUP3",
            "path": "8"
        },
        "2707": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5235
            ],
            "op": "DUP1",
            "path": "8"
        },
        "2708": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5235
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xA9F"
        },
        "2711": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5235
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "2712": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5235
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xA9F"
        },
        "2715": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5235
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1A7E"
        },
        "2718": {
            "fn": "Math.mulDivRoundingUp",
            "jump": "i",
            "offset": [
                5210,
                5235
            ],
            "op": "JUMP",
            "path": "8"
        },
        "2719": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5235
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "2720": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5220,
                5221
            ],
            "op": "DUP5",
            "path": "8"
        },
        "2721": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5217,
                5218
            ],
            "op": "DUP7",
            "path": "8"
        },
        "2722": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5235
            ],
            "op": "MULMOD",
            "path": "8"
        },
        "2723": {
            "branch": 99,
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5210,
                5239
            ],
            "op": "GT",
            "path": "8"
        },
        "2724": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5206,
                5323
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "2725": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5206,
                5323
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xAC4"
        },
        "2728": {
            "branch": 99,
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5206,
                5323
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "2729": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2731": {
            "op": "NOT"
        },
        "2732": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5263,
                5269
            ],
            "op": "DUP2",
            "path": "8",
            "statement": 23
        },
        "2733": {
            "branch": 100,
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5263,
                5289
            ],
            "op": "LT",
            "path": "8"
        },
        "2734": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5255,
                5290
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xAB6"
        },
        "2737": {
            "branch": 100,
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5255,
                5290
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "2738": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5255,
                5290
            ],
            "op": "PUSH1",
            "path": "8",
            "value": "0x0"
        },
        "2740": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5255,
                5290
            ],
            "op": "DUP1",
            "path": "8"
        },
        "2741": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5255,
                5290
            ],
            "op": "REVERT",
            "path": "8"
        },
        "2742": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5255,
                5290
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "2743": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "DUP1",
            "path": "8",
            "statement": 24
        },
        "2744": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xAC0"
        },
        "2747": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "DUP2",
            "path": "8"
        },
        "2748": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x176F"
        },
        "2751": {
            "fn": "Math.mulDivRoundingUp",
            "jump": "i",
            "offset": [
                5304,
                5312
            ],
            "op": "JUMP",
            "path": "8"
        },
        "2752": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "2753": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "SWAP2",
            "path": "8"
        },
        "2754": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "POP",
            "path": "8"
        },
        "2755": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5304,
                5312
            ],
            "op": "POP",
            "path": "8"
        },
        "2756": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5206,
                5323
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "2757": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5006,
                5329
            ],
            "op": "SWAP4",
            "path": "8"
        },
        "2758": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5006,
                5329
            ],
            "op": "SWAP3",
            "path": "8"
        },
        "2759": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5006,
                5329
            ],
            "op": "POP",
            "path": "8"
        },
        "2760": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5006,
                5329
            ],
            "op": "POP",
            "path": "8"
        },
        "2761": {
            "fn": "Math.mulDivRoundingUp",
            "offset": [
                5006,
                5329
            ],
            "op": "POP",
            "path": "8"
        },
        "2762": {
            "fn": "Math.mulDivRoundingUp",
            "jump": "o",
            "offset": [
                5006,
                5329
            ],
            "op": "JUMP",
            "path": "8"
        },
        "2763": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                5984,
                6466
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2764": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6183,
                6200
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "2766": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6224,
                6459
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 25,
            "value": "0xAEA"
        },
        "2769": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6274,
                6286
            ],
            "op": "DUP5",
            "path": "3"
        },
        "2770": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6300,
                6338
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xADA"
        },
        "2773": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6328,
                6337
            ],
            "op": "DUP9",
            "path": "3"
        },
        "2774": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6300,
                6327
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xAF4"
        },
        "2777": {
            "fn": "Quoter._getLiquidity",
            "jump": "i",
            "offset": [
                6300,
                6338
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2778": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6300,
                6338
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2779": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6352,
                6390
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xAE3"
        },
        "2782": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6380,
                6389
            ],
            "op": "DUP9",
            "path": "3"
        },
        "2783": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6352,
                6379
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0xAF4"
        },
        "2786": {
            "fn": "Quoter._getLiquidity",
            "jump": "i",
            "offset": [
                6352,
                6390
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2787": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6352,
                6390
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2788": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6404,
                6419
            ],
            "op": "DUP7",
            "path": "3"
        },
        "2789": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6433,
                6449
            ],
            "op": "DUP7",
            "path": "3"
        },
        "2790": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6224,
                6260
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1311"
        },
        "2793": {
            "fn": "Quoter._getLiquidity",
            "jump": "i",
            "offset": [
                6224,
                6459
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2794": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6224,
                6459
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "2795": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                6212,
                6459
            ],
            "op": "SWAP7",
            "path": "3"
        },
        "2796": {
            "fn": "Quoter._getLiquidity",
            "offset": [
                5984,
                6466
            ],
            "op": "SWAP6",
            "path": "3"
        },
        "2797": {
            "op": "POP"
        },
        "2798": {
            "op": "POP"
        },
        "2799": {
            "op": "POP"
        },
        "2800": {
            "op": "POP"
        },
        "2801": {
            "op": "POP"
        },
        "2802": {
            "op": "POP"
        },
        "2803": {
            "fn": "Quoter._getLiquidity",
            "jump": "o",
            "offset": [
                5984,
                6466
            ],
            "op": "JUMP",
            "path": "3"
        },
        "2804": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1355,
                3943
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "2805": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1418,
                1438
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x0"
        },
        "2807": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1450,
                1465
            ],
            "op": "DUP1",
            "path": "16"
        },
        "2808": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1475,
                1476
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x0"
        },
        "2810": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1472
            ],
            "op": "DUP4",
            "path": "16"
        },
        "2811": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1476
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x2"
        },
        "2813": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1476
            ],
            "op": "SIGNEXTEND",
            "path": "16"
        },
        "2814": {
            "branch": 108,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1476
            ],
            "op": "SLT",
            "path": "16"
        },
        "2815": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1525
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xB0B"
        },
        "2818": {
            "branch": 108,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1525
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "2819": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1519,
                1523
            ],
            "op": "DUP3",
            "path": "16"
        },
        "2820": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1512,
                1524
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x2"
        },
        "2822": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1512,
                1524
            ],
            "op": "SIGNEXTEND",
            "path": "16"
        },
        "2823": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1525
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xB18"
        },
        "2826": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1525
            ],
            "op": "JUMP",
            "path": "16"
        },
        "2827": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1468,
                1525
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "2828": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1495,
                1499
            ],
            "op": "DUP3",
            "path": "16"
        },
        "2829": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1488,
                1500
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x2"
        },
        "2831": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1488,
                1500
            ],
            "op": "SIGNEXTEND",
            "path": "16"
        },
        "2832": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1487,
                1500
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xB18"
        },
        "2835": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1487,
                1500
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "2836": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1487,
                1500
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1A3C"
        },
        "2839": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                1487,
                1500
            ],
            "op": "JUMP",
            "path": "16"
        },
        "2840": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1487,
                1500
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "2841": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1450,
                1525
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "2842": {
            "op": "POP"
        },
        "2843": {
            "offset": [
                637,
                646
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xB27"
        },
        "2846": {
            "op": "PUSH3",
            "value": "0xD89E7"
        },
        "2850": {
            "op": "NOT"
        },
        "2851": {
            "offset": [
                637,
                646
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1AA8"
        },
        "2854": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                637,
                646
            ],
            "op": "JUMP",
            "path": "16"
        },
        "2855": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                637,
                646
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "2856": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1554,
                1579
            ],
            "op": "PUSH3",
            "path": "16",
            "statement": 26,
            "value": "0xFFFFFF"
        },
        "2860": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1554,
                1579
            ],
            "op": "AND",
            "path": "16"
        },
        "2861": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1543,
                1550
            ],
            "op": "DUP2",
            "path": "16"
        },
        "2862": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1543,
                1579
            ],
            "op": "GT",
            "path": "16"
        },
        "2863": {
            "branch": 109,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1543,
                1579
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "2864": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xB5F"
        },
        "2867": {
            "branch": 109,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "2868": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x40"
        },
        "2870": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "MLOAD",
            "path": "16"
        },
        "2871": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2875": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2877": {
            "op": "SHL"
        },
        "2878": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "DUP2",
            "path": "16"
        },
        "2879": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "MSTORE",
            "path": "16"
        },
        "2880": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2882": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x4"
        },
        "2884": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "DUP3",
            "path": "16"
        },
        "2885": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "ADD",
            "path": "16"
        },
        "2886": {
            "op": "MSTORE"
        },
        "2887": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2889": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2891": {
            "op": "DUP3"
        },
        "2892": {
            "op": "ADD"
        },
        "2893": {
            "op": "MSTORE"
        },
        "2894": {
            "op": "PUSH1",
            "value": "0x15"
        },
        "2896": {
            "op": "PUSH1",
            "value": "0xFA"
        },
        "2898": {
            "op": "SHL"
        },
        "2899": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2901": {
            "op": "DUP3"
        },
        "2902": {
            "op": "ADD"
        },
        "2903": {
            "op": "MSTORE"
        },
        "2904": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2906": {
            "op": "ADD"
        },
        "2907": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x69D"
        },
        "2910": {
            "op": "JUMP"
        },
        "2911": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1535,
                1585
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "2912": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1596,
                1609
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x0"
        },
        "2914": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1619
            ],
            "op": "DUP2",
            "path": "16"
        },
        "2915": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1622,
                1625
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x1"
        },
        "2917": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1625
            ],
            "op": "AND",
            "path": "16"
        },
        "2918": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1629,
                1630
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x0"
        },
        "2920": {
            "branch": 110,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1630
            ],
            "op": "SUB",
            "path": "16"
        },
        "2921": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1705
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xB76"
        },
        "2924": {
            "branch": 110,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1705
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "2925": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2927": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "2929": {
            "op": "SHL"
        },
        "2930": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1705
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xB88"
        },
        "2933": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1705
            ],
            "op": "JUMP",
            "path": "16"
        },
        "2934": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1705
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "2935": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1633,
                1667
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFFFCB933BD6FAD37AA2D162D1A594001"
        },
        "2952": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1612,
                1705
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "2953": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1596,
                1705
            ],
            "op": "PUSH17",
            "path": "16",
            "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        },
        "2971": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1596,
                1705
            ],
            "op": "AND",
            "path": "16"
        },
        "2972": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1596,
                1705
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "2973": {
            "op": "POP"
        },
        "2974": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1729,
                1732
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x2"
        },
        "2976": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1719,
                1732
            ],
            "op": "DUP3",
            "path": "16"
        },
        "2977": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1719,
                1732
            ],
            "op": "AND",
            "path": "16"
        },
        "2978": {
            "branch": 111,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1719,
                1737
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "2979": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1715,
                1798
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xBC7"
        },
        "2982": {
            "branch": 111,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1715,
                1798
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "2983": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1795,
                1798
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 27,
            "value": "0x80"
        },
        "2985": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1748,
                1790
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xBC2"
        },
        "2988": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1748,
                1753
            ],
            "op": "DUP3",
            "path": "16"
        },
        "2989": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1756,
                1790
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFFF97272373D413259A46990580E213A"
        },
        "3006": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1748,
                1790
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3009": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                1748,
                1790
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3010": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1748,
                1790
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3011": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1747,
                1798
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3012": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1747,
                1798
            ],
            "op": "SHR",
            "path": "16"
        },
        "3013": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1739,
                1798
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3014": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1739,
                1798
            ],
            "op": "POP",
            "path": "16"
        },
        "3015": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1715,
                1798
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3016": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1822,
                1825
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x4"
        },
        "3018": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1812,
                1825
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3019": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1812,
                1825
            ],
            "op": "AND",
            "path": "16"
        },
        "3020": {
            "branch": 112,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1812,
                1830
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3021": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1808,
                1891
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xBF1"
        },
        "3024": {
            "branch": 112,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1808,
                1891
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3025": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1888,
                1891
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 28,
            "value": "0x80"
        },
        "3027": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1841,
                1883
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xBEC"
        },
        "3030": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1841,
                1846
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3031": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1849,
                1883
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFFF2E50F5F656932EF12357CF3C7FDCC"
        },
        "3048": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1841,
                1883
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3051": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                1841,
                1883
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3052": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1841,
                1883
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3053": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1840,
                1891
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3054": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1840,
                1891
            ],
            "op": "SHR",
            "path": "16"
        },
        "3055": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1832,
                1891
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3056": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1832,
                1891
            ],
            "op": "POP",
            "path": "16"
        },
        "3057": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1808,
                1891
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3058": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1915,
                1918
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x8"
        },
        "3060": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1905,
                1918
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3061": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1905,
                1918
            ],
            "op": "AND",
            "path": "16"
        },
        "3062": {
            "branch": 113,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1905,
                1923
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3063": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1901,
                1984
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC1B"
        },
        "3066": {
            "branch": 113,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1901,
                1984
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3067": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1981,
                1984
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 29,
            "value": "0x80"
        },
        "3069": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1934,
                1976
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC16"
        },
        "3072": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1934,
                1939
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3073": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1942,
                1976
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFFE5CACA7E10E4E61C3624EAA0941CD0"
        },
        "3090": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1934,
                1976
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3093": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                1934,
                1976
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3094": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1934,
                1976
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3095": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1933,
                1984
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3096": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1933,
                1984
            ],
            "op": "SHR",
            "path": "16"
        },
        "3097": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1925,
                1984
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3098": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1925,
                1984
            ],
            "op": "POP",
            "path": "16"
        },
        "3099": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1901,
                1984
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3100": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2008,
                2012
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x10"
        },
        "3102": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1998,
                2012
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3103": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1998,
                2012
            ],
            "op": "AND",
            "path": "16"
        },
        "3104": {
            "branch": 114,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1998,
                2017
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3105": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1994,
                2078
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC45"
        },
        "3108": {
            "branch": 114,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1994,
                2078
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3109": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2075,
                2078
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 30,
            "value": "0x80"
        },
        "3111": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2028,
                2070
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC40"
        },
        "3114": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2028,
                2033
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3115": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2036,
                2070
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFFCB9843D60F6159C9DB58835C926644"
        },
        "3132": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2028,
                2070
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3135": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2028,
                2070
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3136": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2028,
                2070
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3137": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2027,
                2078
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3138": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2027,
                2078
            ],
            "op": "SHR",
            "path": "16"
        },
        "3139": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2019,
                2078
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3140": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2019,
                2078
            ],
            "op": "POP",
            "path": "16"
        },
        "3141": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1994,
                2078
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3142": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2102,
                2106
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x20"
        },
        "3144": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2092,
                2106
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3145": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2092,
                2106
            ],
            "op": "AND",
            "path": "16"
        },
        "3146": {
            "branch": 115,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2092,
                2111
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3147": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2088,
                2172
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC6F"
        },
        "3150": {
            "branch": 115,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2088,
                2172
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3151": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2169,
                2172
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 31,
            "value": "0x80"
        },
        "3153": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2122,
                2164
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC6A"
        },
        "3156": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2122,
                2127
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3157": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2130,
                2164
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFF973B41FA98C081472E6896DFB254C0"
        },
        "3174": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2122,
                2164
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3177": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2122,
                2164
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3178": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2122,
                2164
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3179": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2121,
                2172
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3180": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2121,
                2172
            ],
            "op": "SHR",
            "path": "16"
        },
        "3181": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2113,
                2172
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3182": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2113,
                2172
            ],
            "op": "POP",
            "path": "16"
        },
        "3183": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2088,
                2172
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3184": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2196,
                2200
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x40"
        },
        "3186": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2186,
                2200
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3187": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2186,
                2200
            ],
            "op": "AND",
            "path": "16"
        },
        "3188": {
            "branch": 116,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2186,
                2205
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3189": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2182,
                2266
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC99"
        },
        "3192": {
            "branch": 116,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2182,
                2266
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3193": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2263,
                2266
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 32,
            "value": "0x80"
        },
        "3195": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2216,
                2258
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xC94"
        },
        "3198": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2216,
                2221
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3199": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2224,
                2258
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFF2EA16466C96A3843EC78B326B52861"
        },
        "3216": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2216,
                2258
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3219": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2216,
                2258
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3220": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2216,
                2258
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3221": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2215,
                2266
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3222": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2215,
                2266
            ],
            "op": "SHR",
            "path": "16"
        },
        "3223": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2207,
                2266
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3224": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2207,
                2266
            ],
            "op": "POP",
            "path": "16"
        },
        "3225": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2182,
                2266
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3226": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2290,
                2294
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x80"
        },
        "3228": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2280,
                2294
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3229": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2280,
                2294
            ],
            "op": "AND",
            "path": "16"
        },
        "3230": {
            "branch": 117,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2280,
                2299
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3231": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2276,
                2360
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xCC3"
        },
        "3234": {
            "branch": 117,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2276,
                2360
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3235": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2357,
                2360
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 33,
            "value": "0x80"
        },
        "3237": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2310,
                2352
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xCBE"
        },
        "3240": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2310,
                2315
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3241": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2318,
                2352
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFE5DEE046A99A2A811C461F1969C3053"
        },
        "3258": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2310,
                2352
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3261": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2310,
                2352
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3262": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2310,
                2352
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3263": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2309,
                2360
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3264": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2309,
                2360
            ],
            "op": "SHR",
            "path": "16"
        },
        "3265": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2301,
                2360
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3266": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2301,
                2360
            ],
            "op": "POP",
            "path": "16"
        },
        "3267": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2276,
                2360
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3268": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2384,
                2389
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x100"
        },
        "3271": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2374,
                2389
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3272": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2374,
                2389
            ],
            "op": "AND",
            "path": "16"
        },
        "3273": {
            "branch": 118,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2374,
                2394
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3274": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2370,
                2455
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xCEE"
        },
        "3277": {
            "branch": 118,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2370,
                2455
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3278": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2452,
                2455
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 34,
            "value": "0x80"
        },
        "3280": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2405,
                2447
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xCE9"
        },
        "3283": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2405,
                2410
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3284": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2413,
                2447
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xFCBE86C7900A88AEDCFFC83B479AA3A4"
        },
        "3301": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2405,
                2447
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3304": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2405,
                2447
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3305": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2405,
                2447
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3306": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2404,
                2455
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3307": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2404,
                2455
            ],
            "op": "SHR",
            "path": "16"
        },
        "3308": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2396,
                2455
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3309": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2396,
                2455
            ],
            "op": "POP",
            "path": "16"
        },
        "3310": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2370,
                2455
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3311": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2479,
                2484
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x200"
        },
        "3314": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2469,
                2484
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3315": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2469,
                2484
            ],
            "op": "AND",
            "path": "16"
        },
        "3316": {
            "branch": 119,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2469,
                2489
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3317": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2465,
                2550
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD19"
        },
        "3320": {
            "branch": 119,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2465,
                2550
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3321": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2547,
                2550
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 35,
            "value": "0x80"
        },
        "3323": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2500,
                2542
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD14"
        },
        "3326": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2500,
                2505
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3327": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2508,
                2542
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xF987A7253AC413176F2B074CF7815E54"
        },
        "3344": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2500,
                2542
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3347": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2500,
                2542
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3348": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2500,
                2542
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3349": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2499,
                2550
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3350": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2499,
                2550
            ],
            "op": "SHR",
            "path": "16"
        },
        "3351": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2491,
                2550
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3352": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2491,
                2550
            ],
            "op": "POP",
            "path": "16"
        },
        "3353": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2465,
                2550
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3354": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2574,
                2579
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x400"
        },
        "3357": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2564,
                2579
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3358": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2564,
                2579
            ],
            "op": "AND",
            "path": "16"
        },
        "3359": {
            "branch": 120,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2564,
                2584
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3360": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2560,
                2645
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD44"
        },
        "3363": {
            "branch": 120,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2560,
                2645
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3364": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2642,
                2645
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 36,
            "value": "0x80"
        },
        "3366": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2595,
                2637
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD3F"
        },
        "3369": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2595,
                2600
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3370": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2603,
                2637
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xF3392B0822B70005940C7A398E4B70F3"
        },
        "3387": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2595,
                2637
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3390": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2595,
                2637
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3391": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2595,
                2637
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3392": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2594,
                2645
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3393": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2594,
                2645
            ],
            "op": "SHR",
            "path": "16"
        },
        "3394": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2586,
                2645
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3395": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2586,
                2645
            ],
            "op": "POP",
            "path": "16"
        },
        "3396": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2560,
                2645
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3397": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2669,
                2674
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x800"
        },
        "3400": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2659,
                2674
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3401": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2659,
                2674
            ],
            "op": "AND",
            "path": "16"
        },
        "3402": {
            "branch": 121,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2659,
                2679
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3403": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2655,
                2740
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD6F"
        },
        "3406": {
            "branch": 121,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2655,
                2740
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3407": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2737,
                2740
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 37,
            "value": "0x80"
        },
        "3409": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2690,
                2732
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD6A"
        },
        "3412": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2690,
                2695
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3413": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2698,
                2732
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xE7159475A2C29B7443B29C7FA6E889D9"
        },
        "3430": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2690,
                2732
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3433": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2690,
                2732
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3434": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2690,
                2732
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3435": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2689,
                2740
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3436": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2689,
                2740
            ],
            "op": "SHR",
            "path": "16"
        },
        "3437": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2681,
                2740
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3438": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2681,
                2740
            ],
            "op": "POP",
            "path": "16"
        },
        "3439": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2655,
                2740
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3440": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2764,
                2770
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1000"
        },
        "3443": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2754,
                2770
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3444": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2754,
                2770
            ],
            "op": "AND",
            "path": "16"
        },
        "3445": {
            "branch": 122,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2754,
                2775
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3446": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2750,
                2836
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD9A"
        },
        "3449": {
            "branch": 122,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2750,
                2836
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3450": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2833,
                2836
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 38,
            "value": "0x80"
        },
        "3452": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2786,
                2828
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xD95"
        },
        "3455": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2786,
                2791
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3456": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2794,
                2828
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xD097F3BDFD2022B8845AD8F792AA5825"
        },
        "3473": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2786,
                2828
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3476": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2786,
                2828
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3477": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2786,
                2828
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3478": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2785,
                2836
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3479": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2785,
                2836
            ],
            "op": "SHR",
            "path": "16"
        },
        "3480": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2777,
                2836
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3481": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2777,
                2836
            ],
            "op": "POP",
            "path": "16"
        },
        "3482": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2750,
                2836
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3483": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2860,
                2866
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x2000"
        },
        "3486": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2850,
                2866
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3487": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2850,
                2866
            ],
            "op": "AND",
            "path": "16"
        },
        "3488": {
            "branch": 123,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2850,
                2871
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3489": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2846,
                2932
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xDC5"
        },
        "3492": {
            "branch": 123,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2846,
                2932
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3493": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2929,
                2932
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 39,
            "value": "0x80"
        },
        "3495": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2882,
                2924
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xDC0"
        },
        "3498": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2882,
                2887
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3499": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2890,
                2924
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0xA9F746462D870FDF8A65DC1F90E061E5"
        },
        "3516": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2882,
                2924
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3519": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2882,
                2924
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3520": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2882,
                2924
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3521": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2881,
                2932
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3522": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2881,
                2932
            ],
            "op": "SHR",
            "path": "16"
        },
        "3523": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2873,
                2932
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3524": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2873,
                2932
            ],
            "op": "POP",
            "path": "16"
        },
        "3525": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2846,
                2932
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3526": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2956,
                2962
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x4000"
        },
        "3529": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2946,
                2962
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3530": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2946,
                2962
            ],
            "op": "AND",
            "path": "16"
        },
        "3531": {
            "branch": 124,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2946,
                2967
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3532": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2942,
                3028
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xDF0"
        },
        "3535": {
            "branch": 124,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2942,
                3028
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3536": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3025,
                3028
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 40,
            "value": "0x80"
        },
        "3538": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2978,
                3020
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xDEB"
        },
        "3541": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2978,
                2983
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3542": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2986,
                3020
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0x70D869A156D2A1B890BB3DF62BAF32F7"
        },
        "3559": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2978,
                3020
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3562": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                2978,
                3020
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3563": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2978,
                3020
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3564": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2977,
                3028
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3565": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2977,
                3028
            ],
            "op": "SHR",
            "path": "16"
        },
        "3566": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2969,
                3028
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3567": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2969,
                3028
            ],
            "op": "POP",
            "path": "16"
        },
        "3568": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                2942,
                3028
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3569": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3052,
                3058
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x8000"
        },
        "3572": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3042,
                3058
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3573": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3042,
                3058
            ],
            "op": "AND",
            "path": "16"
        },
        "3574": {
            "branch": 125,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3042,
                3063
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3575": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3038,
                3124
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE1B"
        },
        "3578": {
            "branch": 125,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3038,
                3124
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3579": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3121,
                3124
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 41,
            "value": "0x80"
        },
        "3581": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3074,
                3116
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE16"
        },
        "3584": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3074,
                3079
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3585": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3082,
                3116
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0x31BE135F97D08FD981231505542FCFA6"
        },
        "3602": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3074,
                3116
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3605": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3074,
                3116
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3606": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3074,
                3116
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3607": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3073,
                3124
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3608": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3073,
                3124
            ],
            "op": "SHR",
            "path": "16"
        },
        "3609": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3065,
                3124
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3610": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3065,
                3124
            ],
            "op": "POP",
            "path": "16"
        },
        "3611": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3038,
                3124
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3612": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3148,
                3155
            ],
            "op": "PUSH3",
            "path": "16",
            "value": "0x10000"
        },
        "3616": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3138,
                3155
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3617": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3138,
                3155
            ],
            "op": "AND",
            "path": "16"
        },
        "3618": {
            "branch": 126,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3138,
                3160
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3619": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3134,
                3220
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE47"
        },
        "3622": {
            "branch": 126,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3134,
                3220
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3623": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3217,
                3220
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 42,
            "value": "0x80"
        },
        "3625": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3171,
                3212
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE42"
        },
        "3628": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3171,
                3176
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3629": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3179,
                3212
            ],
            "op": "PUSH16",
            "path": "16",
            "value": "0x9AA508B5B7A84E1C677DE54F3E99BC9"
        },
        "3646": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3171,
                3212
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3649": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3171,
                3212
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3650": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3171,
                3212
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3651": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3170,
                3220
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3652": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3170,
                3220
            ],
            "op": "SHR",
            "path": "16"
        },
        "3653": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3162,
                3220
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3654": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3162,
                3220
            ],
            "op": "POP",
            "path": "16"
        },
        "3655": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3134,
                3220
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3656": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3244,
                3251
            ],
            "op": "PUSH3",
            "path": "16",
            "value": "0x20000"
        },
        "3660": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3234,
                3251
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3661": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3234,
                3251
            ],
            "op": "AND",
            "path": "16"
        },
        "3662": {
            "branch": 127,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3234,
                3256
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3663": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3230,
                3315
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE72"
        },
        "3666": {
            "branch": 127,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3230,
                3315
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3667": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3312,
                3315
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 43,
            "value": "0x80"
        },
        "3669": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3267,
                3307
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE6D"
        },
        "3672": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3267,
                3272
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3673": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3275,
                3307
            ],
            "op": "PUSH15",
            "path": "16",
            "value": "0x5D6AF8DEDB81196699C329225EE604"
        },
        "3689": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3267,
                3307
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3692": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3267,
                3307
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3693": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3267,
                3307
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3694": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3266,
                3315
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3695": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3266,
                3315
            ],
            "op": "SHR",
            "path": "16"
        },
        "3696": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3258,
                3315
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3697": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3258,
                3315
            ],
            "op": "POP",
            "path": "16"
        },
        "3698": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3230,
                3315
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3699": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3339,
                3346
            ],
            "op": "PUSH3",
            "path": "16",
            "value": "0x40000"
        },
        "3703": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3329,
                3346
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3704": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3329,
                3346
            ],
            "op": "AND",
            "path": "16"
        },
        "3705": {
            "branch": 128,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3329,
                3351
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3706": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3325,
                3408
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE9C"
        },
        "3709": {
            "branch": 128,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3325,
                3408
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3710": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3405,
                3408
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 44,
            "value": "0x80"
        },
        "3712": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3362,
                3400
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xE97"
        },
        "3715": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3362,
                3367
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3716": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3370,
                3400
            ],
            "op": "PUSH14",
            "path": "16",
            "value": "0x2216E584F5FA1EA926041BEDFE98"
        },
        "3731": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3362,
                3400
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3734": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3362,
                3400
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3735": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3362,
                3400
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3736": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3361,
                3408
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3737": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3361,
                3408
            ],
            "op": "SHR",
            "path": "16"
        },
        "3738": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3353,
                3408
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3739": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3353,
                3408
            ],
            "op": "POP",
            "path": "16"
        },
        "3740": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3325,
                3408
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3741": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3432,
                3439
            ],
            "op": "PUSH3",
            "path": "16",
            "value": "0x80000"
        },
        "3745": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3422,
                3439
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3746": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3422,
                3439
            ],
            "op": "AND",
            "path": "16"
        },
        "3747": {
            "branch": 129,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3422,
                3444
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3748": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3418,
                3496
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xEC4"
        },
        "3751": {
            "branch": 129,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3418,
                3496
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3752": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3493,
                3496
            ],
            "op": "PUSH1",
            "path": "16",
            "statement": 45,
            "value": "0x80"
        },
        "3754": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3455,
                3488
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xEBF"
        },
        "3757": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3455,
                3460
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3758": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3463,
                3488
            ],
            "op": "PUSH12",
            "path": "16",
            "value": "0x48A170391F7DC42444E8FA2"
        },
        "3771": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3455,
                3488
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1ACA"
        },
        "3774": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3455,
                3488
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3775": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3455,
                3488
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3776": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3454,
                3496
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3777": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3454,
                3496
            ],
            "op": "SHR",
            "path": "16"
        },
        "3778": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3446,
                3496
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3779": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3446,
                3496
            ],
            "op": "POP",
            "path": "16"
        },
        "3780": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3418,
                3496
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3781": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3518,
                3519
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x0"
        },
        "3783": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3511,
                3515
            ],
            "op": "DUP5",
            "path": "16"
        },
        "3784": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3511,
                3519
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x2"
        },
        "3786": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3511,
                3519
            ],
            "op": "SIGNEXTEND",
            "path": "16"
        },
        "3787": {
            "branch": 130,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3511,
                3519
            ],
            "op": "SGT",
            "path": "16"
        },
        "3788": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3507,
                3554
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3789": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3507,
                3554
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xEDF"
        },
        "3792": {
            "branch": 130,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3507,
                3554
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3793": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3529,
                3554
            ],
            "op": "PUSH2",
            "path": "16",
            "statement": 46,
            "value": "0xEDC"
        },
        "3796": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3549,
                3554
            ],
            "op": "DUP2",
            "path": "16"
        },
        "3797": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "3799": {
            "op": "NOT"
        },
        "3800": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3529,
                3554
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1A94"
        },
        "3803": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3529,
                3554
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3804": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3529,
                3554
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3805": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3521,
                3554
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3806": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3521,
                3554
            ],
            "op": "POP",
            "path": "16"
        },
        "3807": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3507,
                3554
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3808": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3921
            ],
            "op": "PUSH2",
            "path": "16",
            "statement": 47,
            "value": "0xEEE"
        },
        "3811": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3913,
                3920
            ],
            "op": "PUSH5",
            "path": "16",
            "value": "0x100000000"
        },
        "3817": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3909
            ],
            "op": "DUP3",
            "path": "16"
        },
        "3818": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3921
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1AE1"
        },
        "3821": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3904,
                3921
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3822": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3921
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3823": {
            "branch": 131,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3926
            ],
            "op": "ISZERO",
            "path": "16"
        },
        "3824": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3934
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xEFA"
        },
        "3827": {
            "branch": 131,
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3934
            ],
            "op": "JUMPI",
            "path": "16"
        },
        "3828": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3933,
                3934
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x1"
        },
        "3830": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3934
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xEFD"
        },
        "3833": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3934
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3834": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3934
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3835": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3929,
                3930
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x0"
        },
        "3837": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3904,
                3934
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3838": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3887,
                3935
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0xF0E"
        },
        "3841": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3887,
                3935
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3842": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3887,
                3935
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0xFF"
        },
        "3844": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3887,
                3935
            ],
            "op": "AND",
            "path": "16"
        },
        "3845": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3897,
                3899
            ],
            "op": "PUSH1",
            "path": "16",
            "value": "0x20"
        },
        "3847": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3888,
                3899
            ],
            "op": "DUP4",
            "path": "16"
        },
        "3848": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3888,
                3899
            ],
            "op": "SWAP1",
            "path": "16"
        },
        "3849": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3888,
                3899
            ],
            "op": "SHR",
            "path": "16"
        },
        "3850": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3887,
                3935
            ],
            "op": "PUSH2",
            "path": "16",
            "value": "0x1A58"
        },
        "3853": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "i",
            "offset": [
                3887,
                3935
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3854": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3887,
                3935
            ],
            "op": "JUMPDEST",
            "path": "16"
        },
        "3855": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                3864,
                3936
            ],
            "op": "SWAP5",
            "path": "16"
        },
        "3856": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "offset": [
                1355,
                3943
            ],
            "op": "SWAP4",
            "path": "16"
        },
        "3857": {
            "op": "POP"
        },
        "3858": {
            "op": "POP"
        },
        "3859": {
            "op": "POP"
        },
        "3860": {
            "op": "POP"
        },
        "3861": {
            "fn": "TickMath.getSqrtRatioAtTick",
            "jump": "o",
            "offset": [
                1355,
                3943
            ],
            "op": "JUMP",
            "path": "16"
        },
        "3862": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1094,
                1781
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "3863": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1260,
                1275
            ],
            "op": "PUSH1",
            "path": "8",
            "value": "0x0"
        },
        "3865": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1307,
                1320
            ],
            "op": "DUP4",
            "path": "8"
        },
        "3866": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3868": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3870": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3872": {
            "op": "SHL"
        },
        "3873": {
            "op": "SUB"
        },
        "3874": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1291,
                1320
            ],
            "op": "AND",
            "path": "8"
        },
        "3875": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1291,
                1304
            ],
            "op": "DUP6",
            "path": "8"
        },
        "3876": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3878": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3880": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3882": {
            "op": "SHL"
        },
        "3883": {
            "op": "SUB"
        },
        "3884": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1291,
                1320
            ],
            "op": "AND",
            "path": "8"
        },
        "3885": {
            "branch": 101,
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1291,
                1320
            ],
            "op": "GT",
            "path": "8"
        },
        "3886": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1287,
                1397
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "3887": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1287,
                1397
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xF36"
        },
        "3890": {
            "branch": 101,
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1287,
                1397
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "3891": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1368,
                1381
            ],
            "op": "SWAP3",
            "path": "8",
            "statement": 48
        },
        "3892": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1368,
                1381
            ],
            "op": "SWAP4",
            "path": "8"
        },
        "3893": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1383,
                1396
            ],
            "op": "SWAP3",
            "path": "8"
        },
        "3894": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1287,
                1397
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "3895": {
            "branch": 102,
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1412,
                1419
            ],
            "op": "DUP2",
            "path": "8"
        },
        "3896": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1408,
                1775
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "3897": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1408,
                1775
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xF6D"
        },
        "3900": {
            "branch": 102,
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1408,
                1775
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "3901": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1445,
                1585
            ],
            "op": "PUSH2",
            "path": "8",
            "statement": 49,
            "value": "0xF66"
        },
        "3904": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3906": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3908": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "3910": {
            "op": "SHL"
        },
        "3911": {
            "op": "SUB"
        },
        "3912": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1445,
                1585
            ],
            "op": "DUP5",
            "path": "8"
        },
        "3913": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1445,
                1585
            ],
            "op": "AND",
            "path": "8"
        },
        "3914": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1507,
                1536
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xF53"
        },
        "3917": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1523,
                1536
            ],
            "op": "DUP8",
            "path": "8"
        },
        "3918": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1507,
                1520
            ],
            "op": "DUP8",
            "path": "8"
        },
        "3919": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1507,
                1536
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1914"
        },
        "3922": {
            "fn": "Math.calcAmount1Delta",
            "jump": "i",
            "offset": [
                1507,
                1536
            ],
            "op": "JUMP",
            "path": "8"
        },
        "3923": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1507,
                1536
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "3924": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3926": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3928": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3930": {
            "op": "SHL"
        },
        "3931": {
            "op": "SUB"
        },
        "3932": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1445,
                1585
            ],
            "op": "AND",
            "path": "8"
        },
        "3933": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3935": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "3937": {
            "op": "SHL"
        },
        "3938": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1445,
                1461
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xA80"
        },
        "3941": {
            "fn": "Math.calcAmount1Delta",
            "jump": "i",
            "offset": [
                1445,
                1585
            ],
            "op": "JUMP",
            "path": "8"
        },
        "3942": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1445,
                1585
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "3943": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1435,
                1585
            ],
            "op": "SWAP1",
            "path": "8"
        },
        "3944": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1435,
                1585
            ],
            "op": "POP",
            "path": "8"
        },
        "3945": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1408,
                1775
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xF0E"
        },
        "3948": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1408,
                1775
            ],
            "op": "JUMP",
            "path": "8"
        },
        "3949": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1408,
                1775
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "3950": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1626,
                1764
            ],
            "op": "PUSH2",
            "path": "8",
            "statement": 50,
            "value": "0xF97"
        },
        "3953": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3955": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3957": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "3959": {
            "op": "SHL"
        },
        "3960": {
            "op": "SUB"
        },
        "3961": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1626,
                1764
            ],
            "op": "DUP5",
            "path": "8"
        },
        "3962": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1626,
                1764
            ],
            "op": "AND",
            "path": "8"
        },
        "3963": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1686,
                1715
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xF84"
        },
        "3966": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1702,
                1715
            ],
            "op": "DUP8",
            "path": "8"
        },
        "3967": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1686,
                1699
            ],
            "op": "DUP8",
            "path": "8"
        },
        "3968": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1686,
                1715
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1914"
        },
        "3971": {
            "fn": "Math.calcAmount1Delta",
            "jump": "i",
            "offset": [
                1686,
                1715
            ],
            "op": "JUMP",
            "path": "8"
        },
        "3972": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1686,
                1715
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "3973": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3975": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3977": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3979": {
            "op": "SHL"
        },
        "3980": {
            "op": "SUB"
        },
        "3981": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1626,
                1764
            ],
            "op": "AND",
            "path": "8"
        },
        "3982": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3984": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "3986": {
            "op": "SHL"
        },
        "3987": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1626,
                1640
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1244"
        },
        "3990": {
            "fn": "Math.calcAmount1Delta",
            "jump": "i",
            "offset": [
                1626,
                1764
            ],
            "op": "JUMP",
            "path": "8"
        },
        "3991": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1626,
                1764
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "3992": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1616,
                1764
            ],
            "op": "SWAP6",
            "path": "8"
        },
        "3993": {
            "fn": "Math.calcAmount1Delta",
            "offset": [
                1094,
                1781
            ],
            "op": "SWAP5",
            "path": "8"
        },
        "3994": {
            "op": "POP"
        },
        "3995": {
            "op": "POP"
        },
        "3996": {
            "op": "POP"
        },
        "3997": {
            "op": "POP"
        },
        "3998": {
            "op": "POP"
        },
        "3999": {
            "fn": "Math.calcAmount1Delta",
            "jump": "o",
            "offset": [
                1094,
                1781
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4000": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                213,
                1028
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4001": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                379,
                394
            ],
            "op": "PUSH1",
            "path": "8",
            "value": "0x0"
        },
        "4003": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                426,
                439
            ],
            "op": "DUP4",
            "path": "8"
        },
        "4004": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4006": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4008": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4010": {
            "op": "SHL"
        },
        "4011": {
            "op": "SUB"
        },
        "4012": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                410,
                439
            ],
            "op": "AND",
            "path": "8"
        },
        "4013": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                410,
                423
            ],
            "op": "DUP6",
            "path": "8"
        },
        "4014": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4016": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4018": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4020": {
            "op": "SHL"
        },
        "4021": {
            "op": "SUB"
        },
        "4022": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                410,
                439
            ],
            "op": "AND",
            "path": "8"
        },
        "4023": {
            "branch": 103,
            "fn": "Math.calcAmount0Delta",
            "offset": [
                410,
                439
            ],
            "op": "GT",
            "path": "8"
        },
        "4024": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                406,
                516
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "4025": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                406,
                516
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xFC0"
        },
        "4028": {
            "branch": 103,
            "fn": "Math.calcAmount0Delta",
            "offset": [
                406,
                516
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "4029": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                487,
                500
            ],
            "op": "SWAP3",
            "path": "8",
            "statement": 51
        },
        "4030": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                487,
                500
            ],
            "op": "SWAP4",
            "path": "8"
        },
        "4031": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                502,
                515
            ],
            "op": "SWAP3",
            "path": "8"
        },
        "4032": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                406,
                516
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4033": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                551,
                552
            ],
            "op": "PUSH1",
            "path": "8",
            "statement": 52,
            "value": "0x0"
        },
        "4035": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                535,
                548
            ],
            "op": "DUP6",
            "path": "8"
        },
        "4036": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4038": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4040": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4042": {
            "op": "SHL"
        },
        "4043": {
            "op": "SUB"
        },
        "4044": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                535,
                552
            ],
            "op": "AND",
            "path": "8"
        },
        "4045": {
            "branch": 104,
            "fn": "Math.calcAmount0Delta",
            "offset": [
                535,
                552
            ],
            "op": "GT",
            "path": "8"
        },
        "4046": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                527,
                553
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xFD6"
        },
        "4049": {
            "branch": 104,
            "fn": "Math.calcAmount0Delta",
            "offset": [
                527,
                553
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "4050": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                527,
                553
            ],
            "op": "PUSH1",
            "path": "8",
            "value": "0x0"
        },
        "4052": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                527,
                553
            ],
            "op": "DUP1",
            "path": "8"
        },
        "4053": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                527,
                553
            ],
            "op": "REVERT",
            "path": "8"
        },
        "4054": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                527,
                553
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4055": {
            "op": "PUSH16",
            "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        },
        "4072": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "4074": {
            "op": "SHL"
        },
        "4075": {
            "offset": [
                135,
                137
            ],
            "op": "PUSH1",
            "path": "6",
            "value": "0x60"
        },
        "4077": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                585,
                630
            ],
            "op": "DUP5",
            "path": "8"
        },
        "4078": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                585,
                630
            ],
            "op": "SWAP1",
            "path": "8"
        },
        "4079": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                585,
                630
            ],
            "op": "SHL",
            "path": "8"
        },
        "4080": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                585,
                630
            ],
            "op": "AND",
            "path": "8"
        },
        "4081": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                564,
                582
            ],
            "op": "PUSH1",
            "path": "8",
            "value": "0x0"
        },
        "4083": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                661,
                690
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xFFC"
        },
        "4086": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                677,
                690
            ],
            "op": "DUP8",
            "path": "8"
        },
        "4087": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                661,
                674
            ],
            "op": "DUP8",
            "path": "8"
        },
        "4088": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                661,
                690
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1914"
        },
        "4091": {
            "fn": "Math.calcAmount0Delta",
            "jump": "i",
            "offset": [
                661,
                690
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4092": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                661,
                690
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4093": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4095": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4097": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4099": {
            "op": "SHL"
        },
        "4100": {
            "op": "SUB"
        },
        "4101": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                640,
                690
            ],
            "op": "AND",
            "path": "8"
        },
        "4102": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                640,
                690
            ],
            "op": "SWAP1",
            "path": "8"
        },
        "4103": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                640,
                690
            ],
            "op": "POP",
            "path": "8"
        },
        "4104": {
            "branch": 105,
            "fn": "Math.calcAmount0Delta",
            "offset": [
                705,
                712
            ],
            "op": "DUP4",
            "path": "8"
        },
        "4105": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                701,
                1022
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "4106": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                701,
                1022
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1040"
        },
        "4109": {
            "branch": 105,
            "fn": "Math.calcAmount0Delta",
            "offset": [
                701,
                1022
            ],
            "op": "JUMPI",
            "path": "8"
        },
        "4110": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                738,
                869
            ],
            "op": "PUSH2",
            "path": "8",
            "statement": 53,
            "value": "0x1039"
        },
        "4113": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                769,
                824
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1024"
        },
        "4116": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                786,
                796
            ],
            "op": "DUP4",
            "path": "8"
        },
        "4117": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                798,
                808
            ],
            "op": "DUP4",
            "path": "8"
        },
        "4118": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                810,
                823
            ],
            "op": "DUP10",
            "path": "8"
        },
        "4119": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4121": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4123": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4125": {
            "op": "SHL"
        },
        "4126": {
            "op": "SUB"
        },
        "4127": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                769,
                824
            ],
            "op": "AND",
            "path": "8"
        },
        "4128": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                769,
                785
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0xA80"
        },
        "4131": {
            "fn": "Math.calcAmount0Delta",
            "jump": "i",
            "offset": [
                769,
                824
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4132": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                769,
                824
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4133": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                842,
                855
            ],
            "op": "DUP9",
            "path": "8"
        },
        "4134": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4136": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4138": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4140": {
            "op": "SHL"
        },
        "4141": {
            "op": "SUB"
        },
        "4142": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                738,
                869
            ],
            "op": "AND",
            "path": "8"
        },
        "4143": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5523,
                5550
            ],
            "op": "DUP1",
            "path": "8"
        },
        "4144": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5523,
                5550
            ],
            "op": "DUP3",
            "path": "8"
        },
        "4145": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5523,
                5550
            ],
            "op": "DIV",
            "path": "8"
        },
        "4146": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "SWAP2",
            "path": "8"
        },
        "4147": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5571,
                5598
            ],
            "op": "MOD",
            "path": "8"
        },
        "4148": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5568,
                5602
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "4149": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5568,
                5602
            ],
            "op": "ISZERO",
            "path": "8"
        },
        "4150": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5502,
                5616
            ],
            "op": "ADD",
            "path": "8"
        },
        "4151": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5502,
                5616
            ],
            "op": "SWAP1",
            "path": "8"
        },
        "4152": {
            "fn": "Math.divRoundingUp",
            "offset": [
                5335,
                5632
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4153": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                738,
                869
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4154": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                728,
                869
            ],
            "op": "SWAP3",
            "path": "8"
        },
        "4155": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                728,
                869
            ],
            "op": "POP",
            "path": "8"
        },
        "4156": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                701,
                1022
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x106B"
        },
        "4159": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                701,
                1022
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4160": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                701,
                1022
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4161": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                998,
                1011
            ],
            "op": "DUP7",
            "path": "8",
            "statement": 54
        },
        "4162": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4164": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4166": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4168": {
            "op": "SHL"
        },
        "4169": {
            "op": "SUB"
        },
        "4170": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                1011
            ],
            "op": "AND",
            "path": "8"
        },
        "4171": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                979
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x105E"
        },
        "4174": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                941,
                951
            ],
            "op": "DUP4",
            "path": "8"
        },
        "4175": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                953,
                963
            ],
            "op": "DUP4",
            "path": "8"
        },
        "4176": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                965,
                978
            ],
            "op": "DUP10",
            "path": "8"
        },
        "4177": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4179": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4181": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4183": {
            "op": "SHL"
        },
        "4184": {
            "op": "SUB"
        },
        "4185": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                979
            ],
            "op": "AND",
            "path": "8"
        },
        "4186": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                940
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1244"
        },
        "4189": {
            "fn": "Math.calcAmount0Delta",
            "jump": "i",
            "offset": [
                926,
                979
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4190": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                979
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4191": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                1011
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1068"
        },
        "4194": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                1011
            ],
            "op": "SWAP2",
            "path": "8"
        },
        "4195": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                1011
            ],
            "op": "SWAP1",
            "path": "8"
        },
        "4196": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                1011
            ],
            "op": "PUSH2",
            "path": "8",
            "value": "0x1A94"
        },
        "4199": {
            "fn": "Math.calcAmount0Delta",
            "jump": "i",
            "offset": [
                926,
                1011
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4200": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                926,
                1011
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4201": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                900,
                1011
            ],
            "op": "SWAP3",
            "path": "8"
        },
        "4202": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                900,
                1011
            ],
            "op": "POP",
            "path": "8"
        },
        "4203": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                701,
                1022
            ],
            "op": "JUMPDEST",
            "path": "8"
        },
        "4204": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                396,
                1028
            ],
            "op": "POP",
            "path": "8"
        },
        "4205": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                396,
                1028
            ],
            "op": "POP",
            "path": "8"
        },
        "4206": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                213,
                1028
            ],
            "op": "SWAP5",
            "path": "8"
        },
        "4207": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                213,
                1028
            ],
            "op": "SWAP4",
            "path": "8"
        },
        "4208": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                213,
                1028
            ],
            "op": "POP",
            "path": "8"
        },
        "4209": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                213,
                1028
            ],
            "op": "POP",
            "path": "8"
        },
        "4210": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                213,
                1028
            ],
            "op": "POP",
            "path": "8"
        },
        "4211": {
            "fn": "Math.calcAmount0Delta",
            "offset": [
                213,
                1028
            ],
            "op": "POP",
            "path": "8"
        },
        "4212": {
            "fn": "Math.calcAmount0Delta",
            "jump": "o",
            "offset": [
                213,
                1028
            ],
            "op": "JUMP",
            "path": "8"
        },
        "4213": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12851,
                13295
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4214": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12957,
                12964
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x0"
        },
        "4216": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13007,
                13018
            ],
            "op": "PUSH2",
            "path": "27",
            "statement": 55,
            "value": "0x1082"
        },
        "4219": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13007,
                13013
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4220": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13016,
                13018
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x14"
        },
        "4222": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13007,
                13018
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x1A58"
        },
        "4225": {
            "fn": "BytesLib.toAddress",
            "jump": "i",
            "offset": [
                13007,
                13018
            ],
            "op": "JUMP",
            "path": "27"
        },
        "4226": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13007,
                13018
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4227": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12990,
                12996
            ],
            "op": "DUP4",
            "path": "27"
        },
        "4228": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12990,
                13003
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4229": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12990,
                13018
            ],
            "op": "LT",
            "path": "27"
        },
        "4230": {
            "branch": 89,
            "fn": "BytesLib.toAddress",
            "offset": [
                12990,
                13018
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4231": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x10CA"
        },
        "4234": {
            "branch": 89,
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "JUMPI",
            "path": "27"
        },
        "4235": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x40"
        },
        "4237": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4238": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4242": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4244": {
            "op": "SHL"
        },
        "4245": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "DUP2",
            "path": "27"
        },
        "4246": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4247": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4249": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x4"
        },
        "4251": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4252": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "ADD",
            "path": "27"
        },
        "4253": {
            "op": "MSTORE"
        },
        "4254": {
            "op": "PUSH1",
            "value": "0x15"
        },
        "4256": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4258": {
            "op": "DUP3"
        },
        "4259": {
            "op": "ADD"
        },
        "4260": {
            "op": "MSTORE"
        },
        "4261": {
            "op": "PUSH21",
            "value": "0x746F416464726573735F6F75744F66426F756E6473"
        },
        "4283": {
            "op": "PUSH1",
            "value": "0x58"
        },
        "4285": {
            "op": "SHL"
        },
        "4286": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4288": {
            "op": "DUP3"
        },
        "4289": {
            "op": "ADD"
        },
        "4290": {
            "op": "MSTORE"
        },
        "4291": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "4293": {
            "op": "ADD"
        },
        "4294": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x69D"
        },
        "4297": {
            "op": "JUMP"
        },
        "4298": {
            "fn": "BytesLib.toAddress",
            "offset": [
                12982,
                13044
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4299": {
            "op": "POP"
        },
        "4300": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13154,
                13184
            ],
            "op": "ADD",
            "path": "27"
        },
        "4301": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13170,
                13174
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x20"
        },
        "4303": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13154,
                13184
            ],
            "op": "ADD",
            "path": "27"
        },
        "4304": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13148,
                13185
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4305": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4307": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "4309": {
            "op": "SHL"
        },
        "4310": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13126,
                13246
            ],
            "op": "SWAP1",
            "path": "27"
        },
        "4311": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13126,
                13246
            ],
            "op": "DIV",
            "path": "27"
        },
        "4312": {
            "fn": "BytesLib.toAddress",
            "offset": [
                13126,
                13246
            ],
            "op": "SWAP1",
            "path": "27"
        },
        "4313": {
            "fn": "BytesLib.toAddress",
            "jump": "o",
            "offset": [
                12851,
                13295
            ],
            "op": "JUMP",
            "path": "27"
        },
        "4314": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                151,
                484
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "4315": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                253,
                259
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x0"
        },
        "4317": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                300,
                310
            ],
            "op": "PUSH2",
            "path": "10",
            "statement": 56,
            "value": "0x10E7"
        },
        "4320": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                300,
                306
            ],
            "op": "DUP3",
            "path": "10"
        },
        "4321": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                309,
                310
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "4323": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                300,
                310
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x1A58"
        },
        "4326": {
            "fn": "BytesLibExt.toUint24",
            "jump": "i",
            "offset": [
                300,
                310
            ],
            "op": "JUMP",
            "path": "10"
        },
        "4327": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                300,
                310
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "4328": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                283,
                289
            ],
            "op": "DUP4",
            "path": "10"
        },
        "4329": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                283,
                296
            ],
            "op": "MLOAD",
            "path": "10"
        },
        "4330": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                283,
                310
            ],
            "op": "LT",
            "path": "10"
        },
        "4331": {
            "branch": 92,
            "fn": "BytesLibExt.toUint24",
            "offset": [
                283,
                310
            ],
            "op": "ISZERO",
            "path": "10"
        },
        "4332": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x112E"
        },
        "4335": {
            "branch": 92,
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "JUMPI",
            "path": "10"
        },
        "4336": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x40"
        },
        "4338": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "MLOAD",
            "path": "10"
        },
        "4339": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4343": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4345": {
            "op": "SHL"
        },
        "4346": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "DUP2",
            "path": "10"
        },
        "4347": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "MSTORE",
            "path": "10"
        },
        "4348": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4350": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x4"
        },
        "4352": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "DUP3",
            "path": "10"
        },
        "4353": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "ADD",
            "path": "10"
        },
        "4354": {
            "op": "MSTORE"
        },
        "4355": {
            "op": "PUSH1",
            "value": "0x14"
        },
        "4357": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4359": {
            "op": "DUP3"
        },
        "4360": {
            "op": "ADD"
        },
        "4361": {
            "op": "MSTORE"
        },
        "4362": {
            "op": "PUSH20",
            "value": "0x746F55696E7432345F6F75744F66426F756E6473"
        },
        "4383": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "4385": {
            "op": "SHL"
        },
        "4386": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4388": {
            "op": "DUP3"
        },
        "4389": {
            "op": "ADD"
        },
        "4390": {
            "op": "MSTORE"
        },
        "4391": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "4393": {
            "op": "ADD"
        },
        "4394": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "PUSH2",
            "path": "10",
            "value": "0x69D"
        },
        "4397": {
            "op": "JUMP"
        },
        "4398": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                275,
                335
            ],
            "op": "JUMPDEST",
            "path": "10"
        },
        "4399": {
            "op": "POP"
        },
        "4400": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                412,
                441
            ],
            "op": "ADD",
            "path": "10"
        },
        "4401": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                428,
                431
            ],
            "op": "PUSH1",
            "path": "10",
            "value": "0x3"
        },
        "4403": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                412,
                441
            ],
            "op": "ADD",
            "path": "10"
        },
        "4404": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                406,
                442
            ],
            "op": "MLOAD",
            "path": "10"
        },
        "4405": {
            "fn": "BytesLibExt.toUint24",
            "offset": [
                406,
                442
            ],
            "op": "SWAP1",
            "path": "10"
        },
        "4406": {
            "fn": "BytesLibExt.toUint24",
            "jump": "o",
            "offset": [
                151,
                484
            ],
            "op": "JUMP",
            "path": "10"
        },
        "4407": {
            "fn": "BytesLib.slice",
            "offset": [
                9785,
                12843
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4408": {
            "fn": "BytesLib.slice",
            "offset": [
                9911,
                9923
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x60"
        },
        "4410": {
            "fn": "BytesLib.slice",
            "offset": [
                9960,
                9967
            ],
            "op": "DUP2",
            "path": "27",
            "statement": 57
        },
        "4411": {
            "fn": "BytesLib.slice",
            "offset": [
                9944,
                9956
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x1145"
        },
        "4414": {
            "fn": "BytesLib.slice",
            "offset": [
                9960,
                9967
            ],
            "op": "DUP2",
            "path": "27"
        },
        "4415": {
            "fn": "BytesLib.slice",
            "offset": [
                9954,
                9956
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x1F"
        },
        "4417": {
            "fn": "BytesLib.slice",
            "offset": [
                9944,
                9956
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x1A58"
        },
        "4420": {
            "fn": "BytesLib.slice",
            "jump": "i",
            "offset": [
                9944,
                9956
            ],
            "op": "JUMP",
            "path": "27"
        },
        "4421": {
            "fn": "BytesLib.slice",
            "offset": [
                9944,
                9956
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4422": {
            "fn": "BytesLib.slice",
            "offset": [
                9944,
                9967
            ],
            "op": "LT",
            "path": "27"
        },
        "4423": {
            "branch": 90,
            "fn": "BytesLib.slice",
            "offset": [
                9944,
                9967
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4424": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x1184"
        },
        "4427": {
            "branch": 90,
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "JUMPI",
            "path": "27"
        },
        "4428": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x40"
        },
        "4430": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4431": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4435": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4437": {
            "op": "SHL"
        },
        "4438": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "DUP2",
            "path": "27"
        },
        "4439": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4440": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4442": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x4"
        },
        "4444": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4445": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "ADD",
            "path": "27"
        },
        "4446": {
            "op": "MSTORE"
        },
        "4447": {
            "op": "PUSH1",
            "value": "0xE"
        },
        "4449": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4451": {
            "op": "DUP3"
        },
        "4452": {
            "op": "ADD"
        },
        "4453": {
            "op": "MSTORE"
        },
        "4454": {
            "op": "PUSH14",
            "value": "0x736C6963655F6F766572666C6F77"
        },
        "4469": {
            "op": "PUSH1",
            "value": "0x90"
        },
        "4471": {
            "op": "SHL"
        },
        "4472": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4474": {
            "op": "DUP3"
        },
        "4475": {
            "op": "ADD"
        },
        "4476": {
            "op": "MSTORE"
        },
        "4477": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "4479": {
            "op": "ADD"
        },
        "4480": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x69D"
        },
        "4483": {
            "op": "JUMP"
        },
        "4484": {
            "fn": "BytesLib.slice",
            "offset": [
                9936,
                9986
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4485": {
            "fn": "BytesLib.slice",
            "offset": [
                10022,
                10038
            ],
            "op": "PUSH2",
            "path": "27",
            "statement": 58,
            "value": "0x118E"
        },
        "4488": {
            "fn": "BytesLib.slice",
            "offset": [
                10031,
                10038
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4489": {
            "fn": "BytesLib.slice",
            "offset": [
                10022,
                10028
            ],
            "op": "DUP5",
            "path": "27"
        },
        "4490": {
            "fn": "BytesLib.slice",
            "offset": [
                10022,
                10038
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x1A58"
        },
        "4493": {
            "fn": "BytesLib.slice",
            "jump": "i",
            "offset": [
                10022,
                10038
            ],
            "op": "JUMP",
            "path": "27"
        },
        "4494": {
            "fn": "BytesLib.slice",
            "offset": [
                10022,
                10038
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4495": {
            "fn": "BytesLib.slice",
            "offset": [
                10005,
                10011
            ],
            "op": "DUP5",
            "path": "27"
        },
        "4496": {
            "fn": "BytesLib.slice",
            "offset": [
                10005,
                10018
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4497": {
            "fn": "BytesLib.slice",
            "offset": [
                10005,
                10038
            ],
            "op": "LT",
            "path": "27"
        },
        "4498": {
            "branch": 91,
            "fn": "BytesLib.slice",
            "offset": [
                10005,
                10038
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4499": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x11D2"
        },
        "4502": {
            "branch": 91,
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "JUMPI",
            "path": "27"
        },
        "4503": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x40"
        },
        "4505": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4506": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4510": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4512": {
            "op": "SHL"
        },
        "4513": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "DUP2",
            "path": "27"
        },
        "4514": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4515": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4517": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x4"
        },
        "4519": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4520": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "ADD",
            "path": "27"
        },
        "4521": {
            "op": "MSTORE"
        },
        "4522": {
            "op": "PUSH1",
            "value": "0x11"
        },
        "4524": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4526": {
            "op": "DUP3"
        },
        "4527": {
            "op": "ADD"
        },
        "4528": {
            "op": "MSTORE"
        },
        "4529": {
            "op": "PUSH17",
            "value": "0x736C6963655F6F75744F66426F756E6473"
        },
        "4547": {
            "op": "PUSH1",
            "value": "0x78"
        },
        "4549": {
            "op": "SHL"
        },
        "4550": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4552": {
            "op": "DUP3"
        },
        "4553": {
            "op": "ADD"
        },
        "4554": {
            "op": "MSTORE"
        },
        "4555": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "4557": {
            "op": "ADD"
        },
        "4558": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x69D"
        },
        "4561": {
            "op": "JUMP"
        },
        "4562": {
            "fn": "BytesLib.slice",
            "offset": [
                9997,
                10060
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4563": {
            "fn": "BytesLib.slice",
            "offset": [
                10073,
                10095
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x60"
        },
        "4565": {
            "fn": "BytesLib.slice",
            "offset": [
                10139,
                10154
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4566": {
            "fn": "BytesLib.slice",
            "offset": [
                10139,
                10154
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4567": {
            "fn": "BytesLib.slice",
            "offset": [
                10168,
                12392
            ],
            "op": "DUP1",
            "path": "27"
        },
        "4568": {
            "fn": "BytesLib.slice",
            "offset": [
                10168,
                12392
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4569": {
            "fn": "BytesLib.slice",
            "offset": [
                10168,
                12392
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x11F1"
        },
        "4572": {
            "fn": "BytesLib.slice",
            "offset": [
                10168,
                12392
            ],
            "op": "JUMPI",
            "path": "27"
        },
        "4573": {
            "fn": "BytesLib.slice",
            "offset": [
                12536,
                12540
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x40"
        },
        "4575": {
            "fn": "BytesLib.slice",
            "offset": [
                12530,
                12541
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4576": {
            "fn": "BytesLib.slice",
            "offset": [
                12517,
                12541
            ],
            "op": "SWAP2",
            "path": "27"
        },
        "4577": {
            "fn": "BytesLib.slice",
            "offset": [
                12517,
                12541
            ],
            "op": "POP",
            "path": "27"
        },
        "4578": {
            "fn": "BytesLib.slice",
            "offset": [
                12725,
                12726
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x0"
        },
        "4580": {
            "fn": "BytesLib.slice",
            "offset": [
                12714,
                12723
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4581": {
            "fn": "BytesLib.slice",
            "offset": [
                12707,
                12727
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4582": {
            "fn": "BytesLib.slice",
            "offset": [
                12775,
                12779
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x20"
        },
        "4584": {
            "fn": "BytesLib.slice",
            "offset": [
                12764,
                12773
            ],
            "op": "DUP3",
            "path": "27"
        },
        "4585": {
            "fn": "BytesLib.slice",
            "offset": [
                12760,
                12780
            ],
            "op": "ADD",
            "path": "27"
        },
        "4586": {
            "fn": "BytesLib.slice",
            "offset": [
                12754,
                12758
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x40"
        },
        "4588": {
            "fn": "BytesLib.slice",
            "offset": [
                12747,
                12781
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4589": {
            "fn": "BytesLib.slice",
            "offset": [
                10132,
                12796
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x123B"
        },
        "4592": {
            "fn": "BytesLib.slice",
            "offset": [
                10132,
                12796
            ],
            "op": "JUMP",
            "path": "27"
        },
        "4593": {
            "fn": "BytesLib.slice",
            "offset": [
                10168,
                12392
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4594": {
            "fn": "BytesLib.slice",
            "offset": [
                10353,
                10357
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x40"
        },
        "4596": {
            "fn": "BytesLib.slice",
            "offset": [
                10347,
                10358
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4597": {
            "fn": "BytesLib.slice",
            "offset": [
                10334,
                10358
            ],
            "op": "SWAP2",
            "path": "27"
        },
        "4598": {
            "fn": "BytesLib.slice",
            "offset": [
                10334,
                10358
            ],
            "op": "POP",
            "path": "27"
        },
        "4599": {
            "fn": "BytesLib.slice",
            "offset": [
                11022,
                11024
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x1F"
        },
        "4601": {
            "fn": "BytesLib.slice",
            "offset": [
                11013,
                11020
            ],
            "op": "DUP5",
            "path": "27"
        },
        "4602": {
            "fn": "BytesLib.slice",
            "offset": [
                11009,
                11025
            ],
            "op": "AND",
            "path": "27"
        },
        "4603": {
            "fn": "BytesLib.slice",
            "offset": [
                11453,
                11462
            ],
            "op": "DUP1",
            "path": "27"
        },
        "4604": {
            "fn": "BytesLib.slice",
            "offset": [
                11446,
                11463
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4605": {
            "fn": "BytesLib.slice",
            "offset": [
                11440,
                11444
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x20"
        },
        "4607": {
            "fn": "BytesLib.slice",
            "offset": [
                11436,
                11464
            ],
            "op": "MUL",
            "path": "27"
        },
        "4608": {
            "fn": "BytesLib.slice",
            "offset": [
                11403,
                11412
            ],
            "op": "DUP2",
            "path": "27"
        },
        "4609": {
            "fn": "BytesLib.slice",
            "offset": [
                11392,
                11401
            ],
            "op": "DUP5",
            "path": "27"
        },
        "4610": {
            "fn": "BytesLib.slice",
            "offset": [
                11388,
                11413
            ],
            "op": "ADD",
            "path": "27"
        },
        "4611": {
            "fn": "BytesLib.slice",
            "offset": [
                11362,
                11483
            ],
            "op": "ADD",
            "path": "27"
        },
        "4612": {
            "fn": "BytesLib.slice",
            "offset": [
                11520,
                11527
            ],
            "op": "DUP6",
            "path": "27"
        },
        "4613": {
            "fn": "BytesLib.slice",
            "offset": [
                11516,
                11518
            ],
            "op": "DUP2",
            "path": "27"
        },
        "4614": {
            "fn": "BytesLib.slice",
            "offset": [
                11512,
                11528
            ],
            "op": "ADD",
            "path": "27"
        },
        "4615": {
            "fn": "BytesLib.slice",
            "offset": [
                11913,
                11919
            ],
            "op": "DUP8",
            "path": "27"
        },
        "4616": {
            "fn": "BytesLib.slice",
            "offset": [
                11848,
                11857
            ],
            "op": "DUP4",
            "path": "27"
        },
        "4617": {
            "fn": "BytesLib.slice",
            "offset": [
                11841,
                11858
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4618": {
            "fn": "BytesLib.slice",
            "offset": [
                11835,
                11839
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x20"
        },
        "4620": {
            "fn": "BytesLib.slice",
            "offset": [
                11831,
                11859
            ],
            "op": "MUL",
            "path": "27"
        },
        "4621": {
            "fn": "BytesLib.slice",
            "offset": [
                11790,
                11799
            ],
            "op": "DUP5",
            "path": "27"
        },
        "4622": {
            "fn": "BytesLib.slice",
            "offset": [
                11782,
                11788
            ],
            "op": "DUP12",
            "path": "27"
        },
        "4623": {
            "fn": "BytesLib.slice",
            "offset": [
                11778,
                11800
            ],
            "op": "ADD",
            "path": "27"
        },
        "4624": {
            "fn": "BytesLib.slice",
            "offset": [
                11744,
                11886
            ],
            "op": "ADD",
            "path": "27"
        },
        "4625": {
            "fn": "BytesLib.slice",
            "offset": [
                11714,
                11942
            ],
            "op": "ADD",
            "path": "27"
        },
        "4626": {
            "fn": "BytesLib.slice",
            "offset": [
                11548,
                12140
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4627": {
            "fn": "BytesLib.slice",
            "offset": [
                11969,
                11972
            ],
            "op": "DUP2",
            "path": "27"
        },
        "4628": {
            "fn": "BytesLib.slice",
            "offset": [
                11965,
                11967
            ],
            "op": "DUP4",
            "path": "27"
        },
        "4629": {
            "fn": "BytesLib.slice",
            "offset": [
                11962,
                11973
            ],
            "op": "LT",
            "path": "27"
        },
        "4630": {
            "fn": "BytesLib.slice",
            "offset": [
                11548,
                12140
            ],
            "op": "ISZERO",
            "path": "27"
        },
        "4631": {
            "fn": "BytesLib.slice",
            "offset": [
                11548,
                12140
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x122A"
        },
        "4634": {
            "fn": "BytesLib.slice",
            "offset": [
                11548,
                12140
            ],
            "op": "JUMPI",
            "path": "27"
        },
        "4635": {
            "fn": "BytesLib.slice",
            "offset": [
                12111,
                12120
            ],
            "op": "DUP1",
            "path": "27"
        },
        "4636": {
            "fn": "BytesLib.slice",
            "offset": [
                12111,
                12120
            ],
            "op": "MLOAD",
            "path": "27"
        },
        "4637": {
            "fn": "BytesLib.slice",
            "offset": [
                12100,
                12121
            ],
            "op": "DUP4",
            "path": "27"
        },
        "4638": {
            "fn": "BytesLib.slice",
            "offset": [
                12100,
                12121
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4639": {
            "fn": "BytesLib.slice",
            "offset": [
                12011,
                12015
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x20"
        },
        "4641": {
            "fn": "BytesLib.slice",
            "offset": [
                12003,
                12016
            ],
            "op": "SWAP3",
            "path": "27"
        },
        "4642": {
            "fn": "BytesLib.slice",
            "offset": [
                12003,
                12016
            ],
            "op": "DUP4",
            "path": "27"
        },
        "4643": {
            "fn": "BytesLib.slice",
            "offset": [
                12003,
                12016
            ],
            "op": "ADD",
            "path": "27"
        },
        "4644": {
            "fn": "BytesLib.slice",
            "offset": [
                12003,
                12016
            ],
            "op": "SWAP3",
            "path": "27"
        },
        "4645": {
            "fn": "BytesLib.slice",
            "offset": [
                12044,
                12057
            ],
            "op": "ADD",
            "path": "27"
        },
        "4646": {
            "fn": "BytesLib.slice",
            "offset": [
                11548,
                12140
            ],
            "op": "PUSH2",
            "path": "27",
            "value": "0x1212"
        },
        "4649": {
            "fn": "BytesLib.slice",
            "offset": [
                11548,
                12140
            ],
            "op": "JUMP",
            "path": "27"
        },
        "4650": {
            "fn": "BytesLib.slice",
            "offset": [
                11548,
                12140
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4651": {
            "op": "POP"
        },
        "4652": {
            "op": "POP"
        },
        "4653": {
            "fn": "BytesLib.slice",
            "offset": [
                12160,
                12186
            ],
            "op": "DUP6",
            "path": "27"
        },
        "4654": {
            "fn": "BytesLib.slice",
            "offset": [
                12160,
                12186
            ],
            "op": "DUP5",
            "path": "27"
        },
        "4655": {
            "fn": "BytesLib.slice",
            "offset": [
                12160,
                12186
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4656": {
            "fn": "BytesLib.slice",
            "offset": [
                12372,
                12374
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x1F"
        },
        "4658": {
            "fn": "BytesLib.slice",
            "offset": [
                12355,
                12366
            ],
            "op": "ADD",
            "path": "27"
        },
        "4659": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "4661": {
            "op": "NOT"
        },
        "4662": {
            "fn": "BytesLib.slice",
            "offset": [
                12351,
                12376
            ],
            "op": "AND",
            "path": "27"
        },
        "4663": {
            "fn": "BytesLib.slice",
            "offset": [
                12345,
                12349
            ],
            "op": "PUSH1",
            "path": "27",
            "value": "0x40"
        },
        "4665": {
            "fn": "BytesLib.slice",
            "offset": [
                12338,
                12377
            ],
            "op": "MSTORE",
            "path": "27"
        },
        "4666": {
            "op": "POP"
        },
        "4667": {
            "fn": "BytesLib.slice",
            "offset": [
                10132,
                12796
            ],
            "op": "JUMPDEST",
            "path": "27"
        },
        "4668": {
            "op": "POP"
        },
        "4669": {
            "fn": "BytesLib.slice",
            "offset": [
                12826,
                12835
            ],
            "op": "SWAP5",
            "path": "27",
            "statement": 59
        },
        "4670": {
            "fn": "BytesLib.slice",
            "offset": [
                9785,
                12843
            ],
            "op": "SWAP4",
            "path": "27"
        },
        "4671": {
            "op": "POP"
        },
        "4672": {
            "op": "POP"
        },
        "4673": {
            "op": "POP"
        },
        "4674": {
            "op": "POP"
        },
        "4675": {
            "fn": "BytesLib.slice",
            "jump": "o",
            "offset": [
                9785,
                12843
            ],
            "op": "JUMP",
            "path": "27"
        },
        "4676": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                15472,
                19539
            ],
            "op": "JUMPDEST",
            "path": "26"
        },
        "4677": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                15588,
                15602
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x0"
        },
        "4679": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                15588,
                15602
            ],
            "op": "DUP1",
            "path": "26"
        },
        "4680": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                15588,
                15602
            ],
            "op": "DUP1",
            "path": "26"
        },
        "4681": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "4683": {
            "op": "NOT"
        },
        "4684": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16084,
                16085
            ],
            "op": "DUP6",
            "path": "26"
        },
        "4685": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16081,
                16082
            ],
            "op": "DUP8",
            "path": "26"
        },
        "4686": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16074,
                16094
            ],
            "op": "MULMOD",
            "path": "26"
        },
        "4687": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16124,
                16125
            ],
            "op": "DUP6",
            "path": "26"
        },
        "4688": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16121,
                16122
            ],
            "op": "DUP8",
            "path": "26"
        },
        "4689": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16117,
                16126
            ],
            "op": "MUL",
            "path": "26"
        },
        "4690": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16108,
                16126
            ],
            "op": "SWAP3",
            "path": "26"
        },
        "4691": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16108,
                16126
            ],
            "op": "POP",
            "path": "26"
        },
        "4692": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16176,
                16181
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4693": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16172,
                16174
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4694": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16169,
                16182
            ],
            "op": "LT",
            "path": "26"
        },
        "4695": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16161,
                16166
            ],
            "op": "DUP4",
            "path": "26"
        },
        "4696": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16157,
                16159
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4697": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16153,
                16167
            ],
            "op": "SUB",
            "path": "26"
        },
        "4698": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16149,
                16183
            ],
            "op": "SUB",
            "path": "26"
        },
        "4699": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16140,
                16183
            ],
            "op": "SWAP2",
            "path": "26"
        },
        "4700": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16140,
                16183
            ],
            "op": "POP",
            "path": "26"
        },
        "4701": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16140,
                16183
            ],
            "op": "POP",
            "path": "26"
        },
        "4702": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16270,
                16275
            ],
            "op": "DUP1",
            "path": "26"
        },
        "4703": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16279,
                16280
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x0"
        },
        "4705": {
            "branch": 106,
            "fn": "PRBMath.mulDiv",
            "offset": [
                16270,
                16280
            ],
            "op": "SUB",
            "path": "26"
        },
        "4706": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16266,
                16409
            ],
            "op": "PUSH2",
            "path": "26",
            "value": "0x127E"
        },
        "4709": {
            "branch": 106,
            "fn": "PRBMath.mulDiv",
            "offset": [
                16266,
                16409
            ],
            "op": "JUMPI",
            "path": "26"
        },
        "4710": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16343,
                16354
            ],
            "op": "DUP4",
            "path": "26",
            "statement": 60
        },
        "4711": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16340
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4712": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16354
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4713": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16354
            ],
            "op": "PUSH2",
            "path": "26",
            "value": "0x1274"
        },
        "4716": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16354
            ],
            "op": "JUMPI",
            "path": "26"
        },
        "4717": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16354
            ],
            "op": "PUSH2",
            "path": "26",
            "value": "0x1274"
        },
        "4720": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16354
            ],
            "op": "PUSH2",
            "path": "26",
            "value": "0x1A7E"
        },
        "4723": {
            "fn": "PRBMath.mulDiv",
            "jump": "i",
            "offset": [
                16335,
                16354
            ],
            "op": "JUMP",
            "path": "26"
        },
        "4724": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16354
            ],
            "op": "JUMPDEST",
            "path": "26"
        },
        "4725": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16335,
                16354
            ],
            "op": "DIV",
            "path": "26"
        },
        "4726": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16326,
                16354
            ],
            "op": "SWAP3",
            "path": "26"
        },
        "4727": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16326,
                16354
            ],
            "op": "POP",
            "path": "26"
        },
        "4728": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16384,
                16397
            ],
            "op": "POP",
            "path": "26",
            "statement": 61
        },
        "4729": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16384,
                16397
            ],
            "op": "POP",
            "path": "26"
        },
        "4730": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16384,
                16397
            ],
            "op": "PUSH2",
            "path": "26",
            "value": "0xAC4"
        },
        "4733": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16384,
                16397
            ],
            "op": "JUMP",
            "path": "26"
        },
        "4734": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16266,
                16409
            ],
            "op": "JUMPDEST",
            "path": "26"
        },
        "4735": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16519,
                16530
            ],
            "op": "DUP4",
            "path": "26",
            "statement": 62
        },
        "4736": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16510,
                16515
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4737": {
            "branch": 107,
            "fn": "PRBMath.mulDiv",
            "offset": [
                16510,
                16530
            ],
            "op": "LT",
            "path": "26"
        },
        "4738": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16506,
                16609
            ],
            "op": "PUSH2",
            "path": "26",
            "value": "0x12A8"
        },
        "4741": {
            "branch": 107,
            "fn": "PRBMath.mulDiv",
            "offset": [
                16506,
                16609
            ],
            "op": "JUMPI",
            "path": "26"
        },
        "4742": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x40"
        },
        "4744": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "MLOAD",
            "path": "26"
        },
        "4745": {
            "op": "PUSH4",
            "value": "0x1DCF3063"
        },
        "4750": {
            "op": "PUSH1",
            "value": "0xE2"
        },
        "4752": {
            "op": "SHL"
        },
        "4753": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4754": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "MSTORE",
            "path": "26"
        },
        "4755": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x4"
        },
        "4757": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4758": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "ADD",
            "path": "26"
        },
        "4759": {
            "op": "DUP3"
        },
        "4760": {
            "op": "SWAP1"
        },
        "4761": {
            "op": "MSTORE"
        },
        "4762": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4764": {
            "op": "DUP2"
        },
        "4765": {
            "op": "ADD"
        },
        "4766": {
            "op": "DUP6"
        },
        "4767": {
            "op": "SWAP1"
        },
        "4768": {
            "op": "MSTORE"
        },
        "4769": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4771": {
            "op": "ADD"
        },
        "4772": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16554,
                16597
            ],
            "op": "PUSH2",
            "path": "26",
            "value": "0x69D"
        },
        "4775": {
            "op": "JUMP"
        },
        "4776": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16506,
                16609
            ],
            "op": "JUMPDEST",
            "path": "26"
        },
        "4777": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16851,
                16868
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x0"
        },
        "4779": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16977,
                16988
            ],
            "op": "DUP5",
            "path": "26"
        },
        "4780": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16974,
                16975
            ],
            "op": "DUP7",
            "path": "26"
        },
        "4781": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16971,
                16972
            ],
            "op": "DUP9",
            "path": "26"
        },
        "4782": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                16964,
                16989
            ],
            "op": "MULMOD",
            "path": "26"
        },
        "4783": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18415,
                18416
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x2"
        },
        "4785": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17534,
                17535
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x1"
        },
        "4787": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17519,
                17531
            ],
            "op": "DUP8",
            "path": "26"
        },
        "4788": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17519,
                17531
            ],
            "op": "NOT",
            "path": "26"
        },
        "4789": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17519,
                17535
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4790": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17519,
                17535
            ],
            "op": "ADD",
            "path": "26"
        },
        "4791": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17504,
                17536
            ],
            "op": "DUP9",
            "path": "26"
        },
        "4792": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17504,
                17536
            ],
            "op": "AND",
            "path": "26"
        },
        "4793": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17645,
                17670
            ],
            "op": "SWAP8",
            "path": "26"
        },
        "4794": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17645,
                17670
            ],
            "op": "DUP9",
            "path": "26"
        },
        "4795": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17645,
                17670
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4796": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17645,
                17670
            ],
            "op": "DIV",
            "path": "26"
        },
        "4797": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18396,
                18397
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x3"
        },
        "4799": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18396,
                18411
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4800": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18396,
                18411
            ],
            "op": "MUL",
            "path": "26"
        },
        "4801": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18395,
                18416
            ],
            "op": "DUP4",
            "path": "26"
        },
        "4802": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18395,
                18416
            ],
            "op": "XOR",
            "path": "26"
        },
        "4803": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18652,
                18673
            ],
            "op": "DUP1",
            "path": "26",
            "statement": 63
        },
        "4804": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18652,
                18673
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4805": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18652,
                18673
            ],
            "op": "MUL",
            "path": "26"
        },
        "4806": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18648,
                18673
            ],
            "op": "DUP5",
            "path": "26"
        },
        "4807": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18648,
                18673
            ],
            "op": "SUB",
            "path": "26"
        },
        "4808": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18637,
                18673
            ],
            "op": "MUL",
            "path": "26"
        },
        "4809": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18722,
                18743
            ],
            "op": "DUP1",
            "path": "26",
            "statement": 64
        },
        "4810": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18722,
                18743
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4811": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18722,
                18743
            ],
            "op": "MUL",
            "path": "26"
        },
        "4812": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18718,
                18743
            ],
            "op": "DUP5",
            "path": "26"
        },
        "4813": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18718,
                18743
            ],
            "op": "SUB",
            "path": "26"
        },
        "4814": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18707,
                18743
            ],
            "op": "MUL",
            "path": "26"
        },
        "4815": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18793,
                18814
            ],
            "op": "DUP1",
            "path": "26",
            "statement": 65
        },
        "4816": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18793,
                18814
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4817": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18793,
                18814
            ],
            "op": "MUL",
            "path": "26"
        },
        "4818": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18789,
                18814
            ],
            "op": "DUP5",
            "path": "26"
        },
        "4819": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18789,
                18814
            ],
            "op": "SUB",
            "path": "26"
        },
        "4820": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18778,
                18814
            ],
            "op": "MUL",
            "path": "26"
        },
        "4821": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18864,
                18885
            ],
            "op": "DUP1",
            "path": "26",
            "statement": 66
        },
        "4822": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18864,
                18885
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4823": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18864,
                18885
            ],
            "op": "MUL",
            "path": "26"
        },
        "4824": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18860,
                18885
            ],
            "op": "DUP5",
            "path": "26"
        },
        "4825": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18860,
                18885
            ],
            "op": "SUB",
            "path": "26"
        },
        "4826": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18849,
                18885
            ],
            "op": "MUL",
            "path": "26"
        },
        "4827": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18935,
                18956
            ],
            "op": "DUP1",
            "path": "26",
            "statement": 67
        },
        "4828": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18935,
                18956
            ],
            "op": "DUP3",
            "path": "26"
        },
        "4829": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18935,
                18956
            ],
            "op": "MUL",
            "path": "26"
        },
        "4830": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18931,
                18956
            ],
            "op": "DUP5",
            "path": "26"
        },
        "4831": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18931,
                18956
            ],
            "op": "SUB",
            "path": "26"
        },
        "4832": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18920,
                18956
            ],
            "op": "MUL",
            "path": "26"
        },
        "4833": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19007,
                19028
            ],
            "op": "SWAP1",
            "path": "26",
            "statement": 68
        },
        "4834": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19007,
                19028
            ],
            "op": "DUP2",
            "path": "26"
        },
        "4835": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19007,
                19028
            ],
            "op": "MUL",
            "path": "26"
        },
        "4836": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19003,
                19028
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4837": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19003,
                19028
            ],
            "op": "SWAP3",
            "path": "26"
        },
        "4838": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19003,
                19028
            ],
            "op": "SUB",
            "path": "26"
        },
        "4839": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18992,
                19028
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4840": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18992,
                19028
            ],
            "op": "SWAP2",
            "path": "26"
        },
        "4841": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18992,
                19028
            ],
            "op": "MUL",
            "path": "26"
        },
        "4842": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17486,
                17501
            ],
            "op": "PUSH1",
            "path": "26",
            "value": "0x0"
        },
        "4844": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17917,
                17932
            ],
            "op": "DUP9",
            "path": "26"
        },
        "4845": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17917,
                17932
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4846": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17917,
                17932
            ],
            "op": "SUB",
            "path": "26"
        },
        "4847": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17913,
                17942
            ],
            "op": "DUP9",
            "path": "26"
        },
        "4848": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17913,
                17942
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4849": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17913,
                17942
            ],
            "op": "DIV",
            "path": "26"
        },
        "4850": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17909,
                17946
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4851": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17909,
                17946
            ],
            "op": "SWAP2",
            "path": "26"
        },
        "4852": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17909,
                17946
            ],
            "op": "ADD",
            "path": "26"
        },
        "4853": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17086,
                17106
            ],
            "op": "DUP6",
            "path": "26"
        },
        "4854": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17086,
                17106
            ],
            "op": "DUP4",
            "path": "26"
        },
        "4855": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17086,
                17106
            ],
            "op": "GT",
            "path": "26"
        },
        "4856": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17075,
                17107
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4857": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17075,
                17107
            ],
            "op": "SWAP5",
            "path": "26"
        },
        "4858": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17075,
                17107
            ],
            "op": "SUB",
            "path": "26"
        },
        "4859": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18039,
                18054
            ],
            "op": "SWAP4",
            "path": "26",
            "statement": 69
        },
        "4860": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18039,
                18054
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4861": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18039,
                18054
            ],
            "op": "SWAP4",
            "path": "26"
        },
        "4862": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18039,
                18054
            ],
            "op": "MUL",
            "path": "26"
        },
        "4863": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17130,
                17151
            ],
            "op": "SWAP4",
            "path": "26"
        },
        "4864": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17130,
                17151
            ],
            "op": "SUB",
            "path": "26"
        },
        "4865": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17752,
                17771
            ],
            "op": "SWAP5",
            "path": "26"
        },
        "4866": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17752,
                17771
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4867": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17752,
                17771
            ],
            "op": "SWAP5",
            "path": "26"
        },
        "4868": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                17752,
                17771
            ],
            "op": "DIV",
            "path": "26"
        },
        "4869": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18030,
                18054
            ],
            "op": "SWAP2",
            "path": "26"
        },
        "4870": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18030,
                18054
            ],
            "op": "SWAP1",
            "path": "26"
        },
        "4871": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18030,
                18054
            ],
            "op": "SWAP2",
            "path": "26"
        },
        "4872": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                18030,
                18054
            ],
            "op": "OR",
            "path": "26"
        },
        "4873": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19477,
                19492
            ],
            "op": "MUL",
            "path": "26",
            "statement": 70
        },
        "4874": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19477,
                19492
            ],
            "op": "SWAP5",
            "path": "26"
        },
        "4875": {
            "fn": "PRBMath.mulDiv",
            "offset": [
                19477,
                19492
            ],
            "op": "SWAP4",
            "path": "26"
        },
        "4876": {
            "op": "POP"
        },
        "4877": {
            "op": "POP"
        },
        "4878": {
            "op": "POP"
        },
        "4879": {
            "op": "POP"
        },
        "4880": {
            "fn": "PRBMath.mulDiv",
            "jump": "o",
            "offset": [
                15472,
                19539
            ],
            "op": "JUMP",
            "path": "26"
        },
        "4881": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1337,
                2499
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "4882": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1540,
                1557
            ],
            "op": "PUSH1",
            "path": "7",
            "value": "0x0"
        },
        "4884": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1589,
                1602
            ],
            "op": "DUP4",
            "path": "7"
        },
        "4885": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4887": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4889": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4891": {
            "op": "SHL"
        },
        "4892": {
            "op": "SUB"
        },
        "4893": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1573,
                1602
            ],
            "op": "AND",
            "path": "7"
        },
        "4894": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1573,
                1586
            ],
            "op": "DUP6",
            "path": "7"
        },
        "4895": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4897": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4899": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4901": {
            "op": "SHL"
        },
        "4902": {
            "op": "SUB"
        },
        "4903": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1573,
                1602
            ],
            "op": "AND",
            "path": "7"
        },
        "4904": {
            "branch": 93,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1573,
                1602
            ],
            "op": "GT",
            "path": "7"
        },
        "4905": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1569,
                1679
            ],
            "op": "ISZERO",
            "path": "7"
        },
        "4906": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1569,
                1679
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x1331"
        },
        "4909": {
            "branch": 93,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1569,
                1679
            ],
            "op": "JUMPI",
            "path": "7"
        },
        "4910": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1650,
                1663
            ],
            "op": "SWAP3",
            "path": "7",
            "statement": 71
        },
        "4911": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1650,
                1663
            ],
            "op": "SWAP4",
            "path": "7"
        },
        "4912": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1665,
                1678
            ],
            "op": "SWAP3",
            "path": "7"
        },
        "4913": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1569,
                1679
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "4914": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1710,
                1723
            ],
            "op": "DUP5",
            "path": "7"
        },
        "4915": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4917": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4919": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4921": {
            "op": "SHL"
        },
        "4922": {
            "op": "SUB"
        },
        "4923": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1694,
                1723
            ],
            "op": "AND",
            "path": "7"
        },
        "4924": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1694,
                1706
            ],
            "op": "DUP7",
            "path": "7"
        },
        "4925": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4927": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4929": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4931": {
            "op": "SHL"
        },
        "4932": {
            "op": "SUB"
        },
        "4933": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1694,
                1723
            ],
            "op": "AND",
            "path": "7"
        },
        "4934": {
            "branch": 94,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1694,
                1723
            ],
            "op": "GT",
            "path": "7"
        },
        "4935": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1690,
                2493
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x135C"
        },
        "4938": {
            "branch": 94,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1690,
                2493
            ],
            "op": "JUMPI",
            "path": "7"
        },
        "4939": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1751,
                1874
            ],
            "op": "PUSH2",
            "path": "7",
            "statement": 72,
            "value": "0x1355"
        },
        "4942": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1791,
                1804
            ],
            "op": "DUP6",
            "path": "7"
        },
        "4943": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1822,
                1835
            ],
            "op": "DUP6",
            "path": "7"
        },
        "4944": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1853,
                1860
            ],
            "op": "DUP6",
            "path": "7"
        },
        "4945": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1751,
                1773
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x13C8"
        },
        "4948": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "jump": "i",
            "offset": [
                1751,
                1874
            ],
            "op": "JUMP",
            "path": "7"
        },
        "4949": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1751,
                1874
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "4950": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1739,
                1874
            ],
            "op": "SWAP1",
            "path": "7"
        },
        "4951": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1739,
                1874
            ],
            "op": "POP",
            "path": "7"
        },
        "4952": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1690,
                2493
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0xF97"
        },
        "4955": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1690,
                2493
            ],
            "op": "JUMP",
            "path": "7"
        },
        "4956": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1690,
                2493
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "4957": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1911,
                1924
            ],
            "op": "DUP4",
            "path": "7"
        },
        "4958": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4960": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4962": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4964": {
            "op": "SHL"
        },
        "4965": {
            "op": "SUB"
        },
        "4966": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1895,
                1924
            ],
            "op": "AND",
            "path": "7"
        },
        "4967": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1895,
                1907
            ],
            "op": "DUP7",
            "path": "7"
        },
        "4968": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4970": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4972": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4974": {
            "op": "SHL"
        },
        "4975": {
            "op": "SUB"
        },
        "4976": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1895,
                1924
            ],
            "op": "AND",
            "path": "7"
        },
        "4977": {
            "branch": 95,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1895,
                1924
            ],
            "op": "GT",
            "path": "7"
        },
        "4978": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1891,
                2493
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x13BD"
        },
        "4981": {
            "branch": 95,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1891,
                2493
            ],
            "op": "JUMPI",
            "path": "7"
        },
        "4982": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1940,
                1958
            ],
            "op": "PUSH1",
            "path": "7",
            "value": "0x0"
        },
        "4984": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1961,
                2083
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x1382"
        },
        "4987": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2001,
                2013
            ],
            "op": "DUP8",
            "path": "7"
        },
        "4988": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2031,
                2044
            ],
            "op": "DUP7",
            "path": "7"
        },
        "4989": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2062,
                2069
            ],
            "op": "DUP7",
            "path": "7"
        },
        "4990": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1961,
                1983
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x13C8"
        },
        "4993": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "jump": "i",
            "offset": [
                1961,
                2083
            ],
            "op": "JUMP",
            "path": "7"
        },
        "4994": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1961,
                2083
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "4995": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1940,
                2083
            ],
            "op": "SWAP1",
            "path": "7"
        },
        "4996": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1940,
                2083
            ],
            "op": "POP",
            "path": "7"
        },
        "4997": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2097,
                2115
            ],
            "op": "PUSH1",
            "path": "7",
            "value": "0x0"
        },
        "4999": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2118,
                2240
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x1391"
        },
        "5002": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2158,
                2171
            ],
            "op": "DUP8",
            "path": "7"
        },
        "5003": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2189,
                2201
            ],
            "op": "DUP10",
            "path": "7"
        },
        "5004": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2219,
                2226
            ],
            "op": "DUP7",
            "path": "7"
        },
        "5005": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2118,
                2140
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x142A"
        },
        "5008": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "jump": "i",
            "offset": [
                2118,
                2240
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5009": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2118,
                2240
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5010": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2097,
                2240
            ],
            "op": "SWAP1",
            "path": "7"
        },
        "5011": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2097,
                2240
            ],
            "op": "POP",
            "path": "7"
        },
        "5012": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2280,
                2290
            ],
            "op": "DUP1",
            "path": "7",
            "statement": 73
        },
        "5013": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5015": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5017": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "5019": {
            "op": "SHL"
        },
        "5020": {
            "op": "SUB"
        },
        "5021": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2290
            ],
            "op": "AND",
            "path": "7"
        },
        "5022": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2277
            ],
            "op": "DUP3",
            "path": "7"
        },
        "5023": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5025": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5027": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "5029": {
            "op": "SHL"
        },
        "5030": {
            "op": "SUB"
        },
        "5031": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2290
            ],
            "op": "AND",
            "path": "7"
        },
        "5032": {
            "branch": 96,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2290
            ],
            "op": "LT",
            "path": "7"
        },
        "5033": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2316
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x13B2"
        },
        "5036": {
            "branch": 96,
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2316
            ],
            "op": "JUMPI",
            "path": "7"
        },
        "5037": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2306,
                2316
            ],
            "op": "DUP1",
            "path": "7"
        },
        "5038": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2316
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x13B4"
        },
        "5041": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2316
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5042": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2316
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5043": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2293,
                2303
            ],
            "op": "DUP2",
            "path": "7"
        },
        "5044": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2267,
                2316
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5045": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2255,
                2316
            ],
            "op": "SWAP3",
            "path": "7"
        },
        "5046": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2255,
                2316
            ],
            "op": "POP",
            "path": "7"
        },
        "5047": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1926,
                2327
            ],
            "op": "POP",
            "path": "7"
        },
        "5048": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1926,
                2327
            ],
            "op": "POP",
            "path": "7"
        },
        "5049": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1891,
                2493
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0xF97"
        },
        "5052": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1891,
                2493
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5053": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                1891,
                2493
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5054": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2359,
                2482
            ],
            "op": "PUSH2",
            "path": "7",
            "statement": 74,
            "value": "0xAEA"
        },
        "5057": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2399,
                2412
            ],
            "op": "DUP6",
            "path": "7"
        },
        "5058": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2430,
                2443
            ],
            "op": "DUP6",
            "path": "7"
        },
        "5059": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2461,
                2468
            ],
            "op": "DUP5",
            "path": "7"
        },
        "5060": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "offset": [
                2359,
                2381
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x142A"
        },
        "5063": {
            "fn": "LiquidityMath.getLiquidityForAmounts",
            "jump": "i",
            "offset": [
                2359,
                2482
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5064": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                239,
                796
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5065": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                387,
                404
            ],
            "op": "PUSH1",
            "path": "7",
            "value": "0x0"
        },
        "5067": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                436,
                449
            ],
            "op": "DUP3",
            "path": "7"
        },
        "5068": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5070": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5072": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5074": {
            "op": "SHL"
        },
        "5075": {
            "op": "SUB"
        },
        "5076": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                420,
                449
            ],
            "op": "AND",
            "path": "7"
        },
        "5077": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                420,
                433
            ],
            "op": "DUP5",
            "path": "7"
        },
        "5078": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5080": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5082": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5084": {
            "op": "SHL"
        },
        "5085": {
            "op": "SUB"
        },
        "5086": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                420,
                449
            ],
            "op": "AND",
            "path": "7"
        },
        "5087": {
            "branch": 97,
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                420,
                449
            ],
            "op": "GT",
            "path": "7"
        },
        "5088": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                416,
                526
            ],
            "op": "ISZERO",
            "path": "7"
        },
        "5089": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                416,
                526
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x13E8"
        },
        "5092": {
            "branch": 97,
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                416,
                526
            ],
            "op": "JUMPI",
            "path": "7"
        },
        "5093": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                497,
                510
            ],
            "op": "SWAP2",
            "path": "7",
            "statement": 75
        },
        "5094": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                497,
                510
            ],
            "op": "SWAP3",
            "path": "7"
        },
        "5095": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                512,
                525
            ],
            "op": "SWAP2",
            "path": "7"
        },
        "5096": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                416,
                526
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5097": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                537,
                557
            ],
            "op": "PUSH1",
            "path": "7",
            "value": "0x0"
        },
        "5099": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                560,
                668
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x140B"
        },
        "5102": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                588,
                601
            ],
            "op": "DUP6",
            "path": "7"
        },
        "5103": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5105": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5107": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5109": {
            "op": "SHL"
        },
        "5110": {
            "op": "SUB"
        },
        "5111": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                560,
                668
            ],
            "op": "AND",
            "path": "7"
        },
        "5112": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                615,
                628
            ],
            "op": "DUP6",
            "path": "7"
        },
        "5113": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5115": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5117": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5119": {
            "op": "SHL"
        },
        "5120": {
            "op": "SUB"
        },
        "5121": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                560,
                668
            ],
            "op": "AND",
            "path": "7"
        },
        "5122": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5124": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5126": {
            "op": "SHL"
        },
        "5127": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                560,
                574
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x1244"
        },
        "5130": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "jump": "i",
            "offset": [
                560,
                668
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5131": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                560,
                668
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5132": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                537,
                668
            ],
            "op": "SWAP1",
            "path": "7"
        },
        "5133": {
            "op": "POP"
        },
        "5134": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                711,
                779
            ],
            "op": "PUSH2",
            "path": "7",
            "statement": 76,
            "value": "0xAC0"
        },
        "5137": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                726,
                733
            ],
            "op": "DUP4",
            "path": "7"
        },
        "5138": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                537,
                668
            ],
            "op": "DUP3",
            "path": "7"
        },
        "5139": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                749,
                778
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x141C"
        },
        "5142": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                765,
                778
            ],
            "op": "DUP9",
            "path": "7"
        },
        "5143": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                749,
                762
            ],
            "op": "DUP9",
            "path": "7"
        },
        "5144": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                749,
                778
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x1914"
        },
        "5147": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "jump": "i",
            "offset": [
                749,
                778
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5148": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                749,
                778
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5149": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5151": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5153": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5155": {
            "op": "SHL"
        },
        "5156": {
            "op": "SUB"
        },
        "5157": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                711,
                779
            ],
            "op": "AND",
            "path": "7"
        },
        "5158": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "offset": [
                711,
                725
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x1244"
        },
        "5161": {
            "fn": "LiquidityMath.getLiquidityForAmount0",
            "jump": "i",
            "offset": [
                711,
                779
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5162": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                849,
                1331
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5163": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                997,
                1014
            ],
            "op": "PUSH1",
            "path": "7",
            "value": "0x0"
        },
        "5165": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1046,
                1059
            ],
            "op": "DUP3",
            "path": "7"
        },
        "5166": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5168": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5170": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5172": {
            "op": "SHL"
        },
        "5173": {
            "op": "SUB"
        },
        "5174": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1030,
                1059
            ],
            "op": "AND",
            "path": "7"
        },
        "5175": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1030,
                1043
            ],
            "op": "DUP5",
            "path": "7"
        },
        "5176": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5178": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5180": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5182": {
            "op": "SHL"
        },
        "5183": {
            "op": "SUB"
        },
        "5184": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1030,
                1059
            ],
            "op": "AND",
            "path": "7"
        },
        "5185": {
            "branch": 98,
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1030,
                1059
            ],
            "op": "GT",
            "path": "7"
        },
        "5186": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1026,
                1136
            ],
            "op": "ISZERO",
            "path": "7"
        },
        "5187": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1026,
                1136
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x144A"
        },
        "5190": {
            "branch": 98,
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1026,
                1136
            ],
            "op": "JUMPI",
            "path": "7"
        },
        "5191": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1107,
                1120
            ],
            "op": "SWAP2",
            "path": "7",
            "statement": 77
        },
        "5192": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1107,
                1120
            ],
            "op": "SWAP3",
            "path": "7"
        },
        "5193": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1122,
                1135
            ],
            "op": "SWAP2",
            "path": "7"
        },
        "5194": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1026,
                1136
            ],
            "op": "JUMPDEST",
            "path": "7"
        },
        "5195": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1180,
                1314
            ],
            "op": "PUSH2",
            "path": "7",
            "statement": 78,
            "value": "0xF0E"
        },
        "5198": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1212,
                1219
            ],
            "op": "DUP3",
            "path": "7"
        },
        "5199": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5201": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5203": {
            "op": "SHL"
        },
        "5204": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1271,
                1300
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x141C"
        },
        "5207": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1287,
                1300
            ],
            "op": "DUP8",
            "path": "7"
        },
        "5208": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1271,
                1284
            ],
            "op": "DUP8",
            "path": "7"
        },
        "5209": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "offset": [
                1271,
                1300
            ],
            "op": "PUSH2",
            "path": "7",
            "value": "0x1914"
        },
        "5212": {
            "fn": "LiquidityMath.getLiquidityForAmount1",
            "jump": "i",
            "offset": [
                1271,
                1300
            ],
            "op": "JUMP",
            "path": "7"
        },
        "5213": {
            "op": "JUMPDEST"
        },
        "5214": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "5219": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "5221": {
            "op": "SHL"
        },
        "5222": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5224": {
            "op": "MSTORE"
        },
        "5225": {
            "op": "PUSH1",
            "value": "0x41"
        },
        "5227": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "5229": {
            "op": "MSTORE"
        },
        "5230": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "5232": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5234": {
            "op": "REVERT"
        },
        "5235": {
            "op": "JUMPDEST"
        },
        "5236": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5238": {
            "op": "DUP3"
        },
        "5239": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "5241": {
            "op": "DUP4"
        },
        "5242": {
            "op": "ADD"
        },
        "5243": {
            "op": "SLT"
        },
        "5244": {
            "op": "PUSH2",
            "value": "0x1484"
        },
        "5247": {
            "op": "JUMPI"
        },
        "5248": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5250": {
            "op": "DUP1"
        },
        "5251": {
            "op": "REVERT"
        },
        "5252": {
            "op": "JUMPDEST"
        },
        "5253": {
            "op": "DUP2"
        },
        "5254": {
            "op": "CALLDATALOAD"
        },
        "5255": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "5264": {
            "op": "DUP1"
        },
        "5265": {
            "op": "DUP3"
        },
        "5266": {
            "op": "GT"
        },
        "5267": {
            "op": "ISZERO"
        },
        "5268": {
            "op": "PUSH2",
            "value": "0x149F"
        },
        "5271": {
            "op": "JUMPI"
        },
        "5272": {
            "op": "PUSH2",
            "value": "0x149F"
        },
        "5275": {
            "op": "PUSH2",
            "value": "0x145D"
        },
        "5278": {
            "jump": "i",
            "op": "JUMP"
        },
        "5279": {
            "op": "JUMPDEST"
        },
        "5280": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "5282": {
            "op": "MLOAD"
        },
        "5283": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "5285": {
            "op": "DUP4"
        },
        "5286": {
            "op": "ADD"
        },
        "5287": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "5289": {
            "op": "NOT"
        },
        "5290": {
            "op": "SWAP1"
        },
        "5291": {
            "op": "DUP2"
        },
        "5292": {
            "op": "AND"
        },
        "5293": {
            "op": "PUSH1",
            "value": "0x3F"
        },
        "5295": {
            "op": "ADD"
        },
        "5296": {
            "op": "AND"
        },
        "5297": {
            "op": "DUP2"
        },
        "5298": {
            "op": "ADD"
        },
        "5299": {
            "op": "SWAP1"
        },
        "5300": {
            "op": "DUP3"
        },
        "5301": {
            "op": "DUP3"
        },
        "5302": {
            "op": "GT"
        },
        "5303": {
            "op": "DUP2"
        },
        "5304": {
            "op": "DUP4"
        },
        "5305": {
            "op": "LT"
        },
        "5306": {
            "op": "OR"
        },
        "5307": {
            "op": "ISZERO"
        },
        "5308": {
            "op": "PUSH2",
            "value": "0x14C7"
        },
        "5311": {
            "op": "JUMPI"
        },
        "5312": {
            "op": "PUSH2",
            "value": "0x14C7"
        },
        "5315": {
            "op": "PUSH2",
            "value": "0x145D"
        },
        "5318": {
            "jump": "i",
            "op": "JUMP"
        },
        "5319": {
            "op": "JUMPDEST"
        },
        "5320": {
            "op": "DUP2"
        },
        "5321": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "5323": {
            "op": "MSTORE"
        },
        "5324": {
            "op": "DUP4"
        },
        "5325": {
            "op": "DUP2"
        },
        "5326": {
            "op": "MSTORE"
        },
        "5327": {
            "op": "DUP7"
        },
        "5328": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5330": {
            "op": "DUP6"
        },
        "5331": {
            "op": "DUP9"
        },
        "5332": {
            "op": "ADD"
        },
        "5333": {
            "op": "ADD"
        },
        "5334": {
            "op": "GT"
        },
        "5335": {
            "op": "ISZERO"
        },
        "5336": {
            "op": "PUSH2",
            "value": "0x14E0"
        },
        "5339": {
            "op": "JUMPI"
        },
        "5340": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5342": {
            "op": "DUP1"
        },
        "5343": {
            "op": "REVERT"
        },
        "5344": {
            "op": "JUMPDEST"
        },
        "5345": {
            "op": "DUP4"
        },
        "5346": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5348": {
            "op": "DUP8"
        },
        "5349": {
            "op": "ADD"
        },
        "5350": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5352": {
            "op": "DUP4"
        },
        "5353": {
            "op": "ADD"
        },
        "5354": {
            "op": "CALLDATACOPY"
        },
        "5355": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5357": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5359": {
            "op": "DUP6"
        },
        "5360": {
            "op": "DUP4"
        },
        "5361": {
            "op": "ADD"
        },
        "5362": {
            "op": "ADD"
        },
        "5363": {
            "op": "MSTORE"
        },
        "5364": {
            "op": "DUP1"
        },
        "5365": {
            "op": "SWAP5"
        },
        "5366": {
            "op": "POP"
        },
        "5367": {
            "op": "POP"
        },
        "5368": {
            "op": "POP"
        },
        "5369": {
            "op": "POP"
        },
        "5370": {
            "op": "POP"
        },
        "5371": {
            "op": "SWAP3"
        },
        "5372": {
            "op": "SWAP2"
        },
        "5373": {
            "op": "POP"
        },
        "5374": {
            "op": "POP"
        },
        "5375": {
            "jump": "o",
            "op": "JUMP"
        },
        "5376": {
            "op": "JUMPDEST"
        },
        "5377": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5379": {
            "op": "DUP1"
        },
        "5380": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "5382": {
            "op": "DUP4"
        },
        "5383": {
            "op": "DUP6"
        },
        "5384": {
            "op": "SUB"
        },
        "5385": {
            "op": "SLT"
        },
        "5386": {
            "op": "ISZERO"
        },
        "5387": {
            "op": "PUSH2",
            "value": "0x1513"
        },
        "5390": {
            "op": "JUMPI"
        },
        "5391": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5393": {
            "op": "DUP1"
        },
        "5394": {
            "op": "REVERT"
        },
        "5395": {
            "op": "JUMPDEST"
        },
        "5396": {
            "op": "DUP3"
        },
        "5397": {
            "op": "CALLDATALOAD"
        },
        "5398": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "5407": {
            "op": "DUP2"
        },
        "5408": {
            "op": "GT"
        },
        "5409": {
            "op": "ISZERO"
        },
        "5410": {
            "op": "PUSH2",
            "value": "0x152A"
        },
        "5413": {
            "op": "JUMPI"
        },
        "5414": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5416": {
            "op": "DUP1"
        },
        "5417": {
            "op": "REVERT"
        },
        "5418": {
            "op": "JUMPDEST"
        },
        "5419": {
            "op": "PUSH2",
            "value": "0x1536"
        },
        "5422": {
            "op": "DUP6"
        },
        "5423": {
            "op": "DUP3"
        },
        "5424": {
            "op": "DUP7"
        },
        "5425": {
            "op": "ADD"
        },
        "5426": {
            "op": "PUSH2",
            "value": "0x1473"
        },
        "5429": {
            "jump": "i",
            "op": "JUMP"
        },
        "5430": {
            "op": "JUMPDEST"
        },
        "5431": {
            "op": "SWAP6"
        },
        "5432": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5434": {
            "op": "SWAP5"
        },
        "5435": {
            "op": "SWAP1"
        },
        "5436": {
            "op": "SWAP5"
        },
        "5437": {
            "op": "ADD"
        },
        "5438": {
            "op": "CALLDATALOAD"
        },
        "5439": {
            "op": "SWAP5"
        },
        "5440": {
            "op": "POP"
        },
        "5441": {
            "op": "POP"
        },
        "5442": {
            "op": "POP"
        },
        "5443": {
            "op": "POP"
        },
        "5444": {
            "jump": "o",
            "op": "JUMP"
        },
        "5445": {
            "op": "JUMPDEST"
        },
        "5446": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5448": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5450": {
            "op": "DUP3"
        },
        "5451": {
            "op": "ADD"
        },
        "5452": {
            "op": "DUP6"
        },
        "5453": {
            "op": "DUP4"
        },
        "5454": {
            "op": "MSTORE"
        },
        "5455": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5457": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5459": {
            "op": "DUP2"
        },
        "5460": {
            "op": "DUP6"
        },
        "5461": {
            "op": "ADD"
        },
        "5462": {
            "op": "MSTORE"
        },
        "5463": {
            "op": "DUP2"
        },
        "5464": {
            "op": "DUP7"
        },
        "5465": {
            "op": "MLOAD"
        },
        "5466": {
            "op": "DUP1"
        },
        "5467": {
            "op": "DUP5"
        },
        "5468": {
            "op": "MSTORE"
        },
        "5469": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "5471": {
            "op": "DUP7"
        },
        "5472": {
            "op": "ADD"
        },
        "5473": {
            "op": "SWAP2"
        },
        "5474": {
            "op": "POP"
        },
        "5475": {
            "op": "DUP3"
        },
        "5476": {
            "op": "DUP9"
        },
        "5477": {
            "op": "ADD"
        },
        "5478": {
            "op": "SWAP4"
        },
        "5479": {
            "op": "POP"
        },
        "5480": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5482": {
            "op": "JUMPDEST"
        },
        "5483": {
            "op": "DUP2"
        },
        "5484": {
            "op": "DUP2"
        },
        "5485": {
            "op": "LT"
        },
        "5486": {
            "op": "ISZERO"
        },
        "5487": {
            "op": "PUSH2",
            "value": "0x158F"
        },
        "5490": {
            "op": "JUMPI"
        },
        "5491": {
            "op": "DUP5"
        },
        "5492": {
            "op": "MLOAD"
        },
        "5493": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5495": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5497": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5499": {
            "op": "SHL"
        },
        "5500": {
            "op": "SUB"
        },
        "5501": {
            "op": "AND"
        },
        "5502": {
            "op": "DUP4"
        },
        "5503": {
            "op": "MSTORE"
        },
        "5504": {
            "op": "SWAP4"
        },
        "5505": {
            "op": "DUP4"
        },
        "5506": {
            "op": "ADD"
        },
        "5507": {
            "op": "SWAP4"
        },
        "5508": {
            "op": "SWAP2"
        },
        "5509": {
            "op": "DUP4"
        },
        "5510": {
            "op": "ADD"
        },
        "5511": {
            "op": "SWAP2"
        },
        "5512": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5514": {
            "op": "ADD"
        },
        "5515": {
            "op": "PUSH2",
            "value": "0x156A"
        },
        "5518": {
            "op": "JUMP"
        },
        "5519": {
            "op": "JUMPDEST"
        },
        "5520": {
            "op": "POP"
        },
        "5521": {
            "op": "POP"
        },
        "5522": {
            "op": "DUP5"
        },
        "5523": {
            "op": "DUP2"
        },
        "5524": {
            "op": "SUB"
        },
        "5525": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "5527": {
            "op": "DUP7"
        },
        "5528": {
            "op": "ADD"
        },
        "5529": {
            "op": "MSTORE"
        },
        "5530": {
            "op": "DUP6"
        },
        "5531": {
            "op": "MLOAD"
        },
        "5532": {
            "op": "DUP1"
        },
        "5533": {
            "op": "DUP3"
        },
        "5534": {
            "op": "MSTORE"
        },
        "5535": {
            "op": "SWAP1"
        },
        "5536": {
            "op": "DUP3"
        },
        "5537": {
            "op": "ADD"
        },
        "5538": {
            "op": "SWAP3"
        },
        "5539": {
            "op": "POP"
        },
        "5540": {
            "op": "DUP2"
        },
        "5541": {
            "op": "DUP7"
        },
        "5542": {
            "op": "ADD"
        },
        "5543": {
            "op": "SWAP1"
        },
        "5544": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5546": {
            "op": "JUMPDEST"
        },
        "5547": {
            "op": "DUP2"
        },
        "5548": {
            "op": "DUP2"
        },
        "5549": {
            "op": "LT"
        },
        "5550": {
            "op": "ISZERO"
        },
        "5551": {
            "op": "PUSH2",
            "value": "0x15C9"
        },
        "5554": {
            "op": "JUMPI"
        },
        "5555": {
            "op": "DUP3"
        },
        "5556": {
            "op": "MLOAD"
        },
        "5557": {
            "op": "PUSH1",
            "value": "0x2"
        },
        "5559": {
            "op": "SIGNEXTEND"
        },
        "5560": {
            "op": "DUP6"
        },
        "5561": {
            "op": "MSTORE"
        },
        "5562": {
            "op": "SWAP4"
        },
        "5563": {
            "op": "DUP4"
        },
        "5564": {
            "op": "ADD"
        },
        "5565": {
            "op": "SWAP4"
        },
        "5566": {
            "op": "SWAP2"
        },
        "5567": {
            "op": "DUP4"
        },
        "5568": {
            "op": "ADD"
        },
        "5569": {
            "op": "SWAP2"
        },
        "5570": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5572": {
            "op": "ADD"
        },
        "5573": {
            "op": "PUSH2",
            "value": "0x15AA"
        },
        "5576": {
            "op": "JUMP"
        },
        "5577": {
            "op": "JUMPDEST"
        },
        "5578": {
            "op": "POP"
        },
        "5579": {
            "op": "SWAP3"
        },
        "5580": {
            "op": "SWAP9"
        },
        "5581": {
            "op": "SWAP8"
        },
        "5582": {
            "op": "POP"
        },
        "5583": {
            "op": "POP"
        },
        "5584": {
            "op": "POP"
        },
        "5585": {
            "op": "POP"
        },
        "5586": {
            "op": "POP"
        },
        "5587": {
            "op": "POP"
        },
        "5588": {
            "op": "POP"
        },
        "5589": {
            "op": "POP"
        },
        "5590": {
            "jump": "o",
            "op": "JUMP"
        },
        "5591": {
            "op": "JUMPDEST"
        },
        "5592": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5594": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5596": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5598": {
            "op": "SHL"
        },
        "5599": {
            "op": "SUB"
        },
        "5600": {
            "op": "DUP2"
        },
        "5601": {
            "op": "AND"
        },
        "5602": {
            "op": "DUP2"
        },
        "5603": {
            "op": "EQ"
        },
        "5604": {
            "op": "PUSH2",
            "value": "0x15EC"
        },
        "5607": {
            "op": "JUMPI"
        },
        "5608": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5610": {
            "op": "DUP1"
        },
        "5611": {
            "op": "REVERT"
        },
        "5612": {
            "op": "JUMPDEST"
        },
        "5613": {
            "op": "POP"
        },
        "5614": {
            "jump": "o",
            "op": "JUMP"
        },
        "5615": {
            "op": "JUMPDEST"
        },
        "5616": {
            "op": "DUP1"
        },
        "5617": {
            "op": "CALLDATALOAD"
        },
        "5618": {
            "op": "PUSH3",
            "value": "0xFFFFFF"
        },
        "5622": {
            "op": "DUP2"
        },
        "5623": {
            "op": "AND"
        },
        "5624": {
            "op": "DUP2"
        },
        "5625": {
            "op": "EQ"
        },
        "5626": {
            "op": "PUSH2",
            "value": "0x1602"
        },
        "5629": {
            "op": "JUMPI"
        },
        "5630": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5632": {
            "op": "DUP1"
        },
        "5633": {
            "op": "REVERT"
        },
        "5634": {
            "op": "JUMPDEST"
        },
        "5635": {
            "op": "SWAP2"
        },
        "5636": {
            "op": "SWAP1"
        },
        "5637": {
            "op": "POP"
        },
        "5638": {
            "jump": "o",
            "op": "JUMP"
        },
        "5639": {
            "op": "JUMPDEST"
        },
        "5640": {
            "op": "DUP1"
        },
        "5641": {
            "op": "PUSH1",
            "value": "0x2"
        },
        "5643": {
            "op": "SIGNEXTEND"
        },
        "5644": {
            "op": "DUP2"
        },
        "5645": {
            "op": "EQ"
        },
        "5646": {
            "op": "PUSH2",
            "value": "0x15EC"
        },
        "5649": {
            "op": "JUMPI"
        },
        "5650": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5652": {
            "op": "DUP1"
        },
        "5653": {
            "op": "REVERT"
        },
        "5654": {
            "op": "JUMPDEST"
        },
        "5655": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5657": {
            "op": "DUP1"
        },
        "5658": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5660": {
            "op": "DUP1"
        },
        "5661": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5663": {
            "op": "DUP1"
        },
        "5664": {
            "op": "PUSH1",
            "value": "0xC0"
        },
        "5666": {
            "op": "DUP8"
        },
        "5667": {
            "op": "DUP10"
        },
        "5668": {
            "op": "SUB"
        },
        "5669": {
            "op": "SLT"
        },
        "5670": {
            "op": "ISZERO"
        },
        "5671": {
            "op": "PUSH2",
            "value": "0x162F"
        },
        "5674": {
            "op": "JUMPI"
        },
        "5675": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5677": {
            "op": "DUP1"
        },
        "5678": {
            "op": "REVERT"
        },
        "5679": {
            "op": "JUMPDEST"
        },
        "5680": {
            "op": "DUP7"
        },
        "5681": {
            "op": "CALLDATALOAD"
        },
        "5682": {
            "op": "PUSH2",
            "value": "0x163A"
        },
        "5685": {
            "op": "DUP2"
        },
        "5686": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "5689": {
            "jump": "i",
            "op": "JUMP"
        },
        "5690": {
            "op": "JUMPDEST"
        },
        "5691": {
            "op": "SWAP6"
        },
        "5692": {
            "op": "POP"
        },
        "5693": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5695": {
            "op": "DUP8"
        },
        "5696": {
            "op": "ADD"
        },
        "5697": {
            "op": "CALLDATALOAD"
        },
        "5698": {
            "op": "PUSH2",
            "value": "0x164A"
        },
        "5701": {
            "op": "DUP2"
        },
        "5702": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "5705": {
            "jump": "i",
            "op": "JUMP"
        },
        "5706": {
            "op": "JUMPDEST"
        },
        "5707": {
            "op": "SWAP5"
        },
        "5708": {
            "op": "POP"
        },
        "5709": {
            "op": "PUSH2",
            "value": "0x1658"
        },
        "5712": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "5714": {
            "op": "DUP9"
        },
        "5715": {
            "op": "ADD"
        },
        "5716": {
            "op": "PUSH2",
            "value": "0x15EF"
        },
        "5719": {
            "jump": "i",
            "op": "JUMP"
        },
        "5720": {
            "op": "JUMPDEST"
        },
        "5721": {
            "op": "SWAP4"
        },
        "5722": {
            "op": "POP"
        },
        "5723": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5725": {
            "op": "DUP8"
        },
        "5726": {
            "op": "ADD"
        },
        "5727": {
            "op": "CALLDATALOAD"
        },
        "5728": {
            "op": "PUSH2",
            "value": "0x1668"
        },
        "5731": {
            "op": "DUP2"
        },
        "5732": {
            "op": "PUSH2",
            "value": "0x1607"
        },
        "5735": {
            "jump": "i",
            "op": "JUMP"
        },
        "5736": {
            "op": "JUMPDEST"
        },
        "5737": {
            "op": "SWAP3"
        },
        "5738": {
            "op": "POP"
        },
        "5739": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "5741": {
            "op": "DUP8"
        },
        "5742": {
            "op": "ADD"
        },
        "5743": {
            "op": "CALLDATALOAD"
        },
        "5744": {
            "op": "PUSH2",
            "value": "0x1678"
        },
        "5747": {
            "op": "DUP2"
        },
        "5748": {
            "op": "PUSH2",
            "value": "0x1607"
        },
        "5751": {
            "jump": "i",
            "op": "JUMP"
        },
        "5752": {
            "op": "JUMPDEST"
        },
        "5753": {
            "op": "DUP1"
        },
        "5754": {
            "op": "SWAP3"
        },
        "5755": {
            "op": "POP"
        },
        "5756": {
            "op": "POP"
        },
        "5757": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5759": {
            "op": "DUP8"
        },
        "5760": {
            "op": "ADD"
        },
        "5761": {
            "op": "CALLDATALOAD"
        },
        "5762": {
            "op": "SWAP1"
        },
        "5763": {
            "op": "POP"
        },
        "5764": {
            "op": "SWAP3"
        },
        "5765": {
            "op": "SWAP6"
        },
        "5766": {
            "op": "POP"
        },
        "5767": {
            "op": "SWAP3"
        },
        "5768": {
            "op": "SWAP6"
        },
        "5769": {
            "op": "POP"
        },
        "5770": {
            "op": "SWAP3"
        },
        "5771": {
            "op": "SWAP6"
        },
        "5772": {
            "jump": "o",
            "op": "JUMP"
        },
        "5773": {
            "op": "JUMPDEST"
        },
        "5774": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5776": {
            "op": "DUP1"
        },
        "5777": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5779": {
            "op": "DUP1"
        },
        "5780": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5782": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5784": {
            "op": "DUP7"
        },
        "5785": {
            "op": "DUP9"
        },
        "5786": {
            "op": "SUB"
        },
        "5787": {
            "op": "SLT"
        },
        "5788": {
            "op": "ISZERO"
        },
        "5789": {
            "op": "PUSH2",
            "value": "0x16A5"
        },
        "5792": {
            "op": "JUMPI"
        },
        "5793": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5795": {
            "op": "DUP1"
        },
        "5796": {
            "op": "REVERT"
        },
        "5797": {
            "op": "JUMPDEST"
        },
        "5798": {
            "op": "DUP6"
        },
        "5799": {
            "op": "CALLDATALOAD"
        },
        "5800": {
            "op": "PUSH2",
            "value": "0x16B0"
        },
        "5803": {
            "op": "DUP2"
        },
        "5804": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "5807": {
            "jump": "i",
            "op": "JUMP"
        },
        "5808": {
            "op": "JUMPDEST"
        },
        "5809": {
            "op": "SWAP5"
        },
        "5810": {
            "op": "POP"
        },
        "5811": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5813": {
            "op": "DUP7"
        },
        "5814": {
            "op": "ADD"
        },
        "5815": {
            "op": "CALLDATALOAD"
        },
        "5816": {
            "op": "PUSH2",
            "value": "0x16C0"
        },
        "5819": {
            "op": "DUP2"
        },
        "5820": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "5823": {
            "jump": "i",
            "op": "JUMP"
        },
        "5824": {
            "op": "JUMPDEST"
        },
        "5825": {
            "op": "SWAP4"
        },
        "5826": {
            "op": "POP"
        },
        "5827": {
            "op": "PUSH2",
            "value": "0x16CE"
        },
        "5830": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "5832": {
            "op": "DUP8"
        },
        "5833": {
            "op": "ADD"
        },
        "5834": {
            "op": "PUSH2",
            "value": "0x15EF"
        },
        "5837": {
            "jump": "i",
            "op": "JUMP"
        },
        "5838": {
            "op": "JUMPDEST"
        },
        "5839": {
            "op": "SWAP3"
        },
        "5840": {
            "op": "POP"
        },
        "5841": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5843": {
            "op": "DUP7"
        },
        "5844": {
            "op": "ADD"
        },
        "5845": {
            "op": "CALLDATALOAD"
        },
        "5846": {
            "op": "SWAP2"
        },
        "5847": {
            "op": "POP"
        },
        "5848": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "5850": {
            "op": "DUP7"
        },
        "5851": {
            "op": "ADD"
        },
        "5852": {
            "op": "CALLDATALOAD"
        },
        "5853": {
            "op": "PUSH2",
            "value": "0x16E5"
        },
        "5856": {
            "op": "DUP2"
        },
        "5857": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "5860": {
            "jump": "i",
            "op": "JUMP"
        },
        "5861": {
            "op": "JUMPDEST"
        },
        "5862": {
            "op": "DUP1"
        },
        "5863": {
            "op": "SWAP2"
        },
        "5864": {
            "op": "POP"
        },
        "5865": {
            "op": "POP"
        },
        "5866": {
            "op": "SWAP3"
        },
        "5867": {
            "op": "SWAP6"
        },
        "5868": {
            "op": "POP"
        },
        "5869": {
            "op": "SWAP3"
        },
        "5870": {
            "op": "SWAP6"
        },
        "5871": {
            "op": "SWAP1"
        },
        "5872": {
            "op": "SWAP4"
        },
        "5873": {
            "op": "POP"
        },
        "5874": {
            "jump": "o",
            "op": "JUMP"
        },
        "5875": {
            "op": "JUMPDEST"
        },
        "5876": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5878": {
            "op": "DUP1"
        },
        "5879": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5881": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5883": {
            "op": "DUP5"
        },
        "5884": {
            "op": "DUP7"
        },
        "5885": {
            "op": "SUB"
        },
        "5886": {
            "op": "SLT"
        },
        "5887": {
            "op": "ISZERO"
        },
        "5888": {
            "op": "PUSH2",
            "value": "0x1708"
        },
        "5891": {
            "op": "JUMPI"
        },
        "5892": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5894": {
            "op": "DUP1"
        },
        "5895": {
            "op": "REVERT"
        },
        "5896": {
            "op": "JUMPDEST"
        },
        "5897": {
            "op": "DUP4"
        },
        "5898": {
            "op": "CALLDATALOAD"
        },
        "5899": {
            "op": "SWAP3"
        },
        "5900": {
            "op": "POP"
        },
        "5901": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5903": {
            "op": "DUP5"
        },
        "5904": {
            "op": "ADD"
        },
        "5905": {
            "op": "CALLDATALOAD"
        },
        "5906": {
            "op": "SWAP2"
        },
        "5907": {
            "op": "POP"
        },
        "5908": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "5910": {
            "op": "DUP5"
        },
        "5911": {
            "op": "ADD"
        },
        "5912": {
            "op": "CALLDATALOAD"
        },
        "5913": {
            "op": "PUSH8",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "5922": {
            "op": "DUP2"
        },
        "5923": {
            "op": "GT"
        },
        "5924": {
            "op": "ISZERO"
        },
        "5925": {
            "op": "PUSH2",
            "value": "0x172D"
        },
        "5928": {
            "op": "JUMPI"
        },
        "5929": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5931": {
            "op": "DUP1"
        },
        "5932": {
            "op": "REVERT"
        },
        "5933": {
            "op": "JUMPDEST"
        },
        "5934": {
            "op": "PUSH2",
            "value": "0x1739"
        },
        "5937": {
            "op": "DUP7"
        },
        "5938": {
            "op": "DUP3"
        },
        "5939": {
            "op": "DUP8"
        },
        "5940": {
            "op": "ADD"
        },
        "5941": {
            "op": "PUSH2",
            "value": "0x1473"
        },
        "5944": {
            "jump": "i",
            "op": "JUMP"
        },
        "5945": {
            "op": "JUMPDEST"
        },
        "5946": {
            "op": "SWAP2"
        },
        "5947": {
            "op": "POP"
        },
        "5948": {
            "op": "POP"
        },
        "5949": {
            "op": "SWAP3"
        },
        "5950": {
            "op": "POP"
        },
        "5951": {
            "op": "SWAP3"
        },
        "5952": {
            "op": "POP"
        },
        "5953": {
            "op": "SWAP3"
        },
        "5954": {
            "jump": "o",
            "op": "JUMP"
        },
        "5955": {
            "op": "JUMPDEST"
        },
        "5956": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "5961": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "5963": {
            "op": "SHL"
        },
        "5964": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5966": {
            "op": "MSTORE"
        },
        "5967": {
            "op": "PUSH1",
            "value": "0x32"
        },
        "5969": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "5971": {
            "op": "MSTORE"
        },
        "5972": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "5974": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5976": {
            "op": "REVERT"
        },
        "5977": {
            "op": "JUMPDEST"
        },
        "5978": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "5983": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "5985": {
            "op": "SHL"
        },
        "5986": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5988": {
            "op": "MSTORE"
        },
        "5989": {
            "op": "PUSH1",
            "value": "0x11"
        },
        "5991": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "5993": {
            "op": "MSTORE"
        },
        "5994": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "5996": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5998": {
            "op": "REVERT"
        },
        "5999": {
            "op": "JUMPDEST"
        },
        "6000": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6002": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6004": {
            "op": "DUP3"
        },
        "6005": {
            "op": "ADD"
        },
        "6006": {
            "op": "PUSH2",
            "value": "0x1781"
        },
        "6009": {
            "op": "JUMPI"
        },
        "6010": {
            "op": "PUSH2",
            "value": "0x1781"
        },
        "6013": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6016": {
            "jump": "i",
            "op": "JUMP"
        },
        "6017": {
            "op": "JUMPDEST"
        },
        "6018": {
            "op": "POP"
        },
        "6019": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6021": {
            "op": "ADD"
        },
        "6022": {
            "op": "SWAP1"
        },
        "6023": {
            "jump": "o",
            "op": "JUMP"
        },
        "6024": {
            "op": "JUMPDEST"
        },
        "6025": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6027": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6029": {
            "op": "DUP3"
        },
        "6030": {
            "op": "DUP5"
        },
        "6031": {
            "op": "SUB"
        },
        "6032": {
            "op": "SLT"
        },
        "6033": {
            "op": "ISZERO"
        },
        "6034": {
            "op": "PUSH2",
            "value": "0x179A"
        },
        "6037": {
            "op": "JUMPI"
        },
        "6038": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6040": {
            "op": "DUP1"
        },
        "6041": {
            "op": "REVERT"
        },
        "6042": {
            "op": "JUMPDEST"
        },
        "6043": {
            "op": "DUP2"
        },
        "6044": {
            "op": "MLOAD"
        },
        "6045": {
            "op": "PUSH2",
            "value": "0xAC4"
        },
        "6048": {
            "op": "DUP2"
        },
        "6049": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "6052": {
            "jump": "i",
            "op": "JUMP"
        },
        "6053": {
            "op": "JUMPDEST"
        },
        "6054": {
            "op": "DUP1"
        },
        "6055": {
            "op": "MLOAD"
        },
        "6056": {
            "op": "PUSH2",
            "value": "0xFFFF"
        },
        "6059": {
            "op": "DUP2"
        },
        "6060": {
            "op": "AND"
        },
        "6061": {
            "op": "DUP2"
        },
        "6062": {
            "op": "EQ"
        },
        "6063": {
            "op": "PUSH2",
            "value": "0x1602"
        },
        "6066": {
            "op": "JUMPI"
        },
        "6067": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6069": {
            "op": "DUP1"
        },
        "6070": {
            "op": "REVERT"
        },
        "6071": {
            "op": "JUMPDEST"
        },
        "6072": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6074": {
            "op": "DUP1"
        },
        "6075": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6077": {
            "op": "DUP1"
        },
        "6078": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6080": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6082": {
            "op": "DUP7"
        },
        "6083": {
            "op": "DUP9"
        },
        "6084": {
            "op": "SUB"
        },
        "6085": {
            "op": "SLT"
        },
        "6086": {
            "op": "ISZERO"
        },
        "6087": {
            "op": "PUSH2",
            "value": "0x17CF"
        },
        "6090": {
            "op": "JUMPI"
        },
        "6091": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6093": {
            "op": "DUP1"
        },
        "6094": {
            "op": "REVERT"
        },
        "6095": {
            "op": "JUMPDEST"
        },
        "6096": {
            "op": "DUP6"
        },
        "6097": {
            "op": "MLOAD"
        },
        "6098": {
            "op": "PUSH2",
            "value": "0x17DA"
        },
        "6101": {
            "op": "DUP2"
        },
        "6102": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "6105": {
            "jump": "i",
            "op": "JUMP"
        },
        "6106": {
            "op": "JUMPDEST"
        },
        "6107": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6109": {
            "op": "DUP8"
        },
        "6110": {
            "op": "ADD"
        },
        "6111": {
            "op": "MLOAD"
        },
        "6112": {
            "op": "SWAP1"
        },
        "6113": {
            "op": "SWAP6"
        },
        "6114": {
            "op": "POP"
        },
        "6115": {
            "op": "PUSH2",
            "value": "0x17EB"
        },
        "6118": {
            "op": "DUP2"
        },
        "6119": {
            "op": "PUSH2",
            "value": "0x1607"
        },
        "6122": {
            "jump": "i",
            "op": "JUMP"
        },
        "6123": {
            "op": "JUMPDEST"
        },
        "6124": {
            "op": "SWAP4"
        },
        "6125": {
            "op": "POP"
        },
        "6126": {
            "op": "PUSH2",
            "value": "0x17F9"
        },
        "6129": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6131": {
            "op": "DUP8"
        },
        "6132": {
            "op": "ADD"
        },
        "6133": {
            "op": "PUSH2",
            "value": "0x17A5"
        },
        "6136": {
            "jump": "i",
            "op": "JUMP"
        },
        "6137": {
            "op": "JUMPDEST"
        },
        "6138": {
            "op": "SWAP3"
        },
        "6139": {
            "op": "POP"
        },
        "6140": {
            "op": "PUSH2",
            "value": "0x1807"
        },
        "6143": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6145": {
            "op": "DUP8"
        },
        "6146": {
            "op": "ADD"
        },
        "6147": {
            "op": "PUSH2",
            "value": "0x17A5"
        },
        "6150": {
            "jump": "i",
            "op": "JUMP"
        },
        "6151": {
            "op": "JUMPDEST"
        },
        "6152": {
            "op": "SWAP2"
        },
        "6153": {
            "op": "POP"
        },
        "6154": {
            "op": "PUSH2",
            "value": "0x1815"
        },
        "6157": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "6159": {
            "op": "DUP8"
        },
        "6160": {
            "op": "ADD"
        },
        "6161": {
            "op": "PUSH2",
            "value": "0x17A5"
        },
        "6164": {
            "jump": "i",
            "op": "JUMP"
        },
        "6165": {
            "op": "JUMPDEST"
        },
        "6166": {
            "op": "SWAP1"
        },
        "6167": {
            "op": "POP"
        },
        "6168": {
            "op": "SWAP3"
        },
        "6169": {
            "op": "SWAP6"
        },
        "6170": {
            "op": "POP"
        },
        "6171": {
            "op": "SWAP3"
        },
        "6172": {
            "op": "SWAP6"
        },
        "6173": {
            "op": "SWAP1"
        },
        "6174": {
            "op": "SWAP4"
        },
        "6175": {
            "op": "POP"
        },
        "6176": {
            "jump": "o",
            "op": "JUMP"
        },
        "6177": {
            "op": "JUMPDEST"
        },
        "6178": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6180": {
            "op": "DUP2"
        },
        "6181": {
            "op": "DUP2"
        },
        "6182": {
            "op": "JUMPDEST"
        },
        "6183": {
            "op": "DUP1"
        },
        "6184": {
            "op": "DUP6"
        },
        "6185": {
            "op": "GT"
        },
        "6186": {
            "op": "ISZERO"
        },
        "6187": {
            "op": "PUSH2",
            "value": "0x185C"
        },
        "6190": {
            "op": "JUMPI"
        },
        "6191": {
            "op": "DUP2"
        },
        "6192": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6194": {
            "op": "NOT"
        },
        "6195": {
            "op": "DIV"
        },
        "6196": {
            "op": "DUP3"
        },
        "6197": {
            "op": "GT"
        },
        "6198": {
            "op": "ISZERO"
        },
        "6199": {
            "op": "PUSH2",
            "value": "0x1842"
        },
        "6202": {
            "op": "JUMPI"
        },
        "6203": {
            "op": "PUSH2",
            "value": "0x1842"
        },
        "6206": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6209": {
            "jump": "i",
            "op": "JUMP"
        },
        "6210": {
            "op": "JUMPDEST"
        },
        "6211": {
            "op": "DUP1"
        },
        "6212": {
            "op": "DUP6"
        },
        "6213": {
            "op": "AND"
        },
        "6214": {
            "op": "ISZERO"
        },
        "6215": {
            "op": "PUSH2",
            "value": "0x184F"
        },
        "6218": {
            "op": "JUMPI"
        },
        "6219": {
            "op": "SWAP2"
        },
        "6220": {
            "op": "DUP2"
        },
        "6221": {
            "op": "MUL"
        },
        "6222": {
            "op": "SWAP2"
        },
        "6223": {
            "op": "JUMPDEST"
        },
        "6224": {
            "op": "SWAP4"
        },
        "6225": {
            "op": "DUP5"
        },
        "6226": {
            "op": "SHR"
        },
        "6227": {
            "op": "SWAP4"
        },
        "6228": {
            "op": "SWAP1"
        },
        "6229": {
            "op": "DUP1"
        },
        "6230": {
            "op": "MUL"
        },
        "6231": {
            "op": "SWAP1"
        },
        "6232": {
            "op": "PUSH2",
            "value": "0x1826"
        },
        "6235": {
            "op": "JUMP"
        },
        "6236": {
            "op": "JUMPDEST"
        },
        "6237": {
            "op": "POP"
        },
        "6238": {
            "op": "SWAP3"
        },
        "6239": {
            "op": "POP"
        },
        "6240": {
            "op": "SWAP3"
        },
        "6241": {
            "op": "SWAP1"
        },
        "6242": {
            "op": "POP"
        },
        "6243": {
            "jump": "o",
            "op": "JUMP"
        },
        "6244": {
            "op": "JUMPDEST"
        },
        "6245": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6247": {
            "op": "DUP3"
        },
        "6248": {
            "op": "PUSH2",
            "value": "0x1873"
        },
        "6251": {
            "op": "JUMPI"
        },
        "6252": {
            "op": "POP"
        },
        "6253": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6255": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6258": {
            "op": "JUMP"
        },
        "6259": {
            "op": "JUMPDEST"
        },
        "6260": {
            "op": "DUP2"
        },
        "6261": {
            "op": "PUSH2",
            "value": "0x1880"
        },
        "6264": {
            "op": "JUMPI"
        },
        "6265": {
            "op": "POP"
        },
        "6266": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6268": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6271": {
            "op": "JUMP"
        },
        "6272": {
            "op": "JUMPDEST"
        },
        "6273": {
            "op": "DUP2"
        },
        "6274": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6276": {
            "op": "DUP2"
        },
        "6277": {
            "op": "EQ"
        },
        "6278": {
            "op": "PUSH2",
            "value": "0x1896"
        },
        "6281": {
            "op": "JUMPI"
        },
        "6282": {
            "op": "PUSH1",
            "value": "0x2"
        },
        "6284": {
            "op": "DUP2"
        },
        "6285": {
            "op": "EQ"
        },
        "6286": {
            "op": "PUSH2",
            "value": "0x18A0"
        },
        "6289": {
            "op": "JUMPI"
        },
        "6290": {
            "op": "PUSH2",
            "value": "0x18BC"
        },
        "6293": {
            "op": "JUMP"
        },
        "6294": {
            "op": "JUMPDEST"
        },
        "6295": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6297": {
            "op": "SWAP2"
        },
        "6298": {
            "op": "POP"
        },
        "6299": {
            "op": "POP"
        },
        "6300": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6303": {
            "op": "JUMP"
        },
        "6304": {
            "op": "JUMPDEST"
        },
        "6305": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "6307": {
            "op": "DUP5"
        },
        "6308": {
            "op": "GT"
        },
        "6309": {
            "op": "ISZERO"
        },
        "6310": {
            "op": "PUSH2",
            "value": "0x18B1"
        },
        "6313": {
            "op": "JUMPI"
        },
        "6314": {
            "op": "PUSH2",
            "value": "0x18B1"
        },
        "6317": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6320": {
            "jump": "i",
            "op": "JUMP"
        },
        "6321": {
            "op": "JUMPDEST"
        },
        "6322": {
            "op": "POP"
        },
        "6323": {
            "op": "POP"
        },
        "6324": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6326": {
            "op": "DUP3"
        },
        "6327": {
            "op": "SHL"
        },
        "6328": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6331": {
            "op": "JUMP"
        },
        "6332": {
            "op": "JUMPDEST"
        },
        "6333": {
            "op": "POP"
        },
        "6334": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6336": {
            "op": "DUP4"
        },
        "6337": {
            "op": "LT"
        },
        "6338": {
            "op": "PUSH2",
            "value": "0x133"
        },
        "6341": {
            "op": "DUP4"
        },
        "6342": {
            "op": "LT"
        },
        "6343": {
            "op": "AND"
        },
        "6344": {
            "op": "PUSH1",
            "value": "0x4E"
        },
        "6346": {
            "op": "DUP5"
        },
        "6347": {
            "op": "LT"
        },
        "6348": {
            "op": "PUSH1",
            "value": "0xB"
        },
        "6350": {
            "op": "DUP5"
        },
        "6351": {
            "op": "LT"
        },
        "6352": {
            "op": "AND"
        },
        "6353": {
            "op": "OR"
        },
        "6354": {
            "op": "ISZERO"
        },
        "6355": {
            "op": "PUSH2",
            "value": "0x18DF"
        },
        "6358": {
            "op": "JUMPI"
        },
        "6359": {
            "op": "POP"
        },
        "6360": {
            "op": "DUP2"
        },
        "6361": {
            "op": "DUP2"
        },
        "6362": {
            "op": "EXP"
        },
        "6363": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6366": {
            "op": "JUMP"
        },
        "6367": {
            "op": "JUMPDEST"
        },
        "6368": {
            "op": "PUSH2",
            "value": "0x18E9"
        },
        "6371": {
            "op": "DUP4"
        },
        "6372": {
            "op": "DUP4"
        },
        "6373": {
            "op": "PUSH2",
            "value": "0x1821"
        },
        "6376": {
            "jump": "i",
            "op": "JUMP"
        },
        "6377": {
            "op": "JUMPDEST"
        },
        "6378": {
            "op": "DUP1"
        },
        "6379": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6381": {
            "op": "NOT"
        },
        "6382": {
            "op": "DIV"
        },
        "6383": {
            "op": "DUP3"
        },
        "6384": {
            "op": "GT"
        },
        "6385": {
            "op": "ISZERO"
        },
        "6386": {
            "op": "PUSH2",
            "value": "0x18FD"
        },
        "6389": {
            "op": "JUMPI"
        },
        "6390": {
            "op": "PUSH2",
            "value": "0x18FD"
        },
        "6393": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6396": {
            "jump": "i",
            "op": "JUMP"
        },
        "6397": {
            "op": "JUMPDEST"
        },
        "6398": {
            "op": "MUL"
        },
        "6399": {
            "op": "SWAP4"
        },
        "6400": {
            "op": "SWAP3"
        },
        "6401": {
            "op": "POP"
        },
        "6402": {
            "op": "POP"
        },
        "6403": {
            "op": "POP"
        },
        "6404": {
            "jump": "o",
            "op": "JUMP"
        },
        "6405": {
            "op": "JUMPDEST"
        },
        "6406": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6408": {
            "op": "PUSH2",
            "value": "0xAC4"
        },
        "6411": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "6413": {
            "op": "DUP5"
        },
        "6414": {
            "op": "AND"
        },
        "6415": {
            "op": "DUP4"
        },
        "6416": {
            "op": "PUSH2",
            "value": "0x1864"
        },
        "6419": {
            "jump": "i",
            "op": "JUMP"
        },
        "6420": {
            "op": "JUMPDEST"
        },
        "6421": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6423": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6425": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6427": {
            "op": "SHL"
        },
        "6428": {
            "op": "SUB"
        },
        "6429": {
            "op": "DUP3"
        },
        "6430": {
            "op": "DUP2"
        },
        "6431": {
            "op": "AND"
        },
        "6432": {
            "op": "DUP3"
        },
        "6433": {
            "op": "DUP3"
        },
        "6434": {
            "op": "AND"
        },
        "6435": {
            "op": "SUB"
        },
        "6436": {
            "op": "SWAP1"
        },
        "6437": {
            "op": "DUP1"
        },
        "6438": {
            "op": "DUP3"
        },
        "6439": {
            "op": "GT"
        },
        "6440": {
            "op": "ISZERO"
        },
        "6441": {
            "op": "PUSH2",
            "value": "0x1934"
        },
        "6444": {
            "op": "JUMPI"
        },
        "6445": {
            "op": "PUSH2",
            "value": "0x1934"
        },
        "6448": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6451": {
            "jump": "i",
            "op": "JUMP"
        },
        "6452": {
            "op": "JUMPDEST"
        },
        "6453": {
            "op": "POP"
        },
        "6454": {
            "op": "SWAP3"
        },
        "6455": {
            "op": "SWAP2"
        },
        "6456": {
            "op": "POP"
        },
        "6457": {
            "op": "POP"
        },
        "6458": {
            "jump": "o",
            "op": "JUMP"
        },
        "6459": {
            "op": "JUMPDEST"
        },
        "6460": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6462": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6464": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6466": {
            "op": "SHL"
        },
        "6467": {
            "op": "SUB"
        },
        "6468": {
            "op": "DUP2"
        },
        "6469": {
            "op": "DUP2"
        },
        "6470": {
            "op": "AND"
        },
        "6471": {
            "op": "DUP4"
        },
        "6472": {
            "op": "DUP3"
        },
        "6473": {
            "op": "AND"
        },
        "6474": {
            "op": "ADD"
        },
        "6475": {
            "op": "SWAP1"
        },
        "6476": {
            "op": "DUP1"
        },
        "6477": {
            "op": "DUP3"
        },
        "6478": {
            "op": "GT"
        },
        "6479": {
            "op": "ISZERO"
        },
        "6480": {
            "op": "PUSH2",
            "value": "0x1934"
        },
        "6483": {
            "op": "JUMPI"
        },
        "6484": {
            "op": "PUSH2",
            "value": "0x1934"
        },
        "6487": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6490": {
            "jump": "i",
            "op": "JUMP"
        },
        "6491": {
            "op": "JUMPDEST"
        },
        "6492": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6494": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6496": {
            "op": "DUP1"
        },
        "6497": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6499": {
            "op": "SHL"
        },
        "6500": {
            "op": "SUB"
        },
        "6501": {
            "op": "DUP1"
        },
        "6502": {
            "op": "DUP9"
        },
        "6503": {
            "op": "AND"
        },
        "6504": {
            "op": "DUP4"
        },
        "6505": {
            "op": "MSTORE"
        },
        "6506": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6508": {
            "op": "DUP8"
        },
        "6509": {
            "op": "ISZERO"
        },
        "6510": {
            "op": "ISZERO"
        },
        "6511": {
            "op": "DUP2"
        },
        "6512": {
            "op": "DUP6"
        },
        "6513": {
            "op": "ADD"
        },
        "6514": {
            "op": "MSTORE"
        },
        "6515": {
            "op": "DUP7"
        },
        "6516": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6518": {
            "op": "DUP6"
        },
        "6519": {
            "op": "ADD"
        },
        "6520": {
            "op": "MSTORE"
        },
        "6521": {
            "op": "DUP2"
        },
        "6522": {
            "op": "DUP7"
        },
        "6523": {
            "op": "AND"
        },
        "6524": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6526": {
            "op": "DUP6"
        },
        "6527": {
            "op": "ADD"
        },
        "6528": {
            "op": "MSTORE"
        },
        "6529": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6531": {
            "op": "PUSH1",
            "value": "0x80"
        },
        "6533": {
            "op": "DUP6"
        },
        "6534": {
            "op": "ADD"
        },
        "6535": {
            "op": "MSTORE"
        },
        "6536": {
            "op": "DUP5"
        },
        "6537": {
            "op": "MLOAD"
        },
        "6538": {
            "op": "SWAP2"
        },
        "6539": {
            "op": "POP"
        },
        "6540": {
            "op": "DUP2"
        },
        "6541": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6543": {
            "op": "DUP6"
        },
        "6544": {
            "op": "ADD"
        },
        "6545": {
            "op": "MSTORE"
        },
        "6546": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6548": {
            "op": "JUMPDEST"
        },
        "6549": {
            "op": "DUP3"
        },
        "6550": {
            "op": "DUP2"
        },
        "6551": {
            "op": "LT"
        },
        "6552": {
            "op": "ISZERO"
        },
        "6553": {
            "op": "PUSH2",
            "value": "0x19B0"
        },
        "6556": {
            "op": "JUMPI"
        },
        "6557": {
            "op": "DUP6"
        },
        "6558": {
            "op": "DUP2"
        },
        "6559": {
            "op": "ADD"
        },
        "6560": {
            "op": "DUP3"
        },
        "6561": {
            "op": "ADD"
        },
        "6562": {
            "op": "MLOAD"
        },
        "6563": {
            "op": "DUP6"
        },
        "6564": {
            "op": "DUP3"
        },
        "6565": {
            "op": "ADD"
        },
        "6566": {
            "op": "PUSH1",
            "value": "0xC0"
        },
        "6568": {
            "op": "ADD"
        },
        "6569": {
            "op": "MSTORE"
        },
        "6570": {
            "op": "DUP2"
        },
        "6571": {
            "op": "ADD"
        },
        "6572": {
            "op": "PUSH2",
            "value": "0x1994"
        },
        "6575": {
            "op": "JUMP"
        },
        "6576": {
            "op": "JUMPDEST"
        },
        "6577": {
            "op": "POP"
        },
        "6578": {
            "op": "POP"
        },
        "6579": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6581": {
            "op": "PUSH1",
            "value": "0xC0"
        },
        "6583": {
            "op": "DUP3"
        },
        "6584": {
            "op": "DUP6"
        },
        "6585": {
            "op": "ADD"
        },
        "6586": {
            "op": "ADD"
        },
        "6587": {
            "op": "MSTORE"
        },
        "6588": {
            "op": "PUSH1",
            "value": "0xC0"
        },
        "6590": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6592": {
            "op": "NOT"
        },
        "6593": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6595": {
            "op": "DUP4"
        },
        "6596": {
            "op": "ADD"
        },
        "6597": {
            "op": "AND"
        },
        "6598": {
            "op": "DUP5"
        },
        "6599": {
            "op": "ADD"
        },
        "6600": {
            "op": "ADD"
        },
        "6601": {
            "op": "SWAP2"
        },
        "6602": {
            "op": "POP"
        },
        "6603": {
            "op": "POP"
        },
        "6604": {
            "op": "SWAP7"
        },
        "6605": {
            "op": "SWAP6"
        },
        "6606": {
            "op": "POP"
        },
        "6607": {
            "op": "POP"
        },
        "6608": {
            "op": "POP"
        },
        "6609": {
            "op": "POP"
        },
        "6610": {
            "op": "POP"
        },
        "6611": {
            "op": "POP"
        },
        "6612": {
            "jump": "o",
            "op": "JUMP"
        },
        "6613": {
            "op": "JUMPDEST"
        },
        "6614": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6616": {
            "op": "DUP1"
        },
        "6617": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6619": {
            "op": "DUP4"
        },
        "6620": {
            "op": "DUP6"
        },
        "6621": {
            "op": "SUB"
        },
        "6622": {
            "op": "SLT"
        },
        "6623": {
            "op": "ISZERO"
        },
        "6624": {
            "op": "PUSH2",
            "value": "0x19E8"
        },
        "6627": {
            "op": "JUMPI"
        },
        "6628": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6630": {
            "op": "DUP1"
        },
        "6631": {
            "op": "REVERT"
        },
        "6632": {
            "op": "JUMPDEST"
        },
        "6633": {
            "op": "POP"
        },
        "6634": {
            "op": "POP"
        },
        "6635": {
            "op": "DUP1"
        },
        "6636": {
            "op": "MLOAD"
        },
        "6637": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6639": {
            "op": "SWAP1"
        },
        "6640": {
            "op": "SWAP2"
        },
        "6641": {
            "op": "ADD"
        },
        "6642": {
            "op": "MLOAD"
        },
        "6643": {
            "op": "SWAP1"
        },
        "6644": {
            "op": "SWAP3"
        },
        "6645": {
            "op": "SWAP1"
        },
        "6646": {
            "op": "SWAP2"
        },
        "6647": {
            "op": "POP"
        },
        "6648": {
            "jump": "o",
            "op": "JUMP"
        },
        "6649": {
            "op": "JUMPDEST"
        },
        "6650": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6652": {
            "op": "DUP1"
        },
        "6653": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6655": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6657": {
            "op": "DUP5"
        },
        "6658": {
            "op": "DUP7"
        },
        "6659": {
            "op": "SUB"
        },
        "6660": {
            "op": "SLT"
        },
        "6661": {
            "op": "ISZERO"
        },
        "6662": {
            "op": "PUSH2",
            "value": "0x1A0E"
        },
        "6665": {
            "op": "JUMPI"
        },
        "6666": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6668": {
            "op": "DUP1"
        },
        "6669": {
            "op": "REVERT"
        },
        "6670": {
            "op": "JUMPDEST"
        },
        "6671": {
            "op": "DUP4"
        },
        "6672": {
            "op": "MLOAD"
        },
        "6673": {
            "op": "SWAP3"
        },
        "6674": {
            "op": "POP"
        },
        "6675": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6677": {
            "op": "DUP5"
        },
        "6678": {
            "op": "ADD"
        },
        "6679": {
            "op": "MLOAD"
        },
        "6680": {
            "op": "PUSH2",
            "value": "0x1A20"
        },
        "6683": {
            "op": "DUP2"
        },
        "6684": {
            "op": "PUSH2",
            "value": "0x15D7"
        },
        "6687": {
            "jump": "i",
            "op": "JUMP"
        },
        "6688": {
            "op": "JUMPDEST"
        },
        "6689": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6691": {
            "op": "DUP6"
        },
        "6692": {
            "op": "ADD"
        },
        "6693": {
            "op": "MLOAD"
        },
        "6694": {
            "op": "SWAP1"
        },
        "6695": {
            "op": "SWAP3"
        },
        "6696": {
            "op": "POP"
        },
        "6697": {
            "op": "PUSH2",
            "value": "0x1A31"
        },
        "6700": {
            "op": "DUP2"
        },
        "6701": {
            "op": "PUSH2",
            "value": "0x1607"
        },
        "6704": {
            "jump": "i",
            "op": "JUMP"
        },
        "6705": {
            "op": "JUMPDEST"
        },
        "6706": {
            "op": "DUP1"
        },
        "6707": {
            "op": "SWAP2"
        },
        "6708": {
            "op": "POP"
        },
        "6709": {
            "op": "POP"
        },
        "6710": {
            "op": "SWAP3"
        },
        "6711": {
            "op": "POP"
        },
        "6712": {
            "op": "SWAP3"
        },
        "6713": {
            "op": "POP"
        },
        "6714": {
            "op": "SWAP3"
        },
        "6715": {
            "jump": "o",
            "op": "JUMP"
        },
        "6716": {
            "op": "JUMPDEST"
        },
        "6717": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6719": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6721": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "6723": {
            "op": "SHL"
        },
        "6724": {
            "op": "DUP3"
        },
        "6725": {
            "op": "ADD"
        },
        "6726": {
            "op": "PUSH2",
            "value": "0x1A51"
        },
        "6729": {
            "op": "JUMPI"
        },
        "6730": {
            "op": "PUSH2",
            "value": "0x1A51"
        },
        "6733": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6736": {
            "jump": "i",
            "op": "JUMP"
        },
        "6737": {
            "op": "JUMPDEST"
        },
        "6738": {
            "op": "POP"
        },
        "6739": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6741": {
            "op": "SUB"
        },
        "6742": {
            "op": "SWAP1"
        },
        "6743": {
            "jump": "o",
            "op": "JUMP"
        },
        "6744": {
            "op": "JUMPDEST"
        },
        "6745": {
            "op": "DUP1"
        },
        "6746": {
            "op": "DUP3"
        },
        "6747": {
            "op": "ADD"
        },
        "6748": {
            "op": "DUP1"
        },
        "6749": {
            "op": "DUP3"
        },
        "6750": {
            "op": "GT"
        },
        "6751": {
            "op": "ISZERO"
        },
        "6752": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6755": {
            "op": "JUMPI"
        },
        "6756": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6759": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6762": {
            "jump": "i",
            "op": "JUMP"
        },
        "6763": {
            "op": "JUMPDEST"
        },
        "6764": {
            "op": "DUP2"
        },
        "6765": {
            "op": "DUP2"
        },
        "6766": {
            "op": "SUB"
        },
        "6767": {
            "op": "DUP2"
        },
        "6768": {
            "op": "DUP2"
        },
        "6769": {
            "op": "GT"
        },
        "6770": {
            "op": "ISZERO"
        },
        "6771": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6774": {
            "op": "JUMPI"
        },
        "6775": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6778": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6781": {
            "jump": "i",
            "op": "JUMP"
        },
        "6782": {
            "op": "JUMPDEST"
        },
        "6783": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6788": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6790": {
            "op": "SHL"
        },
        "6791": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6793": {
            "op": "MSTORE"
        },
        "6794": {
            "op": "PUSH1",
            "value": "0x12"
        },
        "6796": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6798": {
            "op": "MSTORE"
        },
        "6799": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6801": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6803": {
            "op": "REVERT"
        },
        "6804": {
            "op": "JUMPDEST"
        },
        "6805": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6807": {
            "op": "DUP3"
        },
        "6808": {
            "op": "PUSH2",
            "value": "0x1AA3"
        },
        "6811": {
            "op": "JUMPI"
        },
        "6812": {
            "op": "PUSH2",
            "value": "0x1AA3"
        },
        "6815": {
            "op": "PUSH2",
            "value": "0x1A7E"
        },
        "6818": {
            "jump": "i",
            "op": "JUMP"
        },
        "6819": {
            "op": "JUMPDEST"
        },
        "6820": {
            "op": "POP"
        },
        "6821": {
            "op": "DIV"
        },
        "6822": {
            "op": "SWAP1"
        },
        "6823": {
            "jump": "o",
            "op": "JUMP"
        },
        "6824": {
            "op": "JUMPDEST"
        },
        "6825": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6827": {
            "op": "DUP2"
        },
        "6828": {
            "op": "PUSH1",
            "value": "0x2"
        },
        "6830": {
            "op": "SIGNEXTEND"
        },
        "6831": {
            "op": "PUSH3",
            "value": "0x7FFFFF"
        },
        "6835": {
            "op": "NOT"
        },
        "6836": {
            "op": "DUP2"
        },
        "6837": {
            "op": "SUB"
        },
        "6838": {
            "op": "PUSH2",
            "value": "0x1AC1"
        },
        "6841": {
            "op": "JUMPI"
        },
        "6842": {
            "op": "PUSH2",
            "value": "0x1AC1"
        },
        "6845": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6848": {
            "jump": "i",
            "op": "JUMP"
        },
        "6849": {
            "op": "JUMPDEST"
        },
        "6850": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6852": {
            "op": "SUB"
        },
        "6853": {
            "op": "SWAP3"
        },
        "6854": {
            "op": "SWAP2"
        },
        "6855": {
            "op": "POP"
        },
        "6856": {
            "op": "POP"
        },
        "6857": {
            "jump": "o",
            "op": "JUMP"
        },
        "6858": {
            "op": "JUMPDEST"
        },
        "6859": {
            "op": "DUP1"
        },
        "6860": {
            "op": "DUP3"
        },
        "6861": {
            "op": "MUL"
        },
        "6862": {
            "op": "DUP2"
        },
        "6863": {
            "op": "ISZERO"
        },
        "6864": {
            "op": "DUP3"
        },
        "6865": {
            "op": "DUP3"
        },
        "6866": {
            "op": "DIV"
        },
        "6867": {
            "op": "DUP5"
        },
        "6868": {
            "op": "EQ"
        },
        "6869": {
            "op": "OR"
        },
        "6870": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6873": {
            "op": "JUMPI"
        },
        "6874": {
            "op": "PUSH2",
            "value": "0x9D3"
        },
        "6877": {
            "op": "PUSH2",
            "value": "0x1759"
        },
        "6880": {
            "jump": "i",
            "op": "JUMP"
        },
        "6881": {
            "op": "JUMPDEST"
        },
        "6882": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6884": {
            "op": "DUP3"
        },
        "6885": {
            "op": "PUSH2",
            "value": "0x1AF0"
        },
        "6888": {
            "op": "JUMPI"
        },
        "6889": {
            "op": "PUSH2",
            "value": "0x1AF0"
        },
        "6892": {
            "op": "PUSH2",
            "value": "0x1A7E"
        },
        "6895": {
            "jump": "i",
            "op": "JUMP"
        },
        "6896": {
            "op": "JUMPDEST"
        },
        "6897": {
            "op": "POP"
        },
        "6898": {
            "op": "MOD"
        },
        "6899": {
            "op": "SWAP1"
        },
        "6900": {
            "jump": "o",
            "op": "JUMP"
        }
    },
    "sha1": "0e8f23343b993b772a74d352f82fd2e81430219e",
    "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nimport \"./HelpFunctions.sol\";\nimport \"./PoolFactory.sol\";\n\nimport \"../interface_contracts/IUniswapV3Pool.sol\";\n\nimport \"./lib/Math.sol\";\nimport \"./lib/Path.sol\";\nimport \"./lib/PoolAddress.sol\";\nimport \"./lib/TickMath.sol\";\nimport \"./lib/LiquidityMath.sol\";\n\ncontract Quoter {\n    using Path for bytes;\n\n    address public immutable factory;\n    PoolFactory poolfactory;\n\n    constructor(address factory_) {\n        factory = factory_;\n        poolfactory = PoolFactory(factory);\n    }\n\n    /*\n    External\n     */\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes memory data\n    ) external view {\n        address pool = abi.decode(data, (address));\n        uint256 amountOut = amount0Delta > 0\n            ? uint256(-amount1Delta)\n            : uint256(-amount0Delta);\n        (uint160 sqrtPriceX96After, int24 tickAfter, , , ) = IUniswapV3Pool(\n            pool\n        ).slot0();\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, amountOut)\n            mstore(add(ptr, 0x20), sqrtPriceX96After)\n            mstore(add(ptr, 0x40), tickAfter)\n            revert(ptr, 96)\n        }\n    }\n\n    /*\n    Public\n     */\n    function quoteMulti(\n        bytes memory path,\n        uint256 amountIn\n    )\n        public\n        returns (\n            uint256 amountOut,\n            uint160[] memory sqrtPriceX96AfterList,\n            int24[] memory tickAfterList\n        )\n    {\n        sqrtPriceX96AfterList = new uint160[](path.numPools());\n        tickAfterList = new int24[](path.numPools());\n\n        uint256 i = 0;\n        while (true) {\n            (address tokenIn, address tokenOut, uint24 fee) = path\n                .decodeFirstPool();\n\n            (\n                uint256 amountOut_,\n                uint160 sqrtPriceX96After,\n                int24 tickAfter\n            ) = quoteSingle(tokenIn, tokenOut, fee,  amountIn, 0\n                );\n\n            sqrtPriceX96AfterList[i] = sqrtPriceX96After;\n            tickAfterList[i] = tickAfter;\n            amountIn = amountOut_;\n            i++;\n\n            if (path.hasMultiplePools()) {\n                path = path.skipToken();\n            } else {\n                amountOut = amountIn;\n                break;\n            }\n        }\n    }\n\n    function quoteSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountIn,\n        uint160 sqrtPriceLimitX96\n    )\n        public\n        returns (uint256 amountOut, uint160 sqrtPriceX96After, int24 tickAfter)\n    {\n        IUniswapV3Pool pool = IUniswapV3Pool(poolfactory.pools(\n            tokenIn,\n            tokenOut,\n            fee\n        )); \n \n        bool zeroForOne = tokenIn < tokenOut;\n\n        try\n            pool.swap(\n                address(this),\n                zeroForOne,\n                amountIn,\n                sqrtPriceLimitX96 == 0\n                    ? (\n                        zeroForOne\n                            ? TickMath.MIN_SQRT_RATIO + 1\n                            : TickMath.MAX_SQRT_RATIO - 1\n                    )\n                    : sqrtPriceLimitX96,\n                abi.encode(address(pool))\n            )\n        {} catch (bytes memory reason) {\n            bytes32 hashedRes = keccak256(reason);\n            if (keccak256(abi.encodeWithSignature(\"InvalidPriceLimit()\")) == hashedRes) {\n                revert('InvalidPriceLimit');\n            }else if (keccak256(abi.encodeWithSignature(\"NotEnoughLiquidity()\")) == hashedRes){\n                revert('NotEnoughLiquidity');\n            }\n            return abi.decode(reason, (uint256, uint160, int24));\n        } \n    }\n\n    /*\n    Public - View\n     */\n    function quoteLiqInputToken0(\n                address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        int24 lowerTick,\n        int24 upperTick,\n        uint256 amountInDesired\n    ) public view returns (uint256 amount1) {\n        IUniswapV3Pool pool = HelpFunctions._getPool(\n            factory,\n            tokenIn,\n            tokenOut,\n            fee\n        );\n\n        (uint160 sqrtPriceX96, int24 tick, , , ) = pool.slot0();\n\n        if (tick < upperTick && tick > lowerTick) {\n            amount1 = Math.mulDivRoundingUp(\n                uint256(sqrtPriceX96),\n                uint256(amountInDesired),\n                uint256(2 ** 96)\n            );\n\n            uint128 liquidity = _getLiquidity(\n                lowerTick,\n                upperTick,\n                sqrtPriceX96,\n                amountInDesired,\n                amount1 ** 2\n            );\n\n            amount1 = Math.calcAmount1Delta(\n                TickMath.getSqrtRatioAtTick(lowerTick),\n                sqrtPriceX96,\n                liquidity,\n                false\n            );\n        }\n    }\n\n    function quoteLiqInputToken1(\n                address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        int24 lowerTick,\n        int24 upperTick,\n        uint256 amountInDesired\n    ) public view returns (uint256 amount0) {\n        IUniswapV3Pool pool = HelpFunctions._getPool(\n            factory,\n            tokenIn,\n            tokenOut,\n            fee\n        );\n\n        (uint160 sqrtPriceX96, int24 tick, , , ) = pool.slot0();\n\n        if (tick < upperTick && tick > lowerTick) {\n            amount0 = Math.divRoundingUp(\n                amountInDesired,\n                Math.divRoundingUp(uint256(sqrtPriceX96), uint256(2 ** 96))\n            );\n\n            uint128 liquidity = _getLiquidity(\n                lowerTick,\n                upperTick,\n                sqrtPriceX96,\n                amount0 ** 2,\n                amountInDesired\n            );\n\n            amount0 = Math.calcAmount0Delta(\n                sqrtPriceX96,\n                TickMath.getSqrtRatioAtTick(upperTick),\n                liquidity,\n                false\n            );\n        }\n    }\n\n    /*\n    Internal - Pure\n     */\n    function _getLiquidity(\n        int24 lowerTick,\n        int24 upperTick,\n        uint160 sqrtPriceX96,\n        uint256 amountInDesired,\n        uint256 amountOutDesired\n    ) internal pure returns (uint128 liquidity) {\n        liquidity = LiquidityMath.getLiquidityForAmounts(\n            sqrtPriceX96,\n            TickMath.getSqrtRatioAtTick(lowerTick),\n            TickMath.getSqrtRatioAtTick(upperTick),\n            amountInDesired,\n            amountOutDesired\n        );\n    }\n}\n",
    "sourceMap": "321:6147:3:-:0;;;438:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;478:18:3;;;;;506:11;:34;;-1:-1:-1;;;;;;506:34:3;;;;;;321:6147;;14:290:28;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:28;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:28:o;:::-;321:6147:3;;;;;;;;;;;;;;;;;;;;;;",
    "sourcePath": "contracts/Quoter.sol",
    "type": "contract"
}